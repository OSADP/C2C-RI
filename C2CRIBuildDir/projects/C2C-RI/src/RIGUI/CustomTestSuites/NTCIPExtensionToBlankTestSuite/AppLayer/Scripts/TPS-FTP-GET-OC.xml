<?xml version="1.0" ?> 
<!--   
       Title:  TPS-FTP-GET-OC
       Description:  This test procedure is called by a test case and is used to verify a SUTs conformance to the FTP encoding and 
                     transport subprofiles of NTCIP 2306 when acting as an OC. This procedure supports verification of requirements related to 
                     user needs 3 (FTP Profile) and is used for both valid and invalid test cases.
       Version/Date: 2012/02/03 12:44 (Manual)
-->

<testprocedure xmlns="jelly:jameleon"  xmlns:jl="jelly:core" >
<test-case-id>${C2CRITestCaseID}</test-case-id>
<test-case-summary>This test procedure is called by a test case and is used to verify a SUTs conformance to the FTP encoding and transport subprofiles of NTCIP 2306 when acting as an OC. 
This procedure supports verification of requirements related to user needs 3 (FTP Profile) and is used for both valid and invalid test cases.</test-case-summary>


<NTCIP2306-session testCaseIdentifier="${C2CRITestCaseID}" riMode="EC" wsdlURL="${WSDLFile}">

<testStep functionId = "Step 1 CONFIGURE: Identify the WSDL file that will define the one-way Get operation used during the test.  RECORD the WSDL File Name value as: ${WSDLFile}"  passfailResult="False"/>
<testStep functionId = "Step 2 CONFIGURE: Identify the FTP related Service defined in the WSDL that will be used for the one-way Get operation during the test.  RECORD the Service name value as: ${ServiceName}"  passfailResult="False"/>
<testStep functionId = "Step 3 CONFIGURE: Identify the port related to the FTP Get service that will used during the test.  RECORD this value as: ${PortName} "  passfailResult="False"/>
<testStep functionId = "Step 4 CONFIGURE: Select a Get operation related to the FTP Service selected to be used for the test.  RECORD this value as: ${OperationName}"  passfailResult="False"/>
<testStep functionId = "Step 5 CONFIGURE: Specify the path name that will be used in the Get operation related to the FTP Service selected to be used for the test.  RECORD this value as: ${PathName}"  passfailResult="False"/>
<testStep functionId = "Step 6 CONFIGURE: Determine whether an FTP transport error is expected during this test.  RECORD this value as: ${TransportErrorExpected}"  passfailResult="False"/>
<testStep functionId = "Step 7 CONFIGURE: IF TransPortErrorExpected =True THEN RECORD the expected FTP transport error code as: ${TransportErrorTypeExpected}" passfailResult="False"/>
<testStep functionId = "Step 8 CONFIGURE: Determine whether an encoding error is expected during this test.  RECORD this value as: ${EncodingErrorExpected}"  passfailResult="False"/>
<testStep functionId = "Step 9 CONFIGURE: Determine whether an XML message error is expected during this test.  RECORD this value as: ${MessageErrorExpected}"  passfailResult="False"/>
<testStep functionId = "Step 10 CONFIGURE: IF MessageErrorExpected =True THEN RECORD the expected type of message error as: ${MessageErrorTypeExpected}"  passfailResult="False"/>
<testStep functionId = "Step 11 CONFIGURE: Prepare the SUT to provide the specified FTP service. "  passfailResult="False"/>

<testStep functionId = "Step 12 FTP-GET-EC with the following parameter(s): WSDLFILE = WSDLFile, SERVICENAME = ${ServiceName}, PORTNAME = ${PortName}, PATHNAME = ${PathName}, OPERATIONNAME = ${OperationName}, USERNAME=UserName {Optional}, PASSWORD=Password{Optional}   Returns: TRANSPORTERRORRESULT, TRANSPORTERRORTYPE, ENCODINGFAILURERESULT, MESSAGEERRORRESULT, MESSAGEERRORTYPE"  passfailResult="False">
	<FTP-GET-EC functionId="FTP-GET-EC" WSDLFILE="${WSDLFile}" SERVICENAME="${ServiceName}" PORTNAME="${PortName}" OPERATIONNAME="${OperationName}" PATHNAME="${PathName}"/>
</testStep>

<testStep functionId = "Step 13 IF TransportErrorExpected =False THEN CONTINUE; OTHERWISE skip the following sub steps."  passfailResult="False"/>
<jl:if test="${!TransportErrorExpected}">

	<testStep functionId = "Step 13.1 VERIFY that TRANSPORTERRORRESULT = False" >
           <ju-assert-true functionId="Verify the TRANSPORTERRORRESULT" msg="Error: TRANSPORTERRORRESULT was true with TRANSPORTERRORTYPE ${TRANSPORTERRORTYPE}." test="${!TRANSPORTERRORRESULT}"/>
      </testStep>

	<testStep functionId = "Step 13.2 IF ENCODINGFAILURERESULT = False THEN CONTINUE; OTHERWISE skip the following sub steps."  passfailResult="False"/>
	<jl:if test="${!ENCODINGFAILURERESULT}">

		<testStep functionId = "Step 13.2.1 VERIFY that EncodingErrorExpected = False" >
                      <ju-assert-true functionId="Verify the EncodingErrorExpected" msg="Error: EncodingErrorExpected was true" test="${!EncodingErrorExpected}"/>
            </testStep>

		<testStep functionId = "Step 13.2.2 IF MessageErrorExpected = False THEN CONTINUE; OTHERWISE skip the following sub steps."  passfailResult="False"/>
		<jl:if test="${!MessageErrorExpected}">
			<testStep functionId = "Step 13.2.2.1 VERIFY that MESSAGEERRORRESULT = False" >
                      <ju-assert-true functionId="Verify the MESSAGEERRORRESULT" test="${!MESSAGEERRORRESULT}"/>
			</testStep>
  		</jl:if>

	      <testStep functionId = "Step 13.2.2.2 IF MessageErrorExpected = True THEN CONTINUE; OTHERWISE skip the following sub steps."  passfailResult="False"/>
		<jl:if test="${MessageErrorExpected}">
			<testStep functionId = "Step 13.2.2.2.1 VERIFY that MESSAGEERRORTYPE = MessageErrorTypeExpected" >
                        <ju-assert-equals functionId="Verify the MESSAGEERRORTYPE" msg="Error: MessageErrorTypeExpected was ${MessageErrorTypeExpected} while MESSAGEERRORTYPE was ${MESSAGEERRORTYPE}."  actual="${MESSAGEERRORTYPE}" expected="${MessageErrorTypeExpected}"/>
			</testStep>
	  	</jl:if>


	</jl:if>

</jl:if>

<testStep functionId = "Step 14 IF TransportErrorExpected =True THEN CONTINUE; OTHERWISE skip the following sub steps."  passfailResult="False"/>
<jl:if test="${TransportErrorExpected}">
	<testStep functionId = "Step 14.1 VERIFY that TRANSPORTERRORTYPE = TransportErrorTypeExpected" >
            <ju-assert-equals functionId="Verify the TRANSPORTERRORTYPE" msg="Error: TransportErrorTypeExpected was ${TransportErrorTypeExpected} while TRANSPORTERRORTYPE was ${TRANSPORTERRORTYPE}." actual="${TRANSPORTERRORTYPE}" expected="${TransportErrorTypeExpected}"/>
      </testStep>
</jl:if>

</NTCIP2306-session>
</testprocedure>