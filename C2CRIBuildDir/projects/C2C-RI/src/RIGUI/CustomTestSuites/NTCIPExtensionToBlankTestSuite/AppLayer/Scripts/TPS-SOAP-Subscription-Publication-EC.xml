<?xml version="1.0" ?> 
<!--   
       Title:  TPS-NTCIP2306-SOAP-Subscription-Publication-EC
       Description:  This test procedure is called by a test case and is used to verify a SUTs conformance to the SOAP Profiles encoding and transport (HTTP and HTTPS) subprofiles of NTCIP 2306 when acting as an EC using the Subscription-Publication pattern. 
                     This procedure supports verification of requirements related to user need 1 (SOAP) and is used for both valid and invalid test cases.
       Version/Date: 2012/02/04 20:50 (Manual)
-->

<testprocedure xmlns="jelly:jameleon"  xmlns:jl="jelly:core" >
<test-case-id>${C2CRITestCaseID}</test-case-id>
<test-case-summary>This test procedure is called by a test case and is used to verify a SUTs conformance to the SOAP Profiles encoding and transport (HTTP and HTTPS) subprofiles of NTCIP 2306 when acting as an EC using the Subscription-Publication pattern. This procedure supports verification of requirements related to user need 1 (SOAP) and is used for both valid and invalid test cases.
</test-case-summary>


<NTCIP2306-session testCaseIdentifier="${C2CRITestCaseID}" riMode="OC" wsdlURL="${WSDLFile}">


<testStep functionId = "Step 1 CONFIGURE: Identify the WSDL file that will define the Subscription and Publication operations used during the test.  RECORD the WSDL File Name value as: WSDLFile = ${WSDLFile}"   passfailResult="False"/>
<testStep functionId = "Step 2 CONFIGURE: Identify the SOAP related Service defined in the WSDL that will be used for the Subscriptions during the test.  The service must contain a port that matches the selected Transport option(s).  RECORD the Service name value as: SubscriptionServiceName = ${SubscriptionServiceName}"   passfailResult="False"/>
<testStep functionId = "Step 3 CONFIGURE: Identify the port related to the SOAP Subscription service that will used during the test.  If NTCIP2306_N1R4_Message_Transport_Flag is true the any port utilizing the http protocol may be selected.  If NTCIP2306_N1R5_Message_Transport_HTTPS_Flag is true then any port utilizing the https protocol may be selected.  RECORD this value as: SubscriptionPortName =${SubscriptionPortName}"   passfailResult="False"/>
<testStep functionId = "Step 4 CONFIGURE: Select a Subscription operation related to the SOAP Service selected to be used for the test.  RECORD this value as: SubscriptionOperation = ${SubscriptionOperation}"   passfailResult="False"/>
<testStep functionId = "Step 5 CONFIGURE: Determine whether an encoding error is expected during this test.  RECORD this value as SubscriptionEncodingErrorExpected = ${SubscriptionEncodingErrorExpected}"   passfailResult="False"/>
<testStep functionId = "Step 6 CONFIGURE: Determine whether an XML message error is expected during this test.  RECORD this value as SubscriptionMessageErrorExpected = ${SubscriptionMessageErrorExpected}"   passfailResult="False"/>
<testStep functionId = "Step 7 CONFIGURE: IF SubscriptionMessageErrorExpected =True THEN RECORD the expected type of message error as: SubscriptionMessageErrorTypeExpected = ${SubscriptionMessageErrorTypeExpected}"   passfailResult="False"/>
<testStep functionId = "Step 8 CONFIGURE: Identify the SOAP related Service defined in the WSDL that will support publications during the test.  RECORD this value as: PublicationServiceName = ${PublicationServiceName}"   passfailResult="False"/>
<testStep functionId = "Step 9 CONFIGURE: Select a Publication operation related to the SOAP Service selected to be used for the test.  RECORD this value as: PublicationOperation = ${PublicationOperation}"   passfailResult="False"/>
<testStep functionId = "Step 10 CONFIGURE: Determine the XML message(s) to be returned during this test.  RECORD this value as PublicationMessage = ${PublicationMessage}"   passfailResult="False"/>
<testStep functionId = "Step 11 CONFIGURE: Determine whether an encoding error is expected during this test.  RECORD this value as PublicationEncodingErrorExpected = ${PublicationEncodingErrorExpected}"   passfailResult="False"/>
<testStep functionId = "Step 12 CONFIGURE: Determine whether an XML message error is expected during the publication portion of this test.  RECORD this value as PublicationMessageErrorExpected = ${PublicationMessageErrorExpected}"   passfailResult="False"/>
<testStep functionId = "Step 13 CONFIGURE: IF PublicationMessageErrorExpected =True THEN RECORD the expected type of message error as: PublicationMessageErrorTypeExpected = ${PublicationMessageErrorTypeExpected}"   passfailResult="False"/>

<testStep functionId = "Step 14 SOAP-SUB-OC with the following parameter(s): WSDLFILE = WSDLFile, SUBSCRIPTIONSERVICENAME = SubscriptionServiceName, SUBSCRIPTIONPORTNAME = SubscriptionPortName, SUBSCRIPTIONOPERATIONNAME = SubscriptionOperationName   Returns CONTINUEPUBLICATION, TRANSPORTERRORRESULT, TRANSPORTERRORTYPE, ENCODINGERRORRESULT, MESSAGEERRORRESULT, MESSAGEERRORTYPE"  >
	<SOAP-SUB-OC functionId="SOAP-SUB-OC" WSDLFILE="${WSDLFile}" SUBSCRIPTIONSERVICENAME="${SubscriptionServiceName}" SUBSCRIPTIONPORTNAME="${SubscriptionPortName}" SUBSCRIPTIONOPERATIONNAME="${SubscriptionOperationName}"/>
        <jl:if test="${TRANSPORTERRORRESULT}" >
  	   <ri-terminate functionId="Transport Error Encountered" Message="Transport Error Encountered: ${TRANSPORTERRORTYPE}." />
        </jl:if>
</testStep>


<testStep functionId = "Step 15 IF ENCODINGERRORRESULT = True THEN CONTINUE; OTHERWISE skip the following sub steps."   passfailResult="False"/>
	<jl:if test="${ENCODINGERRORRESULT}" >
		<testStep functionId = "Step 15.1 VERIFY that SubscriptionEncodingErrorExpected = ENCODINGERRORRESULT" >
                   <ju-assert-equals functionId="Verify the ENCODINGERRORRESULT" msg="Error: SubscriptionEncodingErrorExpected was ${SubscriptionEncodingErrorExpected} while ENCODINGERRORRESULT was ${ENCODINGERRORRESULT}." expected="${SubscriptionEncodingErrorExpected}" actual="${ENCODINGERRORRESULT}"/>
		</testStep>
		<testStep functionId = "Step 15.2 IF SubscriptionMessageErrorExpected = False THEN CONTINUE; OTHERWISE skip the following sub steps."   passfailResult="False"/>
		<jl:if test="${!SubscriptionMessageErrorExpected}" >
			<testStep functionId = "Step 15.2.1 VERIFY that MESSAGEERRORRESULT = False" >
                           <ju-assert-true functionId="Verify the MESSAGEERRORRESULT" msg="Error: MESSAGEERRORRESULT was ${MESSAGEERRORRESULT} with type ${MESSAGEERRORTYPE}." test="${!MESSAGEERRORRESULT}"/>
                        </testStep>
		</jl:if>
		<testStep functionId = "Step 15.3 IF SubscriptionMessageErrorExpected = True THEN CONTINUE; OTHERWISE skip the following sub steps."   passfailResult="False"/>
		<jl:if test="${SubscriptionMessageErrorExpected}" >
			<testStep functionId = "Step 15.3.1 VERIFY that MESSAGEERRORTYPE = SubscriptionMessageErrorTypeExpected" >
                           <ju-assert-equals functionId="Verify the MESSAGEERRORTYPE" msg="Error: SubscriptionMessageErrorTypeExpected was ${SubscriptionMessageErrorTypeExpected} with MESSAGEERRORTYPE ${MESSAGEERRORTYPE}." expected="${SubscriptionMessageErrorTypeExpected}" actual="${MESSAGEERRORTYPE}"/>
                        </testStep>
		</jl:if>
	</jl:if>

<testStep functionId = "Step 16 WHILE CONTINUEPUBLICATION is not True perform the following sub steps"   passfailResult="False"/>
<jl:while test="${CONTINUEPUBLICATION}" >
	<testStep functionId = "Step 16.1 SOAP-PUB-OC with the following parameter(s): PUBLICATIONOPERATIONNAME = PublicationOperationName, PUBLICATIONMESSAGE = PublicationMessage   Returns: CONTINUEPUBLICATION, TRANSPORTERRORRESULT, TRANSPORTERRORTYPE, ENCODINGERRORRESULT, MESSAGEERRORRESULT, MESSAGEERRORTYPE" >
   	     <SOAP-PUB-OC functionId="SOAP-PUB-OC" PUBLICATIONOPERATIONNAME="${PublicationOperationName}" PUBLICATIONMESSAGE="${PublicationMessage}"/>
        </testStep>
	<testStep functionId = "Step 16.2 IF TRANSPORTERRORRESULT = False and ENCODINGERRORRESULT = False THEN CONTINUE; OTHERWISE skip the following sub steps."   passfailResult="False"/>
	<jl:if test="${!TRANSPORTERRORRESULT and !ENCODINGERRORRESULT}" >
		<testStep functionId = "Step 16.2.1 VERIFY that PublicationEncodingErrorExpected = ENCODINGERRORRESULT" >
                   <ju-assert-equals functionId="Verify the ENCODINGERRORRESULT" msg="Error: PublicationEncodingErrorExpected was ${PublicationEncodingErrorExpected} while ENCODINGERRORRESULT was ${ENCODINGERRORRESULT}." expected="${PublicationEncodingErrorExpected}" actual="${ENCODINGERRORRESULT}"/>
                </testStep>
		<testStep functionId = "Step 16.2.2 IF PublicationMessageErrorExpected = False THEN CONTINUE; OTHERWISE skip the following sub steps."   passfailResult="False"/>
		<jl:if test="${!PublicationMessageErrorExpected}" >
			<testStep functionId = "Step 16.2.2.1 VERIFY that MESSAGEERRORRESULT = False" >
                           <ju-assert-true functionId="Verify the MESSAGEERRORRESULT" msg="Error: MESSAGEERRORRESULT was ${MESSAGEERRORRESULT} with type ${MESSAGEERRORTYPE}." test="${!MESSAGEERRORRESULT}"/>
                        </testStep>
		</jl:if>
		<testStep functionId = "Step 16.2.3 IF PublicationMessageErrorExpected = True THEN CONTINUE; OTHERWISE skip the following sub steps."   passfailResult="False"/>
		<jl:if test="${PublicationMessageErrorExpected}" >
			<testStep functionId = "Step 16.2.3.1 VERIFY that MESSAGEERRORTYPE = PublicationMessageErrorTypeExpected" >
                           <ju-assert-equals functionId="Verify the MESSAGEERRORTYPE" msg="Error: PublicationMessageErorrType was ${PublicationMessageErrorType} while MESSAGEERRORTYPE was ${MESSAGEERRORTYPE}." expected="${PublicationMessageErrorTypeExpected}" actual="${MESSAGEERRORTYPE}"/>
                        </testStep>
		</jl:if>
	</jl:if>

</jl:while>


</NTCIP2306-session>
</testprocedure>