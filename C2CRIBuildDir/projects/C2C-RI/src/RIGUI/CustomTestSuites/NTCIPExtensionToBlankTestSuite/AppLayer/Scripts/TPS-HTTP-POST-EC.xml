<?xml version="1.0" ?> 
<!--   
       Title:  TPS-NTCIP2306-HTTP-POST-EC
       Description:  This test procedure is called by a test case and is used to verify a SUTs conformance to the XML Direct Profiles encoding and transport (HTTP and HTTPS) subprofiles of NTCIP 2306 when acting as an EC using the POST command. 
                     This procedure supports verification of requirements related to user need 2 (XML Direct) and is used for both valid and invalid test cases.
       Version/Date: 2011/08/28 12:46 (Manual)
-->

<testprocedure xmlns="jelly:jameleon"  xmlns:jl="jelly:core" >
<test-case-id>${C2CRITestCaseID}</test-case-id>
<test-case-summary>This test procedure is called by a test case and is used to verify a SUTs conformance to the XML Direct Profiles encoding and transport (HTTP and HTTPS) subprofiles of NTCIP 2306 when acting as an EC using the POST command. This procedure supports verification of requirements related to user need 2 (XML Direct) and is used for both valid and invalid test cases.
</test-case-summary>



<NTCIP2306-session testCaseIdentifier="${C2CRITestCaseID}" riMode="OC" wsdlURL="${WSDLFile}">

<testStep functionId = "Step 1 CONFIGURE: Identify the WSDL file that will define the one-way Get operation used during the test.  RECORD the WSDL File Name value as: WSDLFile = ${WSDLFile}"  passfailResult="False"/>
<testStep functionId = "Step 2 CONFIGURE: Identify the HTTP related Service defined in the WSDL that will be used for the two-way POST operation during the test.  RECORD the Service name value as: ServiceName = ${ServiceName}"  passfailResult="False"/>
<testStep functionId = "Step 3 CONFIGURE: Identify the port related to the HTTP POST service that will used during the test.  If NTCIP2306_N2R9_Message_Transport_Flag is true the any port utilizing the http protocol may be selected.  If NTCIP_N2R4_HTTPS is true then any port utilizing the https protocol may be selected.  RECORD this value as: PortName = ${PortName}"  passfailResult="False"/>
<testStep functionId = "Step 4 CONFIGURE: Select a POST operation related to the HTTP Service selected to be used for the test.  RECORD this value as: OperationName = ${OperatinoName}"  passfailResult="False"/>
<testStep functionId = "Step 5 CONFIGURE: Determine the XML message to be returned during this test.  RECORD this value as ResponseMessage = ${ResponseMessage}"  passfailResult="False"/>
<testStep functionId = "Step 6 CONFIGURE: Determine the reply code that should be returned during this test.  RECORD this value as ResponseCode = ${ResponseCode}"  passfailResult="False"/>
<testStep functionId = "Step 7 CONFIGURE: Prepare the HTTP Client connection with the server as follows: connect to the server operate at the address specified within HTTPPOSTAddressLocation.  "  passfailResult="False"/>
<testStep functionId = "Step 8 HTTP-POST-OC-REQUEST with the following parameter(s): WSDLFILE = WSDLFile, SERVICENAME = ServiceName, PORTNAME = PortName, OPERATIONNAME = OperationName"  passfailResult="False">
	<HTTP-POST-OC-REQUEST functionId="HTTP-POST-OC-REQUEST" WSDLFILE="${WSDLFile}" SERVICENAME="${ServiceName}" PORTNAME="${PortName}" OPERATIONNAME="${OperationName}"/>
</testStep>
<testStep functionId = "Step 9 IF TransportErrorExpected =False THEN CONTINUE; OTHERWISE skip the following sub steps."  passfailResult="False"/>
<jl:if test="${!TransportErrorExpected}" >
	<testStep functionId = "Step 9.1 VERIFY that TRANSPORTERRORRESULT = False" >
           <ju-assert-true functionId="Verify the TRANSPORTERRORRESULT" msg="Error: TRANSPORTERRORRESULT was ${TRANSPORTERRORRESULT} with type ${TRANSPORTERRORTYPE}." test="${!TRANSPORTERRORRESULT}"/>
	</testStep>
</jl:if>

<testStep functionId = "Step 10 IF ENCODINGFAILURERESULT = False THEN CONTINUE; OTHERWISE skip the following sub steps."  passfailResult="False"/>
<jl:if test="${EncodingFailureResult}" >
	<testStep functionId = "Step 10.1 VERIFY that EncodingErrorExpected = False" >
           <ju-assert-true functionId="Verify the EncodingErrorExpected" msg="Error: EncodingErrorExpected was true" test="${!EncodingErrorExpected}"/>
	</testStep>
	<testStep functionId = "Step 10.2 IF MessageErrorExpected = False THEN CONTINUE; OTHERWISE skip the following sub steps."  passfailResult="False"/>
	<jl:if test="${!MessageErrorExpected}" >
		<testStep functionId = "Step 10.2.1 VERIFY that MESSAGEERRORRESULT = False" >
                 <ju-assert-true functionId="Verify the MESSAGEERRORRESULT" test="${!MESSAGEERRORRESULT}"/>
		</testStep>
	</jl:if>
	<testStep functionId = "Step 10.3 IF MessageErrorExpected = True THEN CONTINUE; OTHERWISE skip the following sub steps."  passfailResult="False"/>
	<jl:if test="${MessageErrorExpected}" >
		<testStep functionId = "Step 10.3.1 VERIFY that MESSAGEERRORTYPE = MessageErrorTypeExpected" >
                 <ju-assert-equals functionId="Verify the MESSAGEERRORTYPE" msg="Error: MessageErrorTypeExpected was ${MessageErrorTypeExpected} while MESSAGEERRORTYPE was ${MESSAGEERRORTYPE}."  actual="${MESSAGEERRORTYPE}" expected="${MessageErrorTypeExpected}"/>
		</testStep>
	</jl:if>
</jl:if>

<testStep functionId = "Step 11 HTTP-POST-OC-REPLY with the following parameter(s): WSDLFILE = WSDLFile, SERVICENAME = ServiceName, PORTNAME = PortName, RESPONSEMESSAGE = ResponseMessage, RESPONSECODE = ResponseCode, OPERATIONNAME = OperationName"  passfailResult="False">
	<HTTP-POST-OC-REPLY functionId="HTTP-POST-OC-REPLY" WSDLFILE="${WSDLFile}" SERVICENAME="${ServiceName}" PORTNAME="${PortName}" OPERATIONNAME="${OperationName}" RESPONSEMESSAGE="${ResponseMessage}" RESPONSECODE="${ResponseCode}"/>
</testStep>


</NTCIP2306-session>
</testprocedure>