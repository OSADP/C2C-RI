<?xml version="1.0" ?> 
<!--   
       Title:  TPS-NTCIP2306-SOAP-RR-OC
       Description:  This test procedure is called by a test case and is used to verify a SUTs conformance to the SOAP Profiles encoding and transport (HTTP and HTTPS) subprofiles of NTCIP 2306 when acting as an OC using the Request-Response pattern. 
                     This procedure supports verification of requirements related to user need 1 (SOAP) and is used for both valid and invalid test cases.
       Version/Date: 2012/02/04 8:24 (Manual)
-->

<testprocedure xmlns="jelly:jameleon"  xmlns:jl="jelly:core" >
<test-case-id>${C2CRITestCaseID}</test-case-id>
<test-case-summary>This test procedure is called by a test case and is used to verify a SUTs conformance to the SOAP Profiles encoding and transport (HTTP and HTTPS) subprofiles of NTCIP 2306 when acting as an OC using the Request-Response pattern. This procedure supports verification of requirements related to user need 1 (SOAP) and is used for both valid and invalid test cases.
</test-case-summary>

<NTCIP2306-session testCaseIdentifier="${C2CRITestCaseID}" riMode="EC" wsdlURL="${WSDLFile}">

<testStep functionId="Step 1.  This pauses the test and waits for user confirmation.">
	<ri-pause functionId="Press OK to begin this iteration. (EC)" />	
</testStep>
<testStep functionId = "Step 2 CONFIGURE: Identify the WSDL file that will define the two-way SOAP operation used during the test.  RECORD the WSDL File Name value as: WSDLFile = ${WSDLFile}" passfailResult="False"  />
<testStep functionId = "Step 3 CONFIGURE: Identify the HTTP related Service defined in the WSDL that will be used for the two-way POST operation during the test.  RECORD the Service name value as: ServiceName = ${ServiceName}"  passfailResult="False" />
<testStep functionId = "Step 4 CONFIGURE: Identify the port related to the HTTP POST service that will used during the test.  If NTCIP2306_N1R4_Message_Transport_Flag is true the any port utilizing the http protocol may be selected.  If NTCIP2306_N1R5_Message_Transport_HTTPS_Flag is true then any port utilizing the https protocol may be selected.  RECORD this value as: PortName =${PortName}"  passfailResult="False"/>
<testStep functionId = "Step 6 CONFIGURE: Select a POST operation related to the HTTP Service selected to be used for the test.  RECORD this value as: OperationName = ${OperationName}"  passfailResult="False"/>
<testStep functionId = "Step 7 CONFIGURE: Determine whether an HTTP transport error is expected during this test.  RECORD this value as: TransportErrorExpected = ${TransportErrorExpected}"  passfailResult="False"/>
<testStep functionId = "Step 8 CONFIGURE: IF TransPortErrorExpected =True THEN RECORD the expected type of HTTP transport  error as: TransportErrorTypeExpected = ${TransportErrorTypeExpected}"  passfailResult="False"/>
<testStep functionId = "Step 9 CONFIGURE: Determine the XML message to be returned during this test.  RECORD this value as RequestMessage = ${RequestMessage}"  passfailResult="False"/>
<testStep functionId = "Step 10 CONFIGURE: Prepare the SUT to support HTTP POST Service specified by ServiceName ${ServiceName}.  "  passfailResult="False"/>
<testStep functionId = "Step 11 SOAP-RR-EC with the following parameter(s): WSDLFILE = WSDLFile, SERVICENAME = ServiceName, REQUESTURI = RequestURI, PORTNAME = PortName, REQUESTMESSAGE = RequestMessage, OPERATIONNAME = OperationName  Returns:
TRANSPORTERRORRESULT, TRANSPORTERRORTYPE, ENCODINGERRORRESULT, MESSAGEERRORRESULT, MESSAGEERRORTYPE" >
	<SOAP-RR-EC functionId="SOAP-RR-EC" SERVICENAME="${ServiceName}" PORTNAME="${PortName}" OPERATIONNAME="${OperationName}" REQUESTMESSAGE="${RequestMessage}"/>
</testStep>

<testStep functionId = "Step 12 IF TransportErrorExpected =False THEN CONTINUE; OTHERWISE skip the following sub steps."  passfailResult="False"/>
	<jl:if test="${!TransportErrorExpected}" >
		<testStep functionId = "Step 12.1 VERIFY that TRANSPORTERRORRESULT = False" >
                <ju-assert-true functionId="Verify the TRANSPORTERRORRESULT" msg="Error: TRANSPORTERRORRESULT was ${TRANSPORTERRORRESULT} while TRANSPORTERRORTYPE was ${TRANSPORTERRORTYPE}." test="${!TRANSPORTERRORRESULT}"/>
		</testStep>
	</jl:if>


<testStep functionId = "Step 13 Perform validation of the RESPONSE message content." >
          <ri-validate functionId="Perform validation of the RESPONSE message content" messageName="RESPONSE" useTheProvidedWSDL="true"/>
</testStep>
</NTCIP2306-session>
</testprocedure>