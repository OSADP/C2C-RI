<?xml version="1.0" encoding="UTF-8"?>
<!--Title:  TPS-4-dlOrganizationInformationSubscription-EC
       Description:  This test procedure is called by a test case and is used to verify the SUTs support of the dlOrganizationInformationSubscription dialog as an EC using variables provided by the calling test case.  
This procedure supports verification of requirements related to user need 2.3.2 [Need to Provide Information on Organizations, Centers, and Contacts] and is used for both valid and invalid test cases.
       Version/Date: 2013/09/23 18:05:34-->
<testprocedure xmlns="jelly:jameleon" xmlns:jl="jelly:core">
     <test-case-id>${C2CRITestCaseID}</test-case-id>
     <test-case-summary>This test procedure is called by a test case and is used to verify the SUTs support of the dlOrganizationInformationSubscription dialog as an EC using variables provided by the calling test case.  
This procedure supports verification of requirements related to user need 2.3.2 [Need to Provide Information on Organizations, Centers, and Contacts] and is used for both valid and invalid test cases.</test-case-summary>
     <testStep functionId="Step 1 CONFIGURE: Determine the Application Layer Standard that will be used for this test.  RECORD this information as: ApplicationLayerStandard:  ${ApplicationLayerStandard}" passfailResult="False "/>
     <testStep functionId="Step 2 CONFIGURE: Determine whether Authentication - Organization Information (AuthOrg) is required by the specification. (NRTM 3.3.2.4.2.1).  RECORD this information as: TMDD_N4R20_Authentication___Organization_Information__AuthOrg__Supported = ${TMDD_N4R20_Authentication___Organization_Information__AuthOrg__Supported}" passfailResult="False"/>
     <testStep functionId="Step 3 CONFIGURE: Determine whether Operator Identifier - Organization Information is required by the specification. (NRTM 3.3.2.4.2.1.1).  RECORD this information as: TMDD_N4R21_Operator_Identifier___Organization_Information_Supported = ${TMDD_N4R21_Operator_Identifier___Organization_Information_Supported}" passfailResult="False"/>
     <testStep functionId="Step 4 CONFIGURE: Determine whether Owner Organization Identifier is required by the specification. (NRTM 3.3.2.4.2.2).  RECORD this information as: TMDD_N4R22_Owner_Organization_Identifier_Supported = ${TMDD_N4R22_Owner_Organization_Identifier_Supported}" passfailResult="False"/>
     <testStep functionId="Step 5 CONFIGURE: Determine whether Owner Center Identifier is required by the specification. (NRTM 3.3.2.4.2.3).  RECORD this information as: TMDD_N4R23_Owner_Center_Identifier_Supported = ${TMDD_N4R23_Owner_Center_Identifier_Supported}" passfailResult="False"/>
     <C2CRI-session beginSession="true" infoStd="TMDDv3.03a" appStd="${ApplicationLayerStandard}" useWSDL="true" testCaseIdentifier="${C2CRITestCaseID}" riMode="OC">
          <testStep functionId="Step 6 CONFIGURE: Define the publication message that will be sent to the SUT.  RECORD this information as: PublicationMessage:  ${PublicationMessage}" passfailResult="False"/>
          <testStep functionId="Step 7 CONFIGURE: Determine the number of publication message transmissions that will be performed within this test.  RECORD this information as: PublicationCount:  ${PublicationCount}" passfailResult="False"/>
          <testStep functionId="Step 8 CONFIGURE: Determine whether an error response message is expected for this test.  RECORD this information as: PublicationErrorResponseExpected:  ${PublicationErrorResponseExpected}" passfailResult="False"/>
          <jl:if test="${PublicationErrorResponseExpected}">
               <testStep functionId="Step 9 CONFIGURE: IF PublicationErrorResponseExpected is true, determine the expected error code response for this test.  RECORD this information as:  PublicationErrorTypeExpected:  ${PublicationErrorTypeExpected}" passfailResult="False"/>
          </jl:if>
          <testStep functionId="Step 10 CONFIGURE: Determine whether the Authentication parameters need to be verified within this test.  RECORD this information as: AuthenticationCheck:  ${AuthenticationCheck}" passfailResult="False"/>
          <testStep functionId="Step 11 CONFIGURE: Identify the Username expected for authentication during this test.  RECORD this information as: Username:  ${Username}" passfailResult="False"/>
          <testStep functionId="Step 12 CONFIGURE: Identify the Password expected for authentication during this test.  RECORD this information as: Password:  ${Password}" passfailResult="False"/>
          <testStep functionId="Step 13 CONFIGURE: Identify the Organization Identifier expected for authentication during this test.  RECORD this information as: OrganizationID:  ${OrganizationID}" passfailResult="False"/>
          <testStep functionId="Step 14 CONFIGURE: Determine whether the SUT will be allowed access to the information requested in this test.  RECORD this information as: AllowAccess:  ${AllowAccess}" passfailResult="False"/>
          <testStep functionId="Step 15 CONFIGURE: Determine whether an error response message is expected for this test.  RECORD this information as: SubscriptionErrorResponseExpected:  ${SubscriptionErrorResponseExpected}" passfailResult="False"/>
          <jl:if test="${SubscriptionErrorResponseExpected}">
               <testStep functionId="Step 16 CONFIGURE: IF SubscriptionErrorResponseExpected is true, determine the expected error code response for this test.  RECORD this information as:  SubscriptionErrorTypeExpected:  ${SubscriptionErrorTypeExpected}" passfailResult="False"/>
          </jl:if>
          <testStep functionId="Step 17 CONFIGURE: Define the subscription response message that will be sent to the SUT.  RECORD this information as: SubscriptionResponseMessage:  ${SubscriptionResponseMessage}" passfailResult="False"/>
          <testStep functionId="Step 18 SUBSCRIPTION-OC-RECEIVE with the following parameters:   DIALOG=dlOrganizationInformationSubscription AUTHENTICATIONCHECK = AuthenticationCheck USERNAME = Username PASSWORD = Password ORGANIZATIONID = OrganizationID ALLOWACCESS = AllowAccess SUBSCRIPTIONERRORRESPONSEEXPECTED = SubscriptionErrorResponseExpected SUBSCRIPTIONERRORTYPEEXPECTED = SubscriptionErrorTypeExpected  Returns: CONTINUEPUBLICATION ">
               <SUBSCRIPTION-OC-RECEIVE Dialog="dlOrganizationInformationSubscription" functionId="dlOrganizationInformationSubscription" AUTHENTICATIONCHECK="${AuthenticationCheck}" USERNAME="${Username}" PASSWORD="${Password}" ORGANIZATIONID="${OrganizationID}" ALLOWACCESS="${AllowAccess}" SUBSCRIPTIONERRORRESPONSEEXPECTED="${SubscriptionErrorResponseExpected}" SUBSCRIPTIONERRORTYPEEXPECTED="${SubscriptionErrorTypeExpected}"/>
          </testStep>
          <testStep functionId="Step 19 IF SubscriptionErrorResponseExpected is not equal to TRUE THEN CONTINUE, OTHERWISE skip the following substeps." passfailResult="False"/>
          <jl:if test="${!SubscriptionErrorResponseExpected}">
               <testStep functionId="Step 19.1 VERIFY that element organizationInformationRequestMsg exists." passfailResult="True">
                    <ri-MessageVerify msgType="REQUEST" elementName="organizationInformationRequestMsg" instanceName="tmdd:organizationInformationRequestMsg" elementType="message" functionId="Looking for organizationInformationRequestMsg"/>
               </testStep>
               <testStep functionId="Step 19.2 VERIFY that element organization-requesting exists within organizationInformationRequestMsg." passfailResult="True">
                    <ri-MessageVerify msgType="REQUEST" elementName="organization-requesting" instanceName="tmdd:organizationInformationRequestMsg" elementType="data-frame" functionId="Looking for organizationInformationRequestMsg"/>
               </testStep>
               <testStep functionId="Step 19.3 VERIFY that element organization-information-type exists within organizationInformationRequestMsg." passfailResult="True">
                    <ri-MessageVerify msgType="REQUEST" elementName="organization-information-type" instanceName="tmdd:organizationInformationRequestMsg" elementType="data-element" functionId="Looking for organizationInformationRequestMsg"/>
               </testStep>
               <testStep functionId="Step 19.4 IF TMDD_N4R20_Authentication___Organization_Information__AuthOrg__Supported is equal to TRUE THEN CONTINUE; OTHERWISE skip the following substeps." passFailResult="False"/>
               <jl:if test="${TMDD_N4R20_Authentication___Organization_Information__AuthOrg__Supported}">
                    <testStep functionId="Step 19.4.1 VERIFY that element authentication exists within organizationInformationRequestMsg." passfailResult="True">
                         <ri-MessageVerify msgType="REQUEST" elementName="authentication" instanceName="tmdd:organizationInformationRequestMsg" elementType="data-frame" functionId="Looking for organizationInformationRequestMsg"/>
                    </testStep>
               </jl:if>
               <testStep functionId="Step 19.5 IF TMDD_N4R21_Operator_Identifier___Organization_Information_Supported is equal to TRUE THEN CONTINUE; OTHERWISE skip the following substeps." passFailResult="False"/>
               <jl:if test="${TMDD_N4R21_Operator_Identifier___Organization_Information_Supported}">
                    <testStep functionId="Step 19.5.1 VERIFY that element operator-id exists within each instance of organizationInformationRequestMsg.authentication" passfailResult="True">
                         <ri-MessageVerify msgType="REQUEST" elementName="operator-id" instanceName="tmdd:organizationInformationRequestMsg.authentication" elementType="data-element" functionId="Looking for organizationInformationRequestMsg.authentication"/>
                    </testStep>
               </jl:if>
               <testStep functionId="Step 19.6 IF TMDD_N4R22_Owner_Organization_Identifier_Supported is equal to TRUE THEN CONTINUE; OTHERWISE skip the following substeps." passFailResult="False"/>
               <jl:if test="${TMDD_N4R22_Owner_Organization_Identifier_Supported}">
                    <testStep functionId="Step 19.6.1 VERIFY that element organization-id exists within organizationInformationRequestMsg." passfailResult="True">
                         <ri-MessageVerify msgType="REQUEST" elementName="organization-id" instanceName="tmdd:organizationInformationRequestMsg" elementType="data-element" functionId="Looking for organizationInformationRequestMsg"/>
                    </testStep>
               </jl:if>
               <testStep functionId="Step 19.7 IF TMDD_N4R23_Owner_Center_Identifier_Supported is equal to TRUE THEN CONTINUE; OTHERWISE skip the following substeps." passFailResult="False"/>
               <jl:if test="${TMDD_N4R23_Owner_Center_Identifier_Supported}">
                    <testStep functionId="Step 19.7.1 VERIFY that element center-id-list exists within organizationInformationRequestMsg." passfailResult="True">
                         <ri-MessageVerify msgType="REQUEST" elementName="center-id-list" instanceName="tmdd:organizationInformationRequestMsg" elementType="data-element" functionId="Looking for organizationInformationRequestMsg"/>
                    </testStep>
               </jl:if>
               <testStep functionId="Step 19.8 VERIFY that the values within the REQUEST message are correct per the TMDD standard and known operational conditions.">
                    <AUTO-VERIFY-MESSAGE functionId="Automatically Verify message content" msgName="REQUEST" verificationSpec="${VerificationSpec}"/>
                    <USER-VERIFY-MESSAGE functionId="The User Verifies the message content" msgName="REQUEST" optionList="TMDD_N4R20_Authentication___Organization_Information__AuthOrg__Supported,authentication,tmdd:organizationInformationRequestMsg;TMDD_N4R21_Operator_Identifier___Organization_Information_Supported,operator-id,tmdd:organizationInformationRequestMsg.authentication;TMDD_N4R22_Owner_Organization_Identifier_Supported,organization-id,tmdd:organizationInformationRequestMsg;TMDD_N4R23_Owner_Center_Identifier_Supported,center-id-list,tmdd:organizationInformationRequestMsg;" userDataFile="${RI_USERTCDATAFILE}"/>
               </testStep>
               <testStep functionId=" Step 19.9 CONFIGURE: Set OptionalContentVerified to True" passfailResult="False">
                    <jl:set var="OptionalContentVerified" value="true"/>
               </testStep>
               <postcondition>
                    <testStep functionId="Step 19.10 POSTCONDITION: SUBSCRIPTION-OC-REPLY with the following parameters:   DIALOG=dlOrganizationInformationSubscription OPTIONALCONTENTVERIFIED = OptionalContentVerified SUBSCRIPTIONRESPONSEMESSAGE = SubscriptionResponseMessage ">
                         <SUBSCRIPTION-OC-REPLY Dialog="dlOrganizationInformationSubscription" functionId="dlOrganizationInformationSubscription" OPTIONALCONTENTVERIFIED="${OptionalContentVerified}" SUBSCRIPTIONRESPONSEMESSAGE="${SubscriptionResponseMessage}"/>
                    </testStep>
               </postcondition>
               <testStep functionId="Step 19.11 WHILE CONTINUEPUBLICATION is equal to TRUE then CONTINUE, OTHERWISE skip the following substeps."/>
               <jl:while test="${CONTINUEPUBLICATION}">
                    <testStep functionId="Step 19.11.1 PUBLICATION-OC with the following parameters:   DIALOG=dlOrganizationInformationUpdate RESPONSETIMEREQUIRED=TMDD_N4R16_Publish_Organization_Information_Parameter PUBLICATIONMESSAGE = PublicationMessage PUBLICATIONCOUNT = PublicationCount PUBLICATIONERRORRESPONSEEXPECTED = PublicationErrorResponseExpected PUBLICATIONERRORTYPEEXPECTED = PublicationErrorTypeExpected  Returns: CONTINUEPUBLICATION ">
                         <PUBLICATION-OC Dialog="dlOrganizationInformationUpdate" functionId="dlOrganizationInformationUpdate" RESPONSETIMEREQUIRED="${TMDD_N4R16_Publish_Organization_Information_Parameter}" PUBLICATIONMESSAGE="${PublicationMessage}" PUBLICATIONCOUNT="${PublicationCount}" PUBLICATIONERRORRESPONSEEXPECTED="${PublicationErrorResponseExpected}" PUBLICATIONERRORTYPEEXPECTED="${PublicationErrorTypeExpected}"/>
                    </testStep>
               </jl:while>
          </jl:if>
     </C2CRI-session>
</testprocedure>