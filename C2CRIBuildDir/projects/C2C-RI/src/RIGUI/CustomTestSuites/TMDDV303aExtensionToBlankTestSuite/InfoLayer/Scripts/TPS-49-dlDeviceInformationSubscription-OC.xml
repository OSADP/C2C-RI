<?xml version="1.0" encoding="UTF-8"?>
<!--Title:  TPS-49-dlDeviceInformationSubscription-OC
       Description:  This test procedure is called by a test case and is used to verify the SUTs support of the dlDeviceInformationSubscription dialog as an OC using variables provided by the calling test case.  
This procedure supports verification of requirements related to user need 2.3.5.5.3 [Need to Share ESS Device Status] and is used for both valid and invalid test cases.
       Version/Date: 2013/09/23 18:30:35-->
<testprocedure xmlns="jelly:jameleon" xmlns:jl="jelly:core">
     <test-case-id>${C2CRITestCaseID}</test-case-id>
     <test-case-summary>This test procedure is called by a test case and is used to verify the SUTs support of the dlDeviceInformationSubscription dialog as an OC using variables provided by the calling test case.  
This procedure supports verification of requirements related to user need 2.3.5.5.3 [Need to Share ESS Device Status] and is used for both valid and invalid test cases.</test-case-summary>
     <testStep functionId="Step 1 CONFIGURE: Determine the Application Layer Standard that will be used for this test.  RECORD this information as: ApplicationLayerStandard:  ${ApplicationLayerStandard}" passfailResult="False "/>
     <testStep functionId="Step 2 CONFIGURE: Determine whether Restrictions - Device Status is required by the specification. (NRTM 3.3.5.1.3.1.2.1).  RECORD this information as: TMDD_N49R394_Restrictions___Device_Status_Supported = ${TMDD_N49R394_Restrictions___Device_Status_Supported}" passfailResult="False"/>
     <testStep functionId="Step 3 CONFIGURE: Determine whether Unique Identifier of the Controlling Center is required by the specification. (NRTM 3.3.5.1.3.1.2.2).  RECORD this information as: TMDD_N49R395_Unique_Identifier_of_the_Controlling_Center_Supported = ${TMDD_N49R395_Unique_Identifier_of_the_Controlling_Center_Supported}" passfailResult="False"/>
     <testStep functionId="Step 4 CONFIGURE: Determine whether Device Communications Status is required by the specification. (NRTM 3.3.5.1.3.1.2.3).  RECORD this information as: TMDD_N49R396_Device_Communications_Status_Supported = ${TMDD_N49R396_Device_Communications_Status_Supported}" passfailResult="False"/>
     <testStep functionId="Step 5 CONFIGURE: Determine whether Operator Identifier - Device Status is required by the specification. (NRTM 3.3.5.1.3.1.2.4).  RECORD this information as: TMDD_N49R397_Operator_Identifier___Device_Status_Supported = ${TMDD_N49R397_Operator_Identifier___Device_Status_Supported}" passfailResult="False"/>
     <testStep functionId="Step 6 CONFIGURE: Determine whether Event Identifier - Device Status is required by the specification. (NRTM 3.3.5.1.3.1.2.5).  RECORD this information as: TMDD_N49R398_Event_Identifier___Device_Status_Supported = ${TMDD_N49R398_Event_Identifier___Device_Status_Supported}" passfailResult="False"/>
     <testStep functionId="Step 7 CONFIGURE: Determine whether Event Response Plan - Device Status is required by the specification. (NRTM 3.3.5.1.3.1.2.6).  RECORD this information as: TMDD_N49R399_Event_Response_Plan___Device_Status_Supported = ${TMDD_N49R399_Event_Response_Plan___Device_Status_Supported}" passfailResult="False"/>
     <testStep functionId="Step 8 CONFIGURE: Determine whether Device Status Date and Time Change Information is required by the specification. (NRTM 3.3.5.1.3.1.2.7).  RECORD this information as: TMDD_N49R400_Device_Status_Date_and_Time_Change_Information_Supported = ${TMDD_N49R400_Device_Status_Date_and_Time_Change_Information_Supported}" passfailResult="False"/>
     <C2CRI-session beginSession="true" infoStd="TMDDv3.03a" appStd="${ApplicationLayerStandard}" useWSDL="true" testCaseIdentifier="${C2CRITestCaseID}" riMode="EC">
          <testStep functionId="Step 9 CONFIGURE: Determine the number of publication message transmissions that will be received within this test.  RECORD this information as: PublicationsToReceive:  ${PublicationsToReceive}" passfailResult="False"/>
          <testStep functionId="Step 10 CONFIGURE: Determine whether an error response message is expected for this test.  RECORD this information as: PublicationErrorResponseExpected:  ${PublicationErrorResponseExpected}" passfailResult="False"/>
          <jl:if test="${PublicationErrorResponseExpected}">
               <testStep functionId="Step 11 CONFIGURE: IF PublicationErrorResponseExpected is true, determine the expected error code response for this test.  RECORD this information as:  PublicationErrorTypeExpected:  ${PublicationErrorTypeExpected}" passfailResult="False"/>
          </jl:if>
          <testStep functionId="Step 12 CONFIGURE: Define the publication response message that will be sent to the SUT.  RECORD this information as: PublicationResponseMessage:  ${PublicationResponseMessage}" passfailResult="False"/>
          <testStep functionId="Step 13 CONFIGURE: Determine whether the Authentication parameters need to be verified within this test.  RECORD this information as: AuthenticationCheck:  ${AuthenticationCheck}" passfailResult="False"/>
          <testStep functionId="Step 14 CONFIGURE: Determine whether the SUT will be allowed access to the information requested in this test.  RECORD this information as: AllowAccess:  ${AllowAccess}" passfailResult="False"/>
          <testStep functionId="Step 15 CONFIGURE: Define the publication message that will be sent to the SUT.  RECORD this information as: SubscriptionMessage:  ${SubscriptionMessage}" passfailResult="False"/>
          <testStep functionId="Step 16 CONFIGURE: Determine whether an error response message is expected for this test.  RECORD this information as: SubscriptionErrorResponseExpected:  ${SubscriptionErrorResponseExpected}" passfailResult="False"/>
          <jl:if test="${SubscriptionErrorResponseExpected}">
               <testStep functionId="Step 17 CONFIGURE: IF SubscriptionErrorResponseExpected is true, determine the expected error code response for this test.  RECORD this information as:  SubscriptionErrorTypeExpected:  ${SubscriptionErrorTypeExpected}" passfailResult="False"/>
          </jl:if>
          <testStep functionId="Step 18 SUBSCRIPTION-EC with the following parameters:   DIALOG=dlDeviceInformationSubscription SUBSCRIPTIONMESSAGE = SubscriptionMessage SUBSCRIPTIONERRORRESPONSEEXPECTED = SubscriptionErrorResponseExpected SUBSCRIPTIONERRORTYPEEXPECTED = SubscriptionErrorTypeExpected  Returns: CONTINUEPUBLICATION ">
               <SUBSCRIPTION-EC Dialog="dlDeviceInformationSubscription" functionId="dlDeviceInformationSubscription" SUBSCRIPTIONMESSAGE="${SubscriptionMessage}" SUBSCRIPTIONERRORRESPONSEEXPECTED="${SubscriptionErrorResponseExpected}" SUBSCRIPTIONERRORTYPEEXPECTED="${SubscriptionErrorTypeExpected}"/>
          </testStep>
          <testStep functionId="Step 19 IF SubscriptionErrorResponseExpected is not equal to TRUE THEN CONTINUE, OTHERWISE skip the following substeps." passfailResult="False"/>
          <jl:if test="${!SubscriptionErrorResponseExpected}">
               <testStep functionId="Step 19.1 WHILE CONTINUEPUBLICATION is equal to TRUE then CONTINUE, OTHERWISE skip the following substeps."/>
               <jl:while test="${CONTINUEPUBLICATION}">
                    <testStep functionId="Step 19.1.1 PUBLICATION-EC-RECEIVE with the following parameters:   DIALOG=dlESSStatusUpdate RESPONSETIMEREQUIRED=TMDD_N49R664_Publish_ESS_Status_Information_Parameter PUBLICATIONSTORECEIVE = PublicationsToReceive PUBLICATIONERRORRESPONSEEXPECTED = PublicationErrorResponseExpected PUBLICATIONERRORTYPEEXPECTED = PublicationErrorTypeExpected AUTHENTICATIONCHECK = AuthenticationCheck ALLOWACCESS = AllowAccess  Returns: CONTINUEPUBLICATION ">
                         <PUBLICATION-EC-RECEIVE Dialog="dlESSStatusUpdate" functionId="dlESSStatusUpdate" RESPONSETIMEREQUIRED="${TMDD_N49R664_Publish_ESS_Status_Information_Parameter}" PUBLICATIONSTORECEIVE="${PublicationsToReceive}" PUBLICATIONERRORRESPONSEEXPECTED="${PublicationErrorResponseExpected}" PUBLICATIONERRORTYPEEXPECTED="${PublicationErrorTypeExpected}" AUTHENTICATIONCHECK="${AuthenticationCheck}" ALLOWACCESS="${AllowAccess}"/>
                    </testStep>
                    <testStep functionId="Step 19.1.2 IF PublicationErrorResponseExpected is not equal to TRUE THEN CONTINUE, OTHERWISE skip the following substeps." passfailResult="False"/>
                    <jl:if test="${!PublicationErrorResponseExpected}">
                         <testStep functionId="Step 19.1.2.1 VERIFY that element ess-station-status-header exists within each instance of eSSStatusMsg.ess-status-item" passfailResult="True">
                              <ri-MessageVerify msgType="REQUEST" elementName="ess-station-status-header" instanceName="tmdd:eSSStatusMsg.ess-status-item" elementType="data-frame" functionId="Looking for eSSStatusMsg.ess-status-item"/>
                         </testStep>
                         <testStep functionId="Step 19.1.2.2 VERIFY that element organization-information exists within each instance of eSSStatusMsg.ess-status-item.ess-station-status-header" passfailResult="True">
                              <ri-MessageVerify msgType="REQUEST" elementName="organization-information" instanceName="tmdd:eSSStatusMsg.ess-status-item.ess-station-status-header" elementType="data-frame" functionId="Looking for eSSStatusMsg.ess-status-item.ess-station-status-header"/>
                         </testStep>
                         <testStep functionId="Step 19.1.2.3 VERIFY that element device-id exists within each instance of eSSStatusMsg.ess-status-item.ess-station-status-header" passfailResult="True">
                              <ri-MessageVerify msgType="REQUEST" elementName="device-id" instanceName="tmdd:eSSStatusMsg.ess-status-item.ess-station-status-header" elementType="data-element" functionId="Looking for eSSStatusMsg.ess-status-item.ess-station-status-header"/>
                         </testStep>
                         <testStep functionId="Step 19.1.2.4 VERIFY that element device-status exists within each instance of eSSStatusMsg.ess-status-item.ess-station-status-header" passfailResult="True">
                              <ri-MessageVerify msgType="REQUEST" elementName="device-status" instanceName="tmdd:eSSStatusMsg.ess-status-item.ess-station-status-header" elementType="data-element" functionId="Looking for eSSStatusMsg.ess-status-item.ess-station-status-header"/>
                         </testStep>
                         <testStep functionId="Step 19.1.2.5 VERIFY that element eSSStatusMsg exists." passfailResult="True">
                              <ri-MessageVerify msgType="REQUEST" elementName="eSSStatusMsg" instanceName="tmdd:eSSStatusMsg" elementType="message" functionId="Looking for eSSStatusMsg"/>
                         </testStep>
                         <testStep functionId="Step 19.1.2.6 IF TMDD_N49R394_Restrictions___Device_Status_Supported is equal to TRUE THEN CONTINUE; OTHERWISE skip the following substeps." passFailResult="False"/>
                         <jl:if test="${TMDD_N49R394_Restrictions___Device_Status_Supported}">
                              <testStep functionId="Step 19.1.2.6.1 VERIFY that element restrictions exists within each instance of eSSStatusMsg.ess-status-item.ess-station-status-header" passfailResult="True">
                                   <ri-MessageVerify msgType="REQUEST" elementName="restrictions" instanceName="tmdd:eSSStatusMsg.ess-status-item.ess-station-status-header" elementType="data-frame" functionId="Looking for eSSStatusMsg.ess-status-item.ess-station-status-header"/>
                              </testStep>
                         </jl:if>
                         <testStep functionId="Step 19.1.2.7 IF TMDD_N49R395_Unique_Identifier_of_the_Controlling_Center_Supported is equal to TRUE THEN CONTINUE; OTHERWISE skip the following substeps." passFailResult="False"/>
                         <jl:if test="${TMDD_N49R395_Unique_Identifier_of_the_Controlling_Center_Supported}">
                              <testStep functionId="Step 19.1.2.7.1 VERIFY that element center-id exists within each instance of eSSStatusMsg.ess-status-item.ess-station-status-header" passfailResult="True">
                                   <ri-MessageVerify msgType="REQUEST" elementName="center-id" instanceName="tmdd:eSSStatusMsg.ess-status-item.ess-station-status-header" elementType="data-element" functionId="Looking for eSSStatusMsg.ess-status-item.ess-station-status-header"/>
                              </testStep>
                         </jl:if>
                         <testStep functionId="Step 19.1.2.8 IF TMDD_N49R396_Device_Communications_Status_Supported is equal to TRUE THEN CONTINUE; OTHERWISE skip the following substeps." passFailResult="False"/>
                         <jl:if test="${TMDD_N49R396_Device_Communications_Status_Supported}">
                              <testStep functionId="Step 19.1.2.8.1 VERIFY that element device-comm-status exists within each instance of eSSStatusMsg.ess-status-item.ess-station-status-header" passfailResult="True">
                                   <ri-MessageVerify msgType="REQUEST" elementName="device-comm-status" instanceName="tmdd:eSSStatusMsg.ess-status-item.ess-station-status-header" elementType="data-element" functionId="Looking for eSSStatusMsg.ess-status-item.ess-station-status-header"/>
                              </testStep>
                         </jl:if>
                         <testStep functionId="Step 19.1.2.9 IF TMDD_N49R397_Operator_Identifier___Device_Status_Supported is equal to TRUE THEN CONTINUE; OTHERWISE skip the following substeps." passFailResult="False"/>
                         <jl:if test="${TMDD_N49R397_Operator_Identifier___Device_Status_Supported}">
                              <testStep functionId="Step 19.1.2.9.1 VERIFY that element operator-id exists within each instance of eSSStatusMsg.ess-status-item.ess-station-status-header" passfailResult="True">
                                   <ri-MessageVerify msgType="REQUEST" elementName="operator-id" instanceName="tmdd:eSSStatusMsg.ess-status-item.ess-station-status-header" elementType="data-element" functionId="Looking for eSSStatusMsg.ess-status-item.ess-station-status-header"/>
                              </testStep>
                         </jl:if>
                         <testStep functionId="Step 19.1.2.10 IF TMDD_N49R398_Event_Identifier___Device_Status_Supported is equal to TRUE THEN CONTINUE; OTHERWISE skip the following substeps." passFailResult="False"/>
                         <jl:if test="${TMDD_N49R398_Event_Identifier___Device_Status_Supported}">
                              <testStep functionId="Step 19.1.2.10.1 VERIFY that element event-id exists within each instance of eSSStatusMsg.ess-status-item.ess-station-status-header" passfailResult="True">
                                   <ri-MessageVerify msgType="REQUEST" elementName="event-id" instanceName="tmdd:eSSStatusMsg.ess-status-item.ess-station-status-header" elementType="data-element" functionId="Looking for eSSStatusMsg.ess-status-item.ess-station-status-header"/>
                              </testStep>
                         </jl:if>
                         <testStep functionId="Step 19.1.2.11 IF TMDD_N49R399_Event_Response_Plan___Device_Status_Supported is equal to TRUE THEN CONTINUE; OTHERWISE skip the following substeps." passFailResult="False"/>
                         <jl:if test="${TMDD_N49R399_Event_Response_Plan___Device_Status_Supported}">
                              <testStep functionId="Step 19.1.2.11.1 VERIFY that element response-plan-id exists within each instance of eSSStatusMsg.ess-status-item.ess-station-status-header" passfailResult="True">
                                   <ri-MessageVerify msgType="REQUEST" elementName="response-plan-id" instanceName="tmdd:eSSStatusMsg.ess-status-item.ess-station-status-header" elementType="data-element" functionId="Looking for eSSStatusMsg.ess-status-item.ess-station-status-header"/>
                              </testStep>
                         </jl:if>
                         <testStep functionId="Step 19.1.2.12 IF TMDD_N49R400_Device_Status_Date_and_Time_Change_Information_Supported is equal to TRUE THEN CONTINUE; OTHERWISE skip the following substeps." passFailResult="False"/>
                         <jl:if test="${TMDD_N49R400_Device_Status_Date_and_Time_Change_Information_Supported}">
                              <testStep functionId="Step 19.1.2.12.1 VERIFY that element last-comm-time exists within each instance of eSSStatusMsg.ess-status-item.ess-station-status-header" passfailResult="True">
                                   <ri-MessageVerify msgType="REQUEST" elementName="last-comm-time" instanceName="tmdd:eSSStatusMsg.ess-status-item.ess-station-status-header" elementType="data-frame" functionId="Looking for eSSStatusMsg.ess-status-item.ess-station-status-header"/>
                              </testStep>
                         </jl:if>
                         <testStep functionId="Step 19.1.2.13 VERIFY that the values within the REQUEST message are correct per the TMDD standard and known operational conditions.">
                              <AUTO-VERIFY-MESSAGE functionId="Automatically Verify message content" msgName="REQUEST" verificationSpec="${VerificationSpec}"/>
                              <USER-VERIFY-MESSAGE functionId="The User Verifies the message content" msgName="REQUEST" optionList="TMDD_N49R394_Restrictions___Device_Status_Supported,restrictions,tmdd:eSSStatusMsg.ess-status-item.ess-station-status-header;TMDD_N49R395_Unique_Identifier_of_the_Controlling_Center_Supported,center-id,tmdd:eSSStatusMsg.ess-status-item.ess-station-status-header;TMDD_N49R396_Device_Communications_Status_Supported,device-comm-status,tmdd:eSSStatusMsg.ess-status-item.ess-station-status-header;TMDD_N49R397_Operator_Identifier___Device_Status_Supported,operator-id,tmdd:eSSStatusMsg.ess-status-item.ess-station-status-header;TMDD_N49R398_Event_Identifier___Device_Status_Supported,event-id,tmdd:eSSStatusMsg.ess-status-item.ess-station-status-header;TMDD_N49R399_Event_Response_Plan___Device_Status_Supported,response-plan-id,tmdd:eSSStatusMsg.ess-status-item.ess-station-status-header;TMDD_N49R400_Device_Status_Date_and_Time_Change_Information_Supported,last-comm-time,tmdd:eSSStatusMsg.ess-status-item.ess-station-status-header;" userDataFile="${RI_USERTCDATAFILE}"/>
                         </testStep>
                         <testStep functionId=" Step 19.1.2.14 CONFIGURE: Set OptionalContentVerified to True" passfailResult="False">
                              <jl:set var="OptionalContentVerified" value="true"/>
                         </testStep>
                         <postcondition>
                              <testStep functionId="Step 19.1.2.15 POSTCONDITION: PUBLICATION-EC-REPLY with the following parameters:   DIALOG=dlESSStatusUpdate RESPONSETIMEREQUIRED=TMDD_N49R664_Publish_ESS_Status_Information_Parameter OPTIONALCONTENTVERIFIED = OptionalContentVerified PUBLICATIONRESPONSEMESSAGE = PublicationResponseMessage ">
                                   <PUBLICATION-EC-REPLY Dialog="dlESSStatusUpdate" functionId="dlESSStatusUpdate" RESPONSETIMEREQUIRED="${TMDD_N49R664_Publish_ESS_Status_Information_Parameter}" OPTIONALCONTENTVERIFIED="${OptionalContentVerified}" PUBLICATIONRESPONSEMESSAGE="${PublicationResponseMessage}"/>
                              </testStep>
                         </postcondition>
                    </jl:if>
               </jl:while>
          </jl:if>
     </C2CRI-session>
</testprocedure>