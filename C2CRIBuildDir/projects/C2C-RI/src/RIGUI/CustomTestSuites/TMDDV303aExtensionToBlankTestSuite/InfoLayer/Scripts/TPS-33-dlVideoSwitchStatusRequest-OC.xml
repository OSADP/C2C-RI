<?xml version="1.0" encoding="UTF-8"?>
<!--Title:  TPS-33-dlVideoSwitchStatusRequest-OC
       Description:  This test procedure is called by a test case and is used to verify the SUTs support of the dlVideoSwitchStatusRequest dialog as an OC using variables provided by the calling test case.  
This procedure supports verification of requirements related to user need 2.3.5.3.3 [Need to Share Video Switch Status] and is used for both valid and invalid test cases.
       Version/Date: 2013/09/23 18:24:33-->
<testprocedure xmlns="jelly:jameleon" xmlns:jl="jelly:core">
     <test-case-id>${C2CRITestCaseID}</test-case-id>
     <test-case-summary>This test procedure is called by a test case and is used to verify the SUTs support of the dlVideoSwitchStatusRequest dialog as an OC using variables provided by the calling test case.  
This procedure supports verification of requirements related to user need 2.3.5.3.3 [Need to Share Video Switch Status] and is used for both valid and invalid test cases.</test-case-summary>
     <testStep functionId="Step 1 CONFIGURE: Determine the Application Layer Standard that will be used for this test.  RECORD this information as: ApplicationLayerStandard:  ${ApplicationLayerStandard}" passfailResult="False "/>
     <testStep functionId="Step 2 CONFIGURE: Determine whether Restrictions - Device Status is required by the specification. (NRTM 3.3.5.1.3.1.2.1).  RECORD this information as: TMDD_N33R394_Restrictions___Device_Status_Supported = ${TMDD_N33R394_Restrictions___Device_Status_Supported}" passfailResult="False"/>
     <testStep functionId="Step 3 CONFIGURE: Determine whether Unique Identifier of the Controlling Center is required by the specification. (NRTM 3.3.5.1.3.1.2.2).  RECORD this information as: TMDD_N33R395_Unique_Identifier_of_the_Controlling_Center_Supported = ${TMDD_N33R395_Unique_Identifier_of_the_Controlling_Center_Supported}" passfailResult="False"/>
     <testStep functionId="Step 4 CONFIGURE: Determine whether Device Communications Status is required by the specification. (NRTM 3.3.5.1.3.1.2.3).  RECORD this information as: TMDD_N33R396_Device_Communications_Status_Supported = ${TMDD_N33R396_Device_Communications_Status_Supported}" passfailResult="False"/>
     <testStep functionId="Step 5 CONFIGURE: Determine whether Operator Identifier - Device Status is required by the specification. (NRTM 3.3.5.1.3.1.2.4).  RECORD this information as: TMDD_N33R397_Operator_Identifier___Device_Status_Supported = ${TMDD_N33R397_Operator_Identifier___Device_Status_Supported}" passfailResult="False"/>
     <testStep functionId="Step 6 CONFIGURE: Determine whether Event Identifier - Device Status is required by the specification. (NRTM 3.3.5.1.3.1.2.5).  RECORD this information as: TMDD_N33R398_Event_Identifier___Device_Status_Supported = ${TMDD_N33R398_Event_Identifier___Device_Status_Supported}" passfailResult="False"/>
     <testStep functionId="Step 7 CONFIGURE: Determine whether Event Response Plan - Device Status is required by the specification. (NRTM 3.3.5.1.3.1.2.6).  RECORD this information as: TMDD_N33R399_Event_Response_Plan___Device_Status_Supported = ${TMDD_N33R399_Event_Response_Plan___Device_Status_Supported}" passfailResult="False"/>
     <testStep functionId="Step 8 CONFIGURE: Determine whether Device Status Date and Time Change Information is required by the specification. (NRTM 3.3.5.1.3.1.2.7).  RECORD this information as: TMDD_N33R400_Device_Status_Date_and_Time_Change_Information_Supported = ${TMDD_N33R400_Device_Status_Date_and_Time_Change_Information_Supported}" passfailResult="False"/>
     <testStep functionId="Step 9 CONFIGURE: Determine whether Text Insertion - Video Switch Status is required by the specification. (NRTM 3.3.5.4.2.5.2.1).  RECORD this information as: TMDD_N33R563_Text_Insertion___Video_Switch_Status_Supported = ${TMDD_N33R563_Text_Insertion___Video_Switch_Status_Supported}" passfailResult="False"/>
     <C2CRI-session beginSession="true" infoStd="TMDDv3.03a" appStd="${ApplicationLayerStandard}" useWSDL="true" testCaseIdentifier="${C2CRITestCaseID}" riMode="EC">
          <testStep functionId="Step 10 CONFIGURE: Define the message that will be sent to the SUT.  RECORD this information as: RequestMessage:  ${RequestMessage}" passfailResult="False"/>
          <testStep functionId="Step 11 CONFIGURE: Determine whether an error response message is expected for this test.  RECORD this information as: ErrorResponseExpected:  ${ErrorResponseExpected}" passfailResult="False"/>
          <jl:if test="${ErrorResponseExpected}">
               <testStep functionId="Step 12 CONFIGURE: IF ErrorResponseExpected is true, determine the expected error code response for this test.  RECORD this information as:  ErrorTypeExpected:  ${ErrorTypeExpected}" passfailResult="False"/>
          </jl:if>
          <testStep functionId="Step 13 REQUEST-RESPONSE-EC with the following parameters:   DIALOG=dlVideoSwitchStatusRequest RESPONSETIMEREQUIRED=TMDD_N33R557_Send_Video_Switch_Status_Information_Upon_Request_Parameter REQUESTMESSAGE = RequestMessage ERRORRESPONSEEXPECTED = ErrorResponseExpected ERRORTYPEEXPECTED = ErrorTypeExpected ">
               <REQUEST-RESPONSE-EC Dialog="dlVideoSwitchStatusRequest" functionId="dlVideoSwitchStatusRequest" RESPONSETIMEREQUIRED="${TMDD_N33R557_Send_Video_Switch_Status_Information_Upon_Request_Parameter}" REQUESTMESSAGE="${RequestMessage}" ERRORRESPONSEEXPECTED="${ErrorResponseExpected}" ERRORTYPEEXPECTED="${ErrorTypeExpected}"/>
          </testStep>
          <testStep functionId="Step 14 IF ErrorResponseExpected is not equal to TRUE THEN CONTINUE, OTHERWISE skip the following substeps." passfailResult="False"/>
          <jl:if test="${!ErrorResponseExpected}">
               <testStep functionId="Step 14.1 VERIFY that element device-status-header exists within each instance of videoSwitchStatusMsg.video-switch-status-item" passfailResult="True">
                    <ri-MessageVerify msgType="RESPONSE" elementName="device-status-header" instanceName="tmdd:videoSwitchStatusMsg.video-switch-status-item" elementType="data-frame" functionId="Looking for videoSwitchStatusMsg.video-switch-status-item"/>
               </testStep>
               <testStep functionId="Step 14.2 VERIFY that element device-status-header exists within each instance of videoSwitchStatusMsg.video-switch-status-item" passfailResult="True">
                    <ri-MessageVerify msgType="RESPONSE" elementName="device-status-header" instanceName="tmdd:videoSwitchStatusMsg.video-switch-status-item" elementType="data-frame" functionId="Looking for videoSwitchStatusMsg.video-switch-status-item"/>
               </testStep>
               <testStep functionId="Step 14.3 VERIFY that element organization-information exists within each instance of videoSwitchStatusMsg.video-switch-status-item.device-status-header" passfailResult="True">
                    <ri-MessageVerify msgType="RESPONSE" elementName="organization-information" instanceName="tmdd:videoSwitchStatusMsg.video-switch-status-item.device-status-header" elementType="data-frame" functionId="Looking for videoSwitchStatusMsg.video-switch-status-item.device-status-header"/>
               </testStep>
               <testStep functionId="Step 14.4 VERIFY that element device-id exists within each instance of videoSwitchStatusMsg.video-switch-status-item.device-status-header" passfailResult="True">
                    <ri-MessageVerify msgType="RESPONSE" elementName="device-id" instanceName="tmdd:videoSwitchStatusMsg.video-switch-status-item.device-status-header" elementType="data-element" functionId="Looking for videoSwitchStatusMsg.video-switch-status-item.device-status-header"/>
               </testStep>
               <testStep functionId="Step 14.5 VERIFY that element device-status exists within each instance of videoSwitchStatusMsg.video-switch-status-item.device-status-header" passfailResult="True">
                    <ri-MessageVerify msgType="RESPONSE" elementName="device-status" instanceName="tmdd:videoSwitchStatusMsg.video-switch-status-item.device-status-header" elementType="data-element" functionId="Looking for videoSwitchStatusMsg.video-switch-status-item.device-status-header"/>
               </testStep>
               <testStep functionId="Step 14.6 VERIFY that element videoSwitchStatusMsg exists." passfailResult="True">
                    <ri-MessageVerify msgType="RESPONSE" elementName="videoSwitchStatusMsg" instanceName="tmdd:videoSwitchStatusMsg" elementType="message" functionId="Looking for videoSwitchStatusMsg"/>
               </testStep>
               <testStep functionId="Step 14.7 VERIFY that element device-status-header exists within each instance of videoSwitchStatusMsg.video-switch-status-item" passfailResult="True">
                    <ri-MessageVerify msgType="RESPONSE" elementName="device-status-header" instanceName="tmdd:videoSwitchStatusMsg.video-switch-status-item" elementType="data-frame" functionId="Looking for videoSwitchStatusMsg.video-switch-status-item"/>
               </testStep>
               <testStep functionId="Step 14.8 VERIFY that element input-channel-id exists within each instance of videoSwitchStatusMsg.video-switch-status-item.switched-channel-list.switched-channel" passfailResult="True">
                    <ri-MessageVerify msgType="RESPONSE" elementName="input-channel-id" instanceName="tmdd:videoSwitchStatusMsg.video-switch-status-item.switched-channel-list.switched-channel" elementType="data-element" functionId="Looking for videoSwitchStatusMsg.video-switch-status-item.switched-channel-list.switched-channel"/>
               </testStep>
               <testStep functionId="Step 14.9 VERIFY that element output-channel-id exists within each instance of videoSwitchStatusMsg.video-switch-status-item.switched-channel-list.switched-channel" passfailResult="True">
                    <ri-MessageVerify msgType="RESPONSE" elementName="output-channel-id" instanceName="tmdd:videoSwitchStatusMsg.video-switch-status-item.switched-channel-list.switched-channel" elementType="data-element" functionId="Looking for videoSwitchStatusMsg.video-switch-status-item.switched-channel-list.switched-channel"/>
               </testStep>
               <testStep functionId="Step 14.10 IF TMDD_N33R394_Restrictions___Device_Status_Supported is equal to TRUE THEN CONTINUE; OTHERWISE skip the following substeps." passFailResult="False"/>
               <jl:if test="${TMDD_N33R394_Restrictions___Device_Status_Supported}">
                    <testStep functionId="Step 14.10.1 VERIFY that element restrictions exists within each instance of videoSwitchStatusMsg.video-switch-status-item.device-status-header" passfailResult="True">
                         <ri-MessageVerify msgType="RESPONSE" elementName="restrictions" instanceName="tmdd:videoSwitchStatusMsg.video-switch-status-item.device-status-header" elementType="data-frame" functionId="Looking for videoSwitchStatusMsg.video-switch-status-item.device-status-header"/>
                    </testStep>
               </jl:if>
               <testStep functionId="Step 14.11 IF TMDD_N33R395_Unique_Identifier_of_the_Controlling_Center_Supported is equal to TRUE THEN CONTINUE; OTHERWISE skip the following substeps." passFailResult="False"/>
               <jl:if test="${TMDD_N33R395_Unique_Identifier_of_the_Controlling_Center_Supported}">
                    <testStep functionId="Step 14.11.1 VERIFY that element center-id exists within each instance of videoSwitchStatusMsg.video-switch-status-item.device-status-header" passfailResult="True">
                         <ri-MessageVerify msgType="RESPONSE" elementName="center-id" instanceName="tmdd:videoSwitchStatusMsg.video-switch-status-item.device-status-header" elementType="data-element" functionId="Looking for videoSwitchStatusMsg.video-switch-status-item.device-status-header"/>
                    </testStep>
               </jl:if>
               <testStep functionId="Step 14.12 IF TMDD_N33R396_Device_Communications_Status_Supported is equal to TRUE THEN CONTINUE; OTHERWISE skip the following substeps." passFailResult="False"/>
               <jl:if test="${TMDD_N33R396_Device_Communications_Status_Supported}">
                    <testStep functionId="Step 14.12.1 VERIFY that element device-comm-status exists within each instance of videoSwitchStatusMsg.video-switch-status-item.device-status-header" passfailResult="True">
                         <ri-MessageVerify msgType="RESPONSE" elementName="device-comm-status" instanceName="tmdd:videoSwitchStatusMsg.video-switch-status-item.device-status-header" elementType="data-element" functionId="Looking for videoSwitchStatusMsg.video-switch-status-item.device-status-header"/>
                    </testStep>
               </jl:if>
               <testStep functionId="Step 14.13 IF TMDD_N33R397_Operator_Identifier___Device_Status_Supported is equal to TRUE THEN CONTINUE; OTHERWISE skip the following substeps." passFailResult="False"/>
               <jl:if test="${TMDD_N33R397_Operator_Identifier___Device_Status_Supported}">
                    <testStep functionId="Step 14.13.1 VERIFY that element operator-id exists within each instance of videoSwitchStatusMsg.video-switch-status-item.device-status-header" passfailResult="True">
                         <ri-MessageVerify msgType="RESPONSE" elementName="operator-id" instanceName="tmdd:videoSwitchStatusMsg.video-switch-status-item.device-status-header" elementType="data-element" functionId="Looking for videoSwitchStatusMsg.video-switch-status-item.device-status-header"/>
                    </testStep>
               </jl:if>
               <testStep functionId="Step 14.14 IF TMDD_N33R398_Event_Identifier___Device_Status_Supported is equal to TRUE THEN CONTINUE; OTHERWISE skip the following substeps." passFailResult="False"/>
               <jl:if test="${TMDD_N33R398_Event_Identifier___Device_Status_Supported}">
                    <testStep functionId="Step 14.14.1 VERIFY that element event-id exists within each instance of videoSwitchStatusMsg.video-switch-status-item.device-status-header" passfailResult="True">
                         <ri-MessageVerify msgType="RESPONSE" elementName="event-id" instanceName="tmdd:videoSwitchStatusMsg.video-switch-status-item.device-status-header" elementType="data-element" functionId="Looking for videoSwitchStatusMsg.video-switch-status-item.device-status-header"/>
                    </testStep>
               </jl:if>
               <testStep functionId="Step 14.15 IF TMDD_N33R399_Event_Response_Plan___Device_Status_Supported is equal to TRUE THEN CONTINUE; OTHERWISE skip the following substeps." passFailResult="False"/>
               <jl:if test="${TMDD_N33R399_Event_Response_Plan___Device_Status_Supported}">
                    <testStep functionId="Step 14.15.1 VERIFY that element response-plan-id exists within each instance of videoSwitchStatusMsg.video-switch-status-item.device-status-header" passfailResult="True">
                         <ri-MessageVerify msgType="RESPONSE" elementName="response-plan-id" instanceName="tmdd:videoSwitchStatusMsg.video-switch-status-item.device-status-header" elementType="data-element" functionId="Looking for videoSwitchStatusMsg.video-switch-status-item.device-status-header"/>
                    </testStep>
               </jl:if>
               <testStep functionId="Step 14.16 IF TMDD_N33R400_Device_Status_Date_and_Time_Change_Information_Supported is equal to TRUE THEN CONTINUE; OTHERWISE skip the following substeps." passFailResult="False"/>
               <jl:if test="${TMDD_N33R400_Device_Status_Date_and_Time_Change_Information_Supported}">
                    <testStep functionId="Step 14.16.1 VERIFY that element last-comm-time exists within each instance of videoSwitchStatusMsg.video-switch-status-item.device-status-header" passfailResult="True">
                         <ri-MessageVerify msgType="RESPONSE" elementName="last-comm-time" instanceName="tmdd:videoSwitchStatusMsg.video-switch-status-item.device-status-header" elementType="data-frame" functionId="Looking for videoSwitchStatusMsg.video-switch-status-item.device-status-header"/>
                    </testStep>
               </jl:if>
               <testStep functionId="Step 14.17 IF TMDD_N33R563_Text_Insertion___Video_Switch_Status_Supported is equal to TRUE THEN CONTINUE; OTHERWISE skip the following substeps." passFailResult="False"/>
               <jl:if test="${TMDD_N33R563_Text_Insertion___Video_Switch_Status_Supported}">
                    <testStep functionId="Step 14.17.1 VERIFY that element channel-titling-text exists within each instance of videoSwitchStatusMsg.video-switch-status-item.switched-channel-list.switched-channel" passfailResult="True">
                         <ri-MessageVerify msgType="RESPONSE" elementName="channel-titling-text" instanceName="tmdd:videoSwitchStatusMsg.video-switch-status-item.switched-channel-list.switched-channel" elementType="data-element" functionId="Looking for videoSwitchStatusMsg.video-switch-status-item.switched-channel-list.switched-channel"/>
                    </testStep>
               </jl:if>
               <testStep functionId="Step 14.18 VERIFY that the values within the RESPONSE message are correct per the TMDD standard and known operational conditions.">
                    <AUTO-VERIFY-MESSAGE functionId="Automatically Verify message content" msgName="RESPONSE" verificationSpec="${VerificationSpec}"/>
                    <USER-VERIFY-MESSAGE functionId="The User Verifies the message content" msgName="RESPONSE" optionList="TMDD_N33R394_Restrictions___Device_Status_Supported,restrictions,tmdd:videoSwitchStatusMsg.video-switch-status-item.device-status-header;TMDD_N33R395_Unique_Identifier_of_the_Controlling_Center_Supported,center-id,tmdd:videoSwitchStatusMsg.video-switch-status-item.device-status-header;TMDD_N33R396_Device_Communications_Status_Supported,device-comm-status,tmdd:videoSwitchStatusMsg.video-switch-status-item.device-status-header;TMDD_N33R397_Operator_Identifier___Device_Status_Supported,operator-id,tmdd:videoSwitchStatusMsg.video-switch-status-item.device-status-header;TMDD_N33R398_Event_Identifier___Device_Status_Supported,event-id,tmdd:videoSwitchStatusMsg.video-switch-status-item.device-status-header;TMDD_N33R399_Event_Response_Plan___Device_Status_Supported,response-plan-id,tmdd:videoSwitchStatusMsg.video-switch-status-item.device-status-header;TMDD_N33R400_Device_Status_Date_and_Time_Change_Information_Supported,last-comm-time,tmdd:videoSwitchStatusMsg.video-switch-status-item.device-status-header;TMDD_N33R563_Text_Insertion___Video_Switch_Status_Supported,channel-titling-text,tmdd:videoSwitchStatusMsg.video-switch-status-item.switched-channel-list.switched-channel;" userDataFile="${RI_USERTCDATAFILE}"/>
               </testStep>
          </jl:if>
     </C2CRI-session>
</testprocedure>