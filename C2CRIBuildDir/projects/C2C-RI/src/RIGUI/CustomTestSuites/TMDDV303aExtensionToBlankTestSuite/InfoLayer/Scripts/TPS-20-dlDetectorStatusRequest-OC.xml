<?xml version="1.0" encoding="UTF-8"?>
<!--Title:  TPS-20-dlDetectorStatusRequest-OC
       Description:  This test procedure is called by a test case and is used to verify the SUTs support of the dlDetectorStatusRequest dialog as an OC using variables provided by the calling test case.  
This procedure supports verification of requirements related to user need 2.3.5.1.3 [Need to Share Detector Status] and is used for both valid and invalid test cases.
       Version/Date: 2013/09/23 18:18:55-->
<testprocedure xmlns="jelly:jameleon" xmlns:jl="jelly:core">
     <test-case-id>${C2CRITestCaseID}</test-case-id>
     <test-case-summary>This test procedure is called by a test case and is used to verify the SUTs support of the dlDetectorStatusRequest dialog as an OC using variables provided by the calling test case.  
This procedure supports verification of requirements related to user need 2.3.5.1.3 [Need to Share Detector Status] and is used for both valid and invalid test cases.</test-case-summary>
     <testStep functionId="Step 1 CONFIGURE: Determine the Application Layer Standard that will be used for this test.  RECORD this information as: ApplicationLayerStandard:  ${ApplicationLayerStandard}" passfailResult="False "/>
     <testStep functionId="Step 2 CONFIGURE: Determine whether Restrictions - Device Status is required by the specification. (NRTM 3.3.5.1.3.1.2.1).  RECORD this information as: TMDD_N20R394_Restrictions___Device_Status_Supported = ${TMDD_N20R394_Restrictions___Device_Status_Supported}" passfailResult="False"/>
     <testStep functionId="Step 3 CONFIGURE: Determine whether Unique Identifier of the Controlling Center is required by the specification. (NRTM 3.3.5.1.3.1.2.2).  RECORD this information as: TMDD_N20R395_Unique_Identifier_of_the_Controlling_Center_Supported = ${TMDD_N20R395_Unique_Identifier_of_the_Controlling_Center_Supported}" passfailResult="False"/>
     <testStep functionId="Step 4 CONFIGURE: Determine whether Device Communications Status is required by the specification. (NRTM 3.3.5.1.3.1.2.3).  RECORD this information as: TMDD_N20R396_Device_Communications_Status_Supported = ${TMDD_N20R396_Device_Communications_Status_Supported}" passfailResult="False"/>
     <testStep functionId="Step 5 CONFIGURE: Determine whether Operator Identifier - Device Status is required by the specification. (NRTM 3.3.5.1.3.1.2.4).  RECORD this information as: TMDD_N20R397_Operator_Identifier___Device_Status_Supported = ${TMDD_N20R397_Operator_Identifier___Device_Status_Supported}" passfailResult="False"/>
     <testStep functionId="Step 6 CONFIGURE: Determine whether Event Identifier - Device Status is required by the specification. (NRTM 3.3.5.1.3.1.2.5).  RECORD this information as: TMDD_N20R398_Event_Identifier___Device_Status_Supported = ${TMDD_N20R398_Event_Identifier___Device_Status_Supported}" passfailResult="False"/>
     <testStep functionId="Step 7 CONFIGURE: Determine whether Event Response Plan - Device Status is required by the specification. (NRTM 3.3.5.1.3.1.2.6).  RECORD this information as: TMDD_N20R399_Event_Response_Plan___Device_Status_Supported = ${TMDD_N20R399_Event_Response_Plan___Device_Status_Supported}" passfailResult="False"/>
     <testStep functionId="Step 8 CONFIGURE: Determine whether Device Status Date and Time Change Information is required by the specification. (NRTM 3.3.5.1.3.1.2.7).  RECORD this information as: TMDD_N20R400_Device_Status_Date_and_Time_Change_Information_Supported = ${TMDD_N20R400_Device_Status_Date_and_Time_Change_Information_Supported}" passfailResult="False"/>
     <testStep functionId="Step 9 CONFIGURE: Determine whether Detector Station Status Information is required by the specification. (NRTM 3.3.5.2.2.5.2.1).  RECORD this information as: TMDD_N20R462_Detector_Station_Status_Information_Supported = ${TMDD_N20R462_Detector_Station_Status_Information_Supported}" passfailResult="False"/>
     <testStep functionId="Step 10 CONFIGURE: Determine whether Lane Number - Detector Status is required by the specification. (NRTM 3.3.5.2.2.5.2.2).  RECORD this information as: TMDD_N20R463_Lane_Number___Detector_Status_Supported = ${TMDD_N20R463_Lane_Number___Detector_Status_Supported}" passfailResult="False"/>
     <testStep functionId="Step 11 CONFIGURE: Determine whether Direction of Travel - Detector Status is required by the specification. (NRTM 3.3.5.2.2.5.2.3).  RECORD this information as: TMDD_N20R464_Direction_of_Travel___Detector_Status_Supported = ${TMDD_N20R464_Direction_of_Travel___Detector_Status_Supported}" passfailResult="False"/>
     <testStep functionId="Step 12 CONFIGURE: Determine whether Detection Zone Output Mode is required by the specification. (NRTM 3.3.5.2.2.5.2.4).  RECORD this information as: TMDD_N20R465_Detection_Zone_Output_Mode_Supported = ${TMDD_N20R465_Detection_Zone_Output_Mode_Supported}" passfailResult="False"/>
     <C2CRI-session beginSession="true" infoStd="TMDDv3.03a" appStd="${ApplicationLayerStandard}" useWSDL="true" testCaseIdentifier="${C2CRITestCaseID}" riMode="EC">
          <testStep functionId="Step 13 CONFIGURE: Define the message that will be sent to the SUT.  RECORD this information as: RequestMessage:  ${RequestMessage}" passfailResult="False"/>
          <testStep functionId="Step 14 CONFIGURE: Determine whether an error response message is expected for this test.  RECORD this information as: ErrorResponseExpected:  ${ErrorResponseExpected}" passfailResult="False"/>
          <jl:if test="${ErrorResponseExpected}">
               <testStep functionId="Step 15 CONFIGURE: IF ErrorResponseExpected is true, determine the expected error code response for this test.  RECORD this information as:  ErrorTypeExpected:  ${ErrorTypeExpected}" passfailResult="False"/>
          </jl:if>
          <testStep functionId="Step 16 REQUEST-RESPONSE-EC with the following parameters:   DIALOG=dlDetectorStatusRequest RESPONSETIMEREQUIRED=TMDD_N20R456_Send_Detector_Status_Information_Upon_Request_Parameter REQUESTMESSAGE = RequestMessage ERRORRESPONSEEXPECTED = ErrorResponseExpected ERRORTYPEEXPECTED = ErrorTypeExpected ">
               <REQUEST-RESPONSE-EC Dialog="dlDetectorStatusRequest" functionId="dlDetectorStatusRequest" RESPONSETIMEREQUIRED="${TMDD_N20R456_Send_Detector_Status_Information_Upon_Request_Parameter}" REQUESTMESSAGE="${RequestMessage}" ERRORRESPONSEEXPECTED="${ErrorResponseExpected}" ERRORTYPEEXPECTED="${ErrorTypeExpected}"/>
          </testStep>
          <testStep functionId="Step 17 IF ErrorResponseExpected is not equal to TRUE THEN CONTINUE, OTHERWISE skip the following substeps." passfailResult="False"/>
          <jl:if test="${!ErrorResponseExpected}">
               <testStep functionId="Step 17.1 VERIFY that element detector-status-header exists within each instance of detectorStatusMsg.detector-status-item.detector-status-list.detector" passfailResult="True">
                    <ri-MessageVerify msgType="RESPONSE" elementName="detector-status-header" instanceName="tmdd:detectorStatusMsg.detector-status-item.detector-status-list.detector" elementType="data-frame" functionId="Looking for detectorStatusMsg.detector-status-item.detector-status-list.detector"/>
               </testStep>
               <testStep functionId="Step 17.2 VERIFY that element detector-status-header exists within each instance of detectorStatusMsg.detector-status-item.detector-status-list.detector" passfailResult="True">
                    <ri-MessageVerify msgType="RESPONSE" elementName="detector-status-header" instanceName="tmdd:detectorStatusMsg.detector-status-item.detector-status-list.detector" elementType="data-frame" functionId="Looking for detectorStatusMsg.detector-status-item.detector-status-list.detector"/>
               </testStep>
               <testStep functionId="Step 17.3 VERIFY that element detector-station-status-header exists within each instance of detectorStatusMsg.detector-status-item" passfailResult="True">
                    <ri-MessageVerify msgType="RESPONSE" elementName="detector-station-status-header" instanceName="tmdd:detectorStatusMsg.detector-status-item" elementType="data-frame" functionId="Looking for detectorStatusMsg.detector-status-item"/>
               </testStep>
               <testStep functionId="Step 17.4 VERIFY that element organization-information exists within each instance of detectorStatusMsg.detector-status-item.detector-status-list.detector.detector-status-header" passfailResult="True">
                    <ri-MessageVerify msgType="RESPONSE" elementName="organization-information" instanceName="tmdd:detectorStatusMsg.detector-status-item.detector-status-list.detector.detector-status-header" elementType="data-frame" functionId="Looking for detectorStatusMsg.detector-status-item.detector-status-list.detector.detector-status-header"/>
               </testStep>
               <testStep functionId="Step 17.5 VERIFY that element device-id exists within each instance of detectorStatusMsg.detector-status-item.detector-status-list.detector.detector-status-header" passfailResult="True">
                    <ri-MessageVerify msgType="RESPONSE" elementName="device-id" instanceName="tmdd:detectorStatusMsg.detector-status-item.detector-status-list.detector.detector-status-header" elementType="data-element" functionId="Looking for detectorStatusMsg.detector-status-item.detector-status-list.detector.detector-status-header"/>
               </testStep>
               <testStep functionId="Step 17.6 VERIFY that element device-status exists within each instance of detectorStatusMsg.detector-status-item.detector-status-list.detector.detector-status-header" passfailResult="True">
                    <ri-MessageVerify msgType="RESPONSE" elementName="device-status" instanceName="tmdd:detectorStatusMsg.detector-status-item.detector-status-list.detector.detector-status-header" elementType="data-element" functionId="Looking for detectorStatusMsg.detector-status-item.detector-status-list.detector.detector-status-header"/>
               </testStep>
               <testStep functionId="Step 17.7 VERIFY that element detectorStatusMsg exists." passfailResult="True">
                    <ri-MessageVerify msgType="RESPONSE" elementName="detectorStatusMsg" instanceName="tmdd:detectorStatusMsg" elementType="message" functionId="Looking for detectorStatusMsg"/>
               </testStep>
               <testStep functionId="Step 17.8 VERIFY that element detector-status-header exists within each instance of detectorStatusMsg.detector-status-item.detector-status-list.detector" passfailResult="True">
                    <ri-MessageVerify msgType="RESPONSE" elementName="detector-status-header" instanceName="tmdd:detectorStatusMsg.detector-status-item.detector-status-list.detector" elementType="data-frame" functionId="Looking for detectorStatusMsg.detector-status-item.detector-status-list.detector"/>
               </testStep>
               <testStep functionId="Step 17.9 IF TMDD_N20R394_Restrictions___Device_Status_Supported is equal to TRUE THEN CONTINUE; OTHERWISE skip the following substeps." passFailResult="False"/>
               <jl:if test="${TMDD_N20R394_Restrictions___Device_Status_Supported}">
                    <testStep functionId="Step 17.9.1 VERIFY that element restrictions exists within each instance of detectorStatusMsg.detector-status-item.detector-status-list.detector.detector-status-header" passfailResult="True">
                         <ri-MessageVerify msgType="RESPONSE" elementName="restrictions" instanceName="tmdd:detectorStatusMsg.detector-status-item.detector-status-list.detector.detector-status-header" elementType="data-frame" functionId="Looking for detectorStatusMsg.detector-status-item.detector-status-list.detector.detector-status-header"/>
                    </testStep>
               </jl:if>
               <testStep functionId="Step 17.10 IF TMDD_N20R395_Unique_Identifier_of_the_Controlling_Center_Supported is equal to TRUE THEN CONTINUE; OTHERWISE skip the following substeps." passFailResult="False"/>
               <jl:if test="${TMDD_N20R395_Unique_Identifier_of_the_Controlling_Center_Supported}">
                    <testStep functionId="Step 17.10.1 VERIFY that element center-id exists within each instance of detectorStatusMsg.detector-status-item.detector-status-list.detector.detector-status-header" passfailResult="True">
                         <ri-MessageVerify msgType="RESPONSE" elementName="center-id" instanceName="tmdd:detectorStatusMsg.detector-status-item.detector-status-list.detector.detector-status-header" elementType="data-element" functionId="Looking for detectorStatusMsg.detector-status-item.detector-status-list.detector.detector-status-header"/>
                    </testStep>
               </jl:if>
               <testStep functionId="Step 17.11 IF TMDD_N20R396_Device_Communications_Status_Supported is equal to TRUE THEN CONTINUE; OTHERWISE skip the following substeps." passFailResult="False"/>
               <jl:if test="${TMDD_N20R396_Device_Communications_Status_Supported}">
                    <testStep functionId="Step 17.11.1 VERIFY that element device-comm-status exists within each instance of detectorStatusMsg.detector-status-item.detector-status-list.detector.detector-status-header" passfailResult="True">
                         <ri-MessageVerify msgType="RESPONSE" elementName="device-comm-status" instanceName="tmdd:detectorStatusMsg.detector-status-item.detector-status-list.detector.detector-status-header" elementType="data-element" functionId="Looking for detectorStatusMsg.detector-status-item.detector-status-list.detector.detector-status-header"/>
                    </testStep>
               </jl:if>
               <testStep functionId="Step 17.12 IF TMDD_N20R397_Operator_Identifier___Device_Status_Supported is equal to TRUE THEN CONTINUE; OTHERWISE skip the following substeps." passFailResult="False"/>
               <jl:if test="${TMDD_N20R397_Operator_Identifier___Device_Status_Supported}">
                    <testStep functionId="Step 17.12.1 VERIFY that element operator-id exists within each instance of detectorStatusMsg.detector-status-item.detector-status-list.detector.detector-status-header" passfailResult="True">
                         <ri-MessageVerify msgType="RESPONSE" elementName="operator-id" instanceName="tmdd:detectorStatusMsg.detector-status-item.detector-status-list.detector.detector-status-header" elementType="data-element" functionId="Looking for detectorStatusMsg.detector-status-item.detector-status-list.detector.detector-status-header"/>
                    </testStep>
               </jl:if>
               <testStep functionId="Step 17.13 IF TMDD_N20R398_Event_Identifier___Device_Status_Supported is equal to TRUE THEN CONTINUE; OTHERWISE skip the following substeps." passFailResult="False"/>
               <jl:if test="${TMDD_N20R398_Event_Identifier___Device_Status_Supported}">
                    <testStep functionId="Step 17.13.1 VERIFY that element event-id exists within each instance of detectorStatusMsg.detector-status-item.detector-status-list.detector.detector-status-header" passfailResult="True">
                         <ri-MessageVerify msgType="RESPONSE" elementName="event-id" instanceName="tmdd:detectorStatusMsg.detector-status-item.detector-status-list.detector.detector-status-header" elementType="data-element" functionId="Looking for detectorStatusMsg.detector-status-item.detector-status-list.detector.detector-status-header"/>
                    </testStep>
               </jl:if>
               <testStep functionId="Step 17.14 IF TMDD_N20R399_Event_Response_Plan___Device_Status_Supported is equal to TRUE THEN CONTINUE; OTHERWISE skip the following substeps." passFailResult="False"/>
               <jl:if test="${TMDD_N20R399_Event_Response_Plan___Device_Status_Supported}">
                    <testStep functionId="Step 17.14.1 VERIFY that element response-plan-id exists within each instance of detectorStatusMsg.detector-status-item.detector-status-list.detector.detector-status-header" passfailResult="True">
                         <ri-MessageVerify msgType="RESPONSE" elementName="response-plan-id" instanceName="tmdd:detectorStatusMsg.detector-status-item.detector-status-list.detector.detector-status-header" elementType="data-element" functionId="Looking for detectorStatusMsg.detector-status-item.detector-status-list.detector.detector-status-header"/>
                    </testStep>
               </jl:if>
               <testStep functionId="Step 17.15 IF TMDD_N20R400_Device_Status_Date_and_Time_Change_Information_Supported is equal to TRUE THEN CONTINUE; OTHERWISE skip the following substeps." passFailResult="False"/>
               <jl:if test="${TMDD_N20R400_Device_Status_Date_and_Time_Change_Information_Supported}">
                    <testStep functionId="Step 17.15.1 VERIFY that element last-comm-time exists within each instance of detectorStatusMsg.detector-status-item.detector-status-list.detector.detector-status-header" passfailResult="True">
                         <ri-MessageVerify msgType="RESPONSE" elementName="last-comm-time" instanceName="tmdd:detectorStatusMsg.detector-status-item.detector-status-list.detector.detector-status-header" elementType="data-frame" functionId="Looking for detectorStatusMsg.detector-status-item.detector-status-list.detector.detector-status-header"/>
                    </testStep>
               </jl:if>
               <testStep functionId="Step 17.16 IF TMDD_N20R462_Detector_Station_Status_Information_Supported is equal to TRUE THEN CONTINUE; OTHERWISE skip the following substeps." passFailResult="False"/>
               <jl:if test="${TMDD_N20R462_Detector_Station_Status_Information_Supported}">
                    <testStep functionId="Step 17.16.1 VERIFY that element detector-station-status-header exists within each instance of detectorStatusMsg.detector-status-item" passfailResult="True">
                         <ri-MessageVerify msgType="RESPONSE" elementName="detector-station-status-header" instanceName="tmdd:detectorStatusMsg.detector-status-item" elementType="data-frame" functionId="Looking for detectorStatusMsg.detector-status-item"/>
                    </testStep>
               </jl:if>
               <testStep functionId="Step 17.17 IF TMDD_N20R463_Lane_Number___Detector_Status_Supported is equal to TRUE THEN CONTINUE; OTHERWISE skip the following substeps." passFailResult="False"/>
               <jl:if test="${TMDD_N20R463_Lane_Number___Detector_Status_Supported}">
                    <testStep functionId="Step 17.17.1 VERIFY that element detector-lane-number exists within each instance of detectorStatusMsg.detector-status-item.detector-status-list.detector" passfailResult="True">
                         <ri-MessageVerify msgType="RESPONSE" elementName="detector-lane-number" instanceName="tmdd:detectorStatusMsg.detector-status-item.detector-status-list.detector" elementType="data-element" functionId="Looking for detectorStatusMsg.detector-status-item.detector-status-list.detector"/>
                    </testStep>
               </jl:if>
               <testStep functionId="Step 17.18 IF TMDD_N20R464_Direction_of_Travel___Detector_Status_Supported is equal to TRUE THEN CONTINUE; OTHERWISE skip the following substeps." passFailResult="False"/>
               <jl:if test="${TMDD_N20R464_Direction_of_Travel___Detector_Status_Supported}">
                    <testStep functionId="Step 17.18.1 VERIFY that element lane-direction exists within each instance of detectorStatusMsg.detector-status-item.detector-status-list.detector" passfailResult="True">
                         <ri-MessageVerify msgType="RESPONSE" elementName="lane-direction" instanceName="tmdd:detectorStatusMsg.detector-status-item.detector-status-list.detector" elementType="data-element" functionId="Looking for detectorStatusMsg.detector-status-item.detector-status-list.detector"/>
                    </testStep>
               </jl:if>
               <testStep functionId="Step 17.19 IF TMDD_N20R465_Detection_Zone_Output_Mode_Supported is equal to TRUE THEN CONTINUE; OTHERWISE skip the following substeps." passFailResult="False"/>
               <jl:if test="${TMDD_N20R465_Detection_Zone_Output_Mode_Supported}">
                    <testStep functionId="Step 17.19.1 VERIFY that element detector-outputmode exists within each instance of detectorStatusMsg.detector-status-item.detector-status-list.detector" passfailResult="True">
                         <ri-MessageVerify msgType="RESPONSE" elementName="detector-outputmode" instanceName="tmdd:detectorStatusMsg.detector-status-item.detector-status-list.detector" elementType="data-element" functionId="Looking for detectorStatusMsg.detector-status-item.detector-status-list.detector"/>
                    </testStep>
               </jl:if>
               <testStep functionId="Step 17.20 VERIFY that the values within the RESPONSE message are correct per the TMDD standard and known operational conditions.">
                    <AUTO-VERIFY-MESSAGE functionId="Automatically Verify message content" msgName="RESPONSE" verificationSpec="${VerificationSpec}"/>
                    <USER-VERIFY-MESSAGE functionId="The User Verifies the message content" msgName="RESPONSE" optionList="TMDD_N20R394_Restrictions___Device_Status_Supported,restrictions,tmdd:detectorStatusMsg.detector-status-item.detector-status-list.detector.detector-status-header;TMDD_N20R395_Unique_Identifier_of_the_Controlling_Center_Supported,center-id,tmdd:detectorStatusMsg.detector-status-item.detector-status-list.detector.detector-status-header;TMDD_N20R396_Device_Communications_Status_Supported,device-comm-status,tmdd:detectorStatusMsg.detector-status-item.detector-status-list.detector.detector-status-header;TMDD_N20R397_Operator_Identifier___Device_Status_Supported,operator-id,tmdd:detectorStatusMsg.detector-status-item.detector-status-list.detector.detector-status-header;TMDD_N20R398_Event_Identifier___Device_Status_Supported,event-id,tmdd:detectorStatusMsg.detector-status-item.detector-status-list.detector.detector-status-header;TMDD_N20R399_Event_Response_Plan___Device_Status_Supported,response-plan-id,tmdd:detectorStatusMsg.detector-status-item.detector-status-list.detector.detector-status-header;TMDD_N20R400_Device_Status_Date_and_Time_Change_Information_Supported,last-comm-time,tmdd:detectorStatusMsg.detector-status-item.detector-status-list.detector.detector-status-header;TMDD_N20R462_Detector_Station_Status_Information_Supported,detector-station-status-header,tmdd:detectorStatusMsg.detector-status-item;TMDD_N20R463_Lane_Number___Detector_Status_Supported,detector-lane-number,tmdd:detectorStatusMsg.detector-status-item.detector-status-list.detector;TMDD_N20R464_Direction_of_Travel___Detector_Status_Supported,lane-direction,tmdd:detectorStatusMsg.detector-status-item.detector-status-list.detector;TMDD_N20R465_Detection_Zone_Output_Mode_Supported,detector-outputmode,tmdd:detectorStatusMsg.detector-status-item.detector-status-list.detector;" userDataFile="${RI_USERTCDATAFILE}"/>
               </testStep>
          </jl:if>
     </C2CRI-session>
</testprocedure>