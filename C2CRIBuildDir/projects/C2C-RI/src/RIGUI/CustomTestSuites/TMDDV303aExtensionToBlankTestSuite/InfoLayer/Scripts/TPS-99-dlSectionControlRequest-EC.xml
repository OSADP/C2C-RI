<?xml version="1.0" encoding="UTF-8"?>
<!--Title:  TPS-99-dlSectionControlRequest-EC
       Description:  This test procedure is called by a test case and is used to verify the SUTs support of the dlSectionControlRequest dialog as an EC using variables provided by the calling test case.  
This procedure supports verification of requirements related to user need 2.3.5.10.14 [Need to Control a Section] and is used for both valid and invalid test cases.
       Version/Date: 2013/09/23 18:52:06-->
<testprocedure xmlns="jelly:jameleon" xmlns:jl="jelly:core">
     <test-case-id>${C2CRITestCaseID}</test-case-id>
     <test-case-summary>This test procedure is called by a test case and is used to verify the SUTs support of the dlSectionControlRequest dialog as an EC using variables provided by the calling test case.  
This procedure supports verification of requirements related to user need 2.3.5.10.14 [Need to Control a Section] and is used for both valid and invalid test cases.</test-case-summary>
     <testStep functionId="Step 1 CONFIGURE: Determine the Application Layer Standard that will be used for this test.  RECORD this information as: ApplicationLayerStandard:  ${ApplicationLayerStandard}" passfailResult="False "/>
     <testStep functionId="Step 2 CONFIGURE: Determine whether Operator Identifier - Section Control is required by the specification. (NRTM 3.3.5.11.9.2.2.1).  RECORD this information as: TMDD_N99R1062_Operator_Identifier___Section_Control_Supported = ${TMDD_N99R1062_Operator_Identifier___Section_Control_Supported}" passfailResult="False"/>
     <testStep functionId="Step 3 CONFIGURE: Determine whether Event Identifier - Section Control is required by the specification. (NRTM 3.3.5.11.9.2.2.2).  RECORD this information as: TMDD_N99R1063_Event_Identifier___Section_Control_Supported = ${TMDD_N99R1063_Event_Identifier___Section_Control_Supported}" passfailResult="False"/>
     <testStep functionId="Step 4 CONFIGURE: Determine whether Event Response Plan - Section Control is required by the specification. (NRTM 3.3.5.11.9.2.2.3).  RECORD this information as: TMDD_N99R1064_Event_Response_Plan___Section_Control_Supported = ${TMDD_N99R1064_Event_Response_Plan___Section_Control_Supported}" passfailResult="False"/>
     <testStep functionId="Step 5 CONFIGURE: Determine whether Request Priority - Section Control is required by the specification. (NRTM 3.3.5.11.9.2.2.4).  RECORD this information as: TMDD_N99R1065_Request_Priority___Section_Control_Supported = ${TMDD_N99R1065_Request_Priority___Section_Control_Supported}" passfailResult="False"/>
     <testStep functionId="Step 6 CONFIGURE: Determine whether Signal Timing Mode - Section Control is required by the specification. (NRTM 3.3.5.11.9.2.2.5).  RECORD this information as: TMDD_N99R1066_Signal_Timing_Mode___Section_Control_Supported = ${TMDD_N99R1066_Signal_Timing_Mode___Section_Control_Supported}" passfailResult="False"/>
     <testStep functionId="Step 7 CONFIGURE: Determine whether Signal Timing Pattern - Section Control is required by the specification. (NRTM 3.3.5.11.9.2.2.6).  RECORD this information as: TMDD_N99R1067_Signal_Timing_Pattern___Section_Control_Supported = ${TMDD_N99R1067_Signal_Timing_Pattern___Section_Control_Supported}" passfailResult="False"/>
     <testStep functionId="Step 8 CONFIGURE: Determine whether Offset Adjustment - Section Control is required by the specification. (NRTM 3.3.5.11.9.2.2.7).  RECORD this information as: TMDD_N99R1068_Offset_Adjustment___Section_Control_Supported = ${TMDD_N99R1068_Offset_Adjustment___Section_Control_Supported}" passfailResult="False"/>
     <testStep functionId="Step 9 CONFIGURE: Determine whether Command Begin Time is required by the specification. (NRTM 3.3.5.11.9.2.2.8).  RECORD this information as: TMDD_N99R1069_Command_Begin_Time_Supported = ${TMDD_N99R1069_Command_Begin_Time_Supported}" passfailResult="False"/>
     <testStep functionId="Step 10 CONFIGURE: Determine whether Command End Time is required by the specification. (NRTM 3.3.5.11.9.2.2.9).  RECORD this information as: TMDD_N99R1070_Command_End_Time_Supported = ${TMDD_N99R1070_Command_End_Time_Supported}" passfailResult="False"/>
     <testStep functionId="Step 11 CONFIGURE: Determine whether Section Control Request Date and Time Information is required by the specification. (NRTM 3.3.5.11.9.2.2.10).  RECORD this information as: TMDD_N99R1071_Section_Control_Request_Date_and_Time_Information_Supported = ${TMDD_N99R1071_Section_Control_Request_Date_and_Time_Information_Supported}" passfailResult="False"/>
     <C2CRI-session beginSession="true" infoStd="TMDDv3.03a" appStd="${ApplicationLayerStandard}" useWSDL="true" testCaseIdentifier="${C2CRITestCaseID}" riMode="OC">
          <testStep functionId="Step 12 CONFIGURE: Define the response message that will be sent to the SUT.  RECORD this information as: ResponseMessage:  ${ResponseMessage}" passfailResult="False"/>
          <testStep functionId="Step 13 CONFIGURE: Determine whether the Authentication parameters need to be verified within this test.  RECORD this information as: AuthenticationCheck:  ${AuthenticationCheck}" passfailResult="False"/>
          <testStep functionId="Step 14 CONFIGURE: Identify the Username expected for authentication during this test.  RECORD this information as: Username:  ${Username}" passfailResult="False"/>
          <testStep functionId="Step 15 CONFIGURE: Identify the Password expected for authentication during this test.  RECORD this information as: Password:  ${Password}" passfailResult="False"/>
          <testStep functionId="Step 16 CONFIGURE: Identify the Organization Identifier expected for authentication during this test.  RECORD this information as: OrganizationID:  ${OrganizationID}" passfailResult="False"/>
          <testStep functionId="Step 17 CONFIGURE: Determine whether the SUT will be allowed access to the information requested in this test.  RECORD this information as: AllowAccess:  ${AllowAccess}" passfailResult="False"/>
          <testStep functionId="Step 18 CONFIGURE: Determine whether an error response message is expected for this test.  RECORD this information as: ErrorResponseExpected:  ${ErrorResponseExpected}" passfailResult="False"/>
          <jl:if test="${ErrorResponseExpected}">
               <testStep functionId="Step 19 CONFIGURE: IF ErrorResponseExpected is true, determine the expected error code response for this test.  RECORD this information as:  ErrorTypeExpected:  ${ErrorTypeExpected}" passfailResult="False"/>
          </jl:if>
          <testStep functionId="Step 20 CONFIGURE: Determine whether the SUT is expected to have valid data available for a response message in this test.  RECORD this information as: DataValid:  ${DataValid}" passfailResult="False"/>
          <testStep functionId="Step 21 REQUEST-RESPONSE-OC-RECEIVE with the following parameters:   DIALOG=dlSectionControlRequest RESPONSETIMEREQUIRED=TMDD_N99R1059_Send_Signal_Section_Control_Response_Upon_Request_Parameter AUTHENTICATIONCHECK = AuthenticationCheck USERNAME = Username PASSWORD = Password ORGANIZATIONID = OrganizationID ALLOWACCESS = AllowAccess ERRORRESPONSEEXPECTED = ErrorResponseExpected ERRORTYPEEXPECTED = ErrorTypeExpected DATAVALID = DataValid ">
               <REQUEST-RESPONSE-OC-RECEIVE Dialog="dlSectionControlRequest" functionId="dlSectionControlRequest" RESPONSETIMEREQUIRED="${TMDD_N99R1059_Send_Signal_Section_Control_Response_Upon_Request_Parameter}" AUTHENTICATIONCHECK="${AuthenticationCheck}" USERNAME="${Username}" PASSWORD="${Password}" ORGANIZATIONID="${OrganizationID}" ALLOWACCESS="${AllowAccess}" ERRORRESPONSEEXPECTED="${ErrorResponseExpected}" ERRORTYPEEXPECTED="${ErrorTypeExpected}" DATAVALID="${DataValid}"/>
          </testStep>
          <testStep functionId="Step 22 IF ErrorResponseExpected is not equal to TRUE THEN CONTINUE, OTHERWISE skip the following substeps." passfailResult="False"/>
          <jl:if test="${!ErrorResponseExpected}">
               <testStep functionId="Step 22.1 VERIFY that element sectionControlRequestMsg exists." passfailResult="True">
                    <ri-MessageVerify msgType="REQUEST" elementName="sectionControlRequestMsg" instanceName="tmdd:sectionControlRequestMsg" elementType="message" functionId="Looking for sectionControlRequestMsg"/>
               </testStep>
               <testStep functionId="Step 22.2 VERIFY that element authentication exists within sectionControlRequestMsg." passfailResult="True">
                    <ri-MessageVerify msgType="REQUEST" elementName="authentication" instanceName="tmdd:sectionControlRequestMsg" elementType="data-frame" functionId="Looking for sectionControlRequestMsg"/>
               </testStep>
               <testStep functionId="Step 22.3 VERIFY that element organization-requesting exists within sectionControlRequestMsg." passfailResult="True">
                    <ri-MessageVerify msgType="REQUEST" elementName="organization-requesting" instanceName="tmdd:sectionControlRequestMsg" elementType="data-frame" functionId="Looking for sectionControlRequestMsg"/>
               </testStep>
               <testStep functionId="Step 22.4 VERIFY that element section-id exists within sectionControlRequestMsg." passfailResult="True">
                    <ri-MessageVerify msgType="REQUEST" elementName="section-id" instanceName="tmdd:sectionControlRequestMsg" elementType="data-element" functionId="Looking for sectionControlRequestMsg"/>
               </testStep>
               <testStep functionId="Step 22.5 VERIFY that element request-id exists within sectionControlRequestMsg." passfailResult="True">
                    <ri-MessageVerify msgType="REQUEST" elementName="request-id" instanceName="tmdd:sectionControlRequestMsg" elementType="data-element" functionId="Looking for sectionControlRequestMsg"/>
               </testStep>
               <testStep functionId="Step 22.6 VERIFY that element section-request-command exists within sectionControlRequestMsg." passfailResult="True">
                    <ri-MessageVerify msgType="REQUEST" elementName="section-request-command" instanceName="tmdd:sectionControlRequestMsg" elementType="data-element" functionId="Looking for sectionControlRequestMsg"/>
               </testStep>
               <testStep functionId="Step 22.7 IF TMDD_N99R1062_Operator_Identifier___Section_Control_Supported is equal to TRUE THEN CONTINUE; OTHERWISE skip the following substeps." passFailResult="False"/>
               <jl:if test="${TMDD_N99R1062_Operator_Identifier___Section_Control_Supported}">
                    <testStep functionId="Step 22.7.1 VERIFY that element operator-id exists within each instance of sectionControlRequestMsg.authentication" passfailResult="True">
                         <ri-MessageVerify msgType="REQUEST" elementName="operator-id" instanceName="tmdd:sectionControlRequestMsg.authentication" elementType="data-element" functionId="Looking for sectionControlRequestMsg.authentication"/>
                    </testStep>
               </jl:if>
               <testStep functionId="Step 22.8 IF TMDD_N99R1063_Event_Identifier___Section_Control_Supported is equal to TRUE THEN CONTINUE; OTHERWISE skip the following substeps." passFailResult="False"/>
               <jl:if test="${TMDD_N99R1063_Event_Identifier___Section_Control_Supported}">
                    <testStep functionId="Step 22.8.1 VERIFY that element event-id exists within sectionControlRequestMsg." passfailResult="True">
                         <ri-MessageVerify msgType="REQUEST" elementName="event-id" instanceName="tmdd:sectionControlRequestMsg" elementType="data-element" functionId="Looking for sectionControlRequestMsg"/>
                    </testStep>
               </jl:if>
               <testStep functionId="Step 22.9 IF TMDD_N99R1064_Event_Response_Plan___Section_Control_Supported is equal to TRUE THEN CONTINUE; OTHERWISE skip the following substeps." passFailResult="False"/>
               <jl:if test="${TMDD_N99R1064_Event_Response_Plan___Section_Control_Supported}">
                    <testStep functionId="Step 22.9.1 VERIFY that element response-plan-id exists within sectionControlRequestMsg." passfailResult="True">
                         <ri-MessageVerify msgType="REQUEST" elementName="response-plan-id" instanceName="tmdd:sectionControlRequestMsg" elementType="data-element" functionId="Looking for sectionControlRequestMsg"/>
                    </testStep>
               </jl:if>
               <testStep functionId="Step 22.10 IF TMDD_N99R1065_Request_Priority___Section_Control_Supported is equal to TRUE THEN CONTINUE; OTHERWISE skip the following substeps." passFailResult="False"/>
               <jl:if test="${TMDD_N99R1065_Request_Priority___Section_Control_Supported}">
                    <testStep functionId="Step 22.10.1 VERIFY that element command-request-priority exists within sectionControlRequestMsg." passfailResult="True">
                         <ri-MessageVerify msgType="REQUEST" elementName="command-request-priority" instanceName="tmdd:sectionControlRequestMsg" elementType="data-element" functionId="Looking for sectionControlRequestMsg"/>
                    </testStep>
               </jl:if>
               <testStep functionId="Step 22.11 IF TMDD_N99R1066_Signal_Timing_Mode___Section_Control_Supported is equal to TRUE THEN CONTINUE; OTHERWISE skip the following substeps." passFailResult="False"/>
               <jl:if test="${TMDD_N99R1066_Signal_Timing_Mode___Section_Control_Supported}">
                    <testStep functionId="Step 22.11.1 VERIFY that element request-control-mode exists within each instance of sectionControlRequestMsg.section-command-parameters" passfailResult="True">
                         <ri-MessageVerify msgType="REQUEST" elementName="request-control-mode" instanceName="tmdd:sectionControlRequestMsg.section-command-parameters" elementType="data-element" functionId="Looking for sectionControlRequestMsg.section-command-parameters"/>
                    </testStep>
               </jl:if>
               <testStep functionId="Step 22.12 IF TMDD_N99R1067_Signal_Timing_Pattern___Section_Control_Supported is equal to TRUE THEN CONTINUE; OTHERWISE skip the following substeps." passFailResult="False"/>
               <jl:if test="${TMDD_N99R1067_Signal_Timing_Pattern___Section_Control_Supported}">
                    <testStep functionId="Step 22.12.1 VERIFY that element timing-pattern-id exists within each instance of sectionControlRequestMsg.section-command-parameters" passfailResult="True">
                         <ri-MessageVerify msgType="REQUEST" elementName="timing-pattern-id" instanceName="tmdd:sectionControlRequestMsg.section-command-parameters" elementType="data-element" functionId="Looking for sectionControlRequestMsg.section-command-parameters"/>
                    </testStep>
               </jl:if>
               <testStep functionId="Step 22.13 IF TMDD_N99R1068_Offset_Adjustment___Section_Control_Supported is equal to TRUE THEN CONTINUE; OTHERWISE skip the following substeps." passFailResult="False"/>
               <jl:if test="${TMDD_N99R1068_Offset_Adjustment___Section_Control_Supported}">
                    <testStep functionId="Step 22.13.1 VERIFY that element section-offset-adjustment exists within each instance of sectionControlRequestMsg.section-command-parameters" passfailResult="True">
                         <ri-MessageVerify msgType="REQUEST" elementName="section-offset-adjustment" instanceName="tmdd:sectionControlRequestMsg.section-command-parameters" elementType="data-element" functionId="Looking for sectionControlRequestMsg.section-command-parameters"/>
                    </testStep>
               </jl:if>
               <testStep functionId="Step 22.14 IF TMDD_N99R1069_Command_Begin_Time_Supported is equal to TRUE THEN CONTINUE; OTHERWISE skip the following substeps." passFailResult="False"/>
               <jl:if test="${TMDD_N99R1069_Command_Begin_Time_Supported}">
                    <testStep functionId="Step 22.14.1 VERIFY that element command-begin-time exists within sectionControlRequestMsg." passfailResult="True">
                         <ri-MessageVerify msgType="REQUEST" elementName="command-begin-time" instanceName="tmdd:sectionControlRequestMsg" elementType="data-frame" functionId="Looking for sectionControlRequestMsg"/>
                    </testStep>
               </jl:if>
               <testStep functionId="Step 22.15 IF TMDD_N99R1070_Command_End_Time_Supported is equal to TRUE THEN CONTINUE; OTHERWISE skip the following substeps." passFailResult="False"/>
               <jl:if test="${TMDD_N99R1070_Command_End_Time_Supported}">
                    <testStep functionId="Step 22.15.1 VERIFY that element command-end-time exists within sectionControlRequestMsg." passfailResult="True">
                         <ri-MessageVerify msgType="REQUEST" elementName="command-end-time" instanceName="tmdd:sectionControlRequestMsg" elementType="data-frame" functionId="Looking for sectionControlRequestMsg"/>
                    </testStep>
               </jl:if>
               <testStep functionId="Step 22.16 IF TMDD_N99R1071_Section_Control_Request_Date_and_Time_Information_Supported is equal to TRUE THEN CONTINUE; OTHERWISE skip the following substeps." passFailResult="False"/>
               <jl:if test="${TMDD_N99R1071_Section_Control_Request_Date_and_Time_Information_Supported}">
                    <testStep functionId="Step 22.16.1 VERIFY that element command-request-time exists within sectionControlRequestMsg." passfailResult="True">
                         <ri-MessageVerify msgType="REQUEST" elementName="command-request-time" instanceName="tmdd:sectionControlRequestMsg" elementType="data-frame" functionId="Looking for sectionControlRequestMsg"/>
                    </testStep>
               </jl:if>
               <testStep functionId="Step 22.17 VERIFY that the values within the REQUEST message are correct per the TMDD standard and known operational conditions.">
                    <AUTO-VERIFY-MESSAGE functionId="Automatically Verify message content" msgName="REQUEST" verificationSpec="${VerificationSpec}"/>
                    <USER-VERIFY-MESSAGE functionId="The User Verifies the message content" msgName="REQUEST" optionList="TMDD_N99R1062_Operator_Identifier___Section_Control_Supported,operator-id,tmdd:sectionControlRequestMsg.authentication;TMDD_N99R1063_Event_Identifier___Section_Control_Supported,event-id,tmdd:sectionControlRequestMsg;TMDD_N99R1064_Event_Response_Plan___Section_Control_Supported,response-plan-id,tmdd:sectionControlRequestMsg;TMDD_N99R1065_Request_Priority___Section_Control_Supported,command-request-priority,tmdd:sectionControlRequestMsg;TMDD_N99R1066_Signal_Timing_Mode___Section_Control_Supported,request-control-mode,tmdd:sectionControlRequestMsg.section-command-parameters;TMDD_N99R1067_Signal_Timing_Pattern___Section_Control_Supported,timing-pattern-id,tmdd:sectionControlRequestMsg.section-command-parameters;TMDD_N99R1068_Offset_Adjustment___Section_Control_Supported,section-offset-adjustment,tmdd:sectionControlRequestMsg.section-command-parameters;TMDD_N99R1069_Command_Begin_Time_Supported,command-begin-time,tmdd:sectionControlRequestMsg;TMDD_N99R1070_Command_End_Time_Supported,command-end-time,tmdd:sectionControlRequestMsg;TMDD_N99R1071_Section_Control_Request_Date_and_Time_Information_Supported,command-request-time,tmdd:sectionControlRequestMsg;" userDataFile="${RI_USERTCDATAFILE}"/>
               </testStep>
               <testStep functionId=" Step 22.18 CONFIGURE: Set OptionalContentVerified to True" passfailResult="False">
                    <jl:set var="OptionalContentVerified" value="true"/>
               </testStep>
               <postcondition>
                    <testStep functionId="Step 22.19 POSTCONDITION: REQUEST-RESPONSE-OC-REPLY with the following parameters:   DIALOG=dlSectionControlRequest RESPONSETIMEREQUIRED=TMDD_N99R1059_Send_Signal_Section_Control_Response_Upon_Request_Parameter OPTIONALCONTENTVERIFIED = OptionalContentVerified RESPONSEMESSAGE = ResponseMessage ">
                         <REQUEST-RESPONSE-OC-REPLY Dialog="dlSectionControlRequest" functionId="dlSectionControlRequest" RESPONSETIMEREQUIRED="${TMDD_N99R1059_Send_Signal_Section_Control_Response_Upon_Request_Parameter}" OPTIONALCONTENTVERIFIED="${OptionalContentVerified}" RESPONSEMESSAGE="${ResponseMessage}"/>
                    </testStep>
               </postcondition>
          </jl:if>
     </C2CRI-session>
</testprocedure>