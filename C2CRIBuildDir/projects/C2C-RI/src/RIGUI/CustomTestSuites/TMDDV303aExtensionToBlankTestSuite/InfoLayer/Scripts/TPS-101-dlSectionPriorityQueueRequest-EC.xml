<?xml version="1.0" encoding="UTF-8"?>
<!--Title:  TPS-101-dlSectionPriorityQueueRequest-EC
       Description:  This test procedure is called by a test case and is used to verify the SUTs support of the dlSectionPriorityQueueRequest dialog as an EC using variables provided by the calling test case.  
This procedure supports verification of requirements related to user need 2.3.5.10.16 [Need to View Section Plan Queue] and is used for both valid and invalid test cases.
       Version/Date: 2013/09/23 18:52:30-->
<testprocedure xmlns="jelly:jameleon" xmlns:jl="jelly:core">
     <test-case-id>${C2CRITestCaseID}</test-case-id>
     <test-case-summary>This test procedure is called by a test case and is used to verify the SUTs support of the dlSectionPriorityQueueRequest dialog as an EC using variables provided by the calling test case.  
This procedure supports verification of requirements related to user need 2.3.5.10.16 [Need to View Section Plan Queue] and is used for both valid and invalid test cases.</test-case-summary>
     <testStep functionId="Step 1 CONFIGURE: Determine the Application Layer Standard that will be used for this test.  RECORD this information as: ApplicationLayerStandard:  ${ApplicationLayerStandard}" passfailResult="False "/>
     <testStep functionId="Step 2 CONFIGURE: Determine whether Authentication - Device Queue (QueueAuth) is required by the specification. (NRTM 3.3.5.1.7.1.2.1).  RECORD this information as: TMDD_N101R428_Authentication___Device_Queue__QueueAuth__Supported = ${TMDD_N101R428_Authentication___Device_Queue__QueueAuth__Supported}" passfailResult="False"/>
     <testStep functionId="Step 3 CONFIGURE: Determine whether Operator Identifier - Device Queue is required by the specification. (NRTM 3.3.5.1.7.1.2.1.1).  RECORD this information as: TMDD_N101R429_Operator_Identifier___Device_Queue_Supported = ${TMDD_N101R429_Operator_Identifier___Device_Queue_Supported}" passfailResult="False"/>
     <C2CRI-session beginSession="true" infoStd="TMDDv3.03a" appStd="${ApplicationLayerStandard}" useWSDL="true" testCaseIdentifier="${C2CRITestCaseID}" riMode="OC">
          <testStep functionId="Step 4 CONFIGURE: Define the response message that will be sent to the SUT.  RECORD this information as: ResponseMessage:  ${ResponseMessage}" passfailResult="False"/>
          <testStep functionId="Step 5 CONFIGURE: Determine whether the Authentication parameters need to be verified within this test.  RECORD this information as: AuthenticationCheck:  ${AuthenticationCheck}" passfailResult="False"/>
          <testStep functionId="Step 6 CONFIGURE: Identify the Username expected for authentication during this test.  RECORD this information as: Username:  ${Username}" passfailResult="False"/>
          <testStep functionId="Step 7 CONFIGURE: Identify the Password expected for authentication during this test.  RECORD this information as: Password:  ${Password}" passfailResult="False"/>
          <testStep functionId="Step 8 CONFIGURE: Identify the Organization Identifier expected for authentication during this test.  RECORD this information as: OrganizationID:  ${OrganizationID}" passfailResult="False"/>
          <testStep functionId="Step 9 CONFIGURE: Determine whether the SUT will be allowed access to the information requested in this test.  RECORD this information as: AllowAccess:  ${AllowAccess}" passfailResult="False"/>
          <testStep functionId="Step 10 CONFIGURE: Determine whether an error response message is expected for this test.  RECORD this information as: ErrorResponseExpected:  ${ErrorResponseExpected}" passfailResult="False"/>
          <jl:if test="${ErrorResponseExpected}">
               <testStep functionId="Step 11 CONFIGURE: IF ErrorResponseExpected is true, determine the expected error code response for this test.  RECORD this information as:  ErrorTypeExpected:  ${ErrorTypeExpected}" passfailResult="False"/>
          </jl:if>
          <testStep functionId="Step 12 CONFIGURE: Determine whether the SUT is expected to have valid data available for a response message in this test.  RECORD this information as: DataValid:  ${DataValid}" passfailResult="False"/>
          <testStep functionId="Step 13 REQUEST-RESPONSE-OC-RECEIVE with the following parameters:   DIALOG=dlSectionPriorityQueueRequest RESPONSETIMEREQUIRED=TMDD_N101R1102_Send_Section_Control_Priority_Queue_Information_Upon_Request_Parameter AUTHENTICATIONCHECK = AuthenticationCheck USERNAME = Username PASSWORD = Password ORGANIZATIONID = OrganizationID ALLOWACCESS = AllowAccess ERRORRESPONSEEXPECTED = ErrorResponseExpected ERRORTYPEEXPECTED = ErrorTypeExpected DATAVALID = DataValid ">
               <REQUEST-RESPONSE-OC-RECEIVE Dialog="dlSectionPriorityQueueRequest" functionId="dlSectionPriorityQueueRequest" RESPONSETIMEREQUIRED="${TMDD_N101R1102_Send_Section_Control_Priority_Queue_Information_Upon_Request_Parameter}" AUTHENTICATIONCHECK="${AuthenticationCheck}" USERNAME="${Username}" PASSWORD="${Password}" ORGANIZATIONID="${OrganizationID}" ALLOWACCESS="${AllowAccess}" ERRORRESPONSEEXPECTED="${ErrorResponseExpected}" ERRORTYPEEXPECTED="${ErrorTypeExpected}" DATAVALID="${DataValid}"/>
          </testStep>
          <testStep functionId="Step 14 IF ErrorResponseExpected is not equal to TRUE THEN CONTINUE, OTHERWISE skip the following substeps." passfailResult="False"/>
          <jl:if test="${!ErrorResponseExpected}">
               <testStep functionId="Step 14.1 VERIFY that element devicePriorityQueueRequestMsg exists." passfailResult="True">
                    <ri-MessageVerify msgType="REQUEST" elementName="devicePriorityQueueRequestMsg" instanceName="tmdd:devicePriorityQueueRequestMsg" elementType="message" functionId="Looking for devicePriorityQueueRequestMsg"/>
               </testStep>
               <testStep functionId="Step 14.2 VERIFY that element organization-requesting exists within devicePriorityQueueRequestMsg." passfailResult="True">
                    <ri-MessageVerify msgType="REQUEST" elementName="organization-requesting" instanceName="tmdd:devicePriorityQueueRequestMsg" elementType="data-frame" functionId="Looking for devicePriorityQueueRequestMsg"/>
               </testStep>
               <testStep functionId="Step 14.3 VERIFY that element device-id-list exists within devicePriorityQueueRequestMsg." passfailResult="True">
                    <ri-MessageVerify msgType="REQUEST" elementName="device-id-list" instanceName="tmdd:devicePriorityQueueRequestMsg" elementType="data-element" functionId="Looking for devicePriorityQueueRequestMsg"/>
               </testStep>
               <testStep functionId="Step 14.4 VERIFY that element devicePriorityQueueRequestMsg exists." passfailResult="True">
                    <ri-MessageVerify msgType="REQUEST" elementName="devicePriorityQueueRequestMsg" instanceName="tmdd:devicePriorityQueueRequestMsg" elementType="message" functionId="Looking for devicePriorityQueueRequestMsg"/>
               </testStep>
               <testStep functionId="Step 14.5 IF TMDD_N101R428_Authentication___Device_Queue__QueueAuth__Supported is equal to TRUE THEN CONTINUE; OTHERWISE skip the following substeps." passFailResult="False"/>
               <jl:if test="${TMDD_N101R428_Authentication___Device_Queue__QueueAuth__Supported}">
                    <testStep functionId="Step 14.5.1 VERIFY that element authentication exists within devicePriorityQueueRequestMsg." passfailResult="True">
                         <ri-MessageVerify msgType="REQUEST" elementName="authentication" instanceName="tmdd:devicePriorityQueueRequestMsg" elementType="data-frame" functionId="Looking for devicePriorityQueueRequestMsg"/>
                    </testStep>
               </jl:if>
               <testStep functionId="Step 14.6 IF TMDD_N101R429_Operator_Identifier___Device_Queue_Supported is equal to TRUE THEN CONTINUE; OTHERWISE skip the following substeps." passFailResult="False"/>
               <jl:if test="${TMDD_N101R429_Operator_Identifier___Device_Queue_Supported}">
                    <testStep functionId="Step 14.6.1 VERIFY that element operator-id exists within each instance of devicePriorityQueueRequestMsg.authentication" passfailResult="True">
                         <ri-MessageVerify msgType="REQUEST" elementName="operator-id" instanceName="tmdd:devicePriorityQueueRequestMsg.authentication" elementType="data-element" functionId="Looking for devicePriorityQueueRequestMsg.authentication"/>
                    </testStep>
               </jl:if>
               <testStep functionId="Step 14.7 VERIFY that the values within the REQUEST message are correct per the TMDD standard and known operational conditions.">
                    <AUTO-VERIFY-MESSAGE functionId="Automatically Verify message content" msgName="REQUEST" verificationSpec="${VerificationSpec}"/>
                    <USER-VERIFY-MESSAGE functionId="The User Verifies the message content" msgName="REQUEST" optionList="TMDD_N101R428_Authentication___Device_Queue__QueueAuth__Supported,authentication,tmdd:devicePriorityQueueRequestMsg;TMDD_N101R429_Operator_Identifier___Device_Queue_Supported,operator-id,tmdd:devicePriorityQueueRequestMsg.authentication;" userDataFile="${RI_USERTCDATAFILE}"/>
               </testStep>
               <testStep functionId=" Step 14.8 CONFIGURE: Set OptionalContentVerified to True" passfailResult="False">
                    <jl:set var="OptionalContentVerified" value="true"/>
               </testStep>
               <postcondition>
                    <testStep functionId="Step 14.9 POSTCONDITION: REQUEST-RESPONSE-OC-REPLY with the following parameters:   DIALOG=dlSectionPriorityQueueRequest RESPONSETIMEREQUIRED=TMDD_N101R1102_Send_Section_Control_Priority_Queue_Information_Upon_Request_Parameter OPTIONALCONTENTVERIFIED = OptionalContentVerified RESPONSEMESSAGE = ResponseMessage ">
                         <REQUEST-RESPONSE-OC-REPLY Dialog="dlSectionPriorityQueueRequest" functionId="dlSectionPriorityQueueRequest" RESPONSETIMEREQUIRED="${TMDD_N101R1102_Send_Section_Control_Priority_Queue_Information_Upon_Request_Parameter}" OPTIONALCONTENTVERIFIED="${OptionalContentVerified}" RESPONSEMESSAGE="${ResponseMessage}"/>
                    </testStep>
               </postcondition>
          </jl:if>
     </C2CRI-session>
</testprocedure>