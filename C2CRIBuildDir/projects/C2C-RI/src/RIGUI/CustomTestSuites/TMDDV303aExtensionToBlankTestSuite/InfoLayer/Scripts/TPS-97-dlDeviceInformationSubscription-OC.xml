<?xml version="1.0" encoding="UTF-8"?>
<!--Title:  TPS-97-dlDeviceInformationSubscription-OC
       Description:  This test procedure is called by a test case and is used to verify the SUTs support of the dlDeviceInformationSubscription dialog as an OC using variables provided by the calling test case.  
This procedure supports verification of requirements related to user need 2.3.5.10.12 [Need to Monitor Signal Operations] and is used for both valid and invalid test cases.
       Version/Date: 2013/09/23 18:50:51-->
<testprocedure xmlns="jelly:jameleon" xmlns:jl="jelly:core">
     <test-case-id>${C2CRITestCaseID}</test-case-id>
     <test-case-summary>This test procedure is called by a test case and is used to verify the SUTs support of the dlDeviceInformationSubscription dialog as an OC using variables provided by the calling test case.  
This procedure supports verification of requirements related to user need 2.3.5.10.12 [Need to Monitor Signal Operations] and is used for both valid and invalid test cases.</test-case-summary>
     <testStep functionId="Step 1 CONFIGURE: Determine the Application Layer Standard that will be used for this test.  RECORD this information as: ApplicationLayerStandard:  ${ApplicationLayerStandard}" passfailResult="False "/>
     <testStep functionId="Step 2 CONFIGURE: Determine whether Section Identifier - Signal Status is required by the specification. (NRTM 3.3.5.11.2.5.2.1).  RECORD this information as: TMDD_N97R971_Section_Identifier___Signal_Status_Supported = ${TMDD_N97R971_Section_Identifier___Signal_Status_Supported}" passfailResult="False"/>
     <testStep functionId="Step 3 CONFIGURE: Determine whether Planned Signal Timing Mode Description is required by the specification. (NRTM 3.3.5.11.2.5.2.2).  RECORD this information as: TMDD_N97R972_Planned_Signal_Timing_Mode_Description_Supported = ${TMDD_N97R972_Planned_Signal_Timing_Mode_Description_Supported}" passfailResult="False"/>
     <testStep functionId="Step 4 CONFIGURE: Determine whether Timing Pattern Identifier - Current is required by the specification. (NRTM 3.3.5.11.2.5.2.3).  RECORD this information as: TMDD_N97R973_Timing_Pattern_Identifier___Current_Supported = ${TMDD_N97R973_Timing_Pattern_Identifier___Current_Supported}" passfailResult="False"/>
     <testStep functionId="Step 5 CONFIGURE: Determine whether Timing Pattern Description is required by the specification. (NRTM 3.3.5.11.2.5.2.4).  RECORD this information as: TMDD_N97R974_Timing_Pattern_Description_Supported = ${TMDD_N97R974_Timing_Pattern_Description_Supported}" passfailResult="False"/>
     <testStep functionId="Step 6 CONFIGURE: Determine whether Actuation Mode is required by the specification. (NRTM 3.3.5.11.2.5.2.5).  RECORD this information as: TMDD_N97R975_Actuation_Mode_Supported = ${TMDD_N97R975_Actuation_Mode_Supported}" passfailResult="False"/>
     <testStep functionId="Step 7 CONFIGURE: Determine whether Plan Mode is required by the specification. (NRTM 3.3.5.11.2.5.2.6).  RECORD this information as: TMDD_N97R976_Plan_Mode_Supported = ${TMDD_N97R976_Plan_Mode_Supported}" passfailResult="False"/>
     <testStep functionId="Step 8 CONFIGURE: Determine whether Cycle Length - Planned is required by the specification. (NRTM 3.3.5.11.2.5.2.7).  RECORD this information as: TMDD_N97R977_Cycle_Length___Planned_Supported = ${TMDD_N97R977_Cycle_Length___Planned_Supported}" passfailResult="False"/>
     <testStep functionId="Step 9 CONFIGURE: Determine whether Cycle Length - Current is required by the specification. (NRTM 3.3.5.11.2.5.2.8).  RECORD this information as: TMDD_N97R978_Cycle_Length___Current_Supported = ${TMDD_N97R978_Cycle_Length___Current_Supported}" passfailResult="False"/>
     <testStep functionId="Step 10 CONFIGURE: Determine whether Cycle Length - Previous is required by the specification. (NRTM 3.3.5.11.2.5.2.9).  RECORD this information as: TMDD_N97R979_Cycle_Length___Previous_Supported = ${TMDD_N97R979_Cycle_Length___Previous_Supported}" passfailResult="False"/>
     <testStep functionId="Step 11 CONFIGURE: Determine whether Master Cycle Length - Actual is required by the specification. (NRTM 3.3.5.11.2.5.2.10).  RECORD this information as: TMDD_N97R980_Master_Cycle_Length___Actual_Supported = ${TMDD_N97R980_Master_Cycle_Length___Actual_Supported}" passfailResult="False"/>
     <testStep functionId="Step 12 CONFIGURE: Determine whether Controller Cycle Counter is required by the specification. (NRTM 3.3.5.11.2.5.2.11).  RECORD this information as: TMDD_N97R981_Controller_Cycle_Counter_Supported = ${TMDD_N97R981_Controller_Cycle_Counter_Supported}" passfailResult="False"/>
     <testStep functionId="Step 13 CONFIGURE: Determine whether Master Cycle Counter is required by the specification. (NRTM 3.3.5.11.2.5.2.12).  RECORD this information as: TMDD_N97R982_Master_Cycle_Counter_Supported = ${TMDD_N97R982_Master_Cycle_Counter_Supported}" passfailResult="False"/>
     <testStep functionId="Step 14 CONFIGURE: Determine whether Offset Reference is required by the specification. (NRTM 3.3.5.11.2.5.2.13).  RECORD this information as: TMDD_N97R983_Offset_Reference_Supported = ${TMDD_N97R983_Offset_Reference_Supported}" passfailResult="False"/>
     <testStep functionId="Step 15 CONFIGURE: Determine whether Offset - Planned is required by the specification. (NRTM 3.3.5.11.2.5.2.14).  RECORD this information as: TMDD_N97R984_Offset___Planned_Supported = ${TMDD_N97R984_Offset___Planned_Supported}" passfailResult="False"/>
     <testStep functionId="Step 16 CONFIGURE: Determine whether Offset - Actual is required by the specification. (NRTM 3.3.5.11.2.5.2.15).  RECORD this information as: TMDD_N97R985_Offset___Actual_Supported = ${TMDD_N97R985_Offset___Actual_Supported}" passfailResult="False"/>
     <testStep functionId="Step 17 CONFIGURE: Determine whether Offset - Previous is required by the specification. (NRTM 3.3.5.11.2.5.2.16).  RECORD this information as: TMDD_N97R986_Offset___Previous_Supported = ${TMDD_N97R986_Offset___Previous_Supported}" passfailResult="False"/>
     <testStep functionId="Step 18 CONFIGURE: Determine whether Controller Timestamp is required by the specification. (NRTM 3.3.5.11.2.5.2.17).  RECORD this information as: TMDD_N97R987_Controller_Timestamp_Supported = ${TMDD_N97R987_Controller_Timestamp_Supported}" passfailResult="False"/>
     <testStep functionId="Step 19 CONFIGURE: Determine whether Phase Split is required by the specification. (NRTM 3.3.5.11.2.5.2.18).  RECORD this information as: TMDD_N97R988_Phase_Split_Supported = ${TMDD_N97R988_Phase_Split_Supported}" passfailResult="False"/>
     <testStep functionId="Step 20 CONFIGURE: Determine whether Ring Status is required by the specification. (NRTM 3.3.5.11.2.5.2.19).  RECORD this information as: TMDD_N97R989_Ring_Status_Supported = ${TMDD_N97R989_Ring_Status_Supported}" passfailResult="False"/>
     <testStep functionId="Step 21 CONFIGURE: Determine whether Active Phases is required by the specification. (NRTM 3.3.5.11.2.5.2.20).  RECORD this information as: TMDD_N97R990_Active_Phases_Supported = ${TMDD_N97R990_Active_Phases_Supported}" passfailResult="False"/>
     <testStep functionId="Step 22 CONFIGURE: Determine whether Phase Status Greens is required by the specification. (NRTM 3.3.5.11.2.5.2.21).  RECORD this information as: TMDD_N97R991_Phase_Status_Greens_Supported = ${TMDD_N97R991_Phase_Status_Greens_Supported}" passfailResult="False"/>
     <testStep functionId="Step 23 CONFIGURE: Determine whether Phase Status Yellows is required by the specification. (NRTM 3.3.5.11.2.5.2.22).  RECORD this information as: TMDD_N97R992_Phase_Status_Yellows_Supported = ${TMDD_N97R992_Phase_Status_Yellows_Supported}" passfailResult="False"/>
     <testStep functionId="Step 24 CONFIGURE: Determine whether Phase Status Reds is required by the specification. (NRTM 3.3.5.11.2.5.2.23).  RECORD this information as: TMDD_N97R993_Phase_Status_Reds_Supported = ${TMDD_N97R993_Phase_Status_Reds_Supported}" passfailResult="False"/>
     <testStep functionId="Step 25 CONFIGURE: Determine whether Phase Status Walks is required by the specification. (NRTM 3.3.5.11.2.5.2.24).  RECORD this information as: TMDD_N97R994_Phase_Status_Walks_Supported = ${TMDD_N97R994_Phase_Status_Walks_Supported}" passfailResult="False"/>
     <testStep functionId="Step 26 CONFIGURE: Determine whether Phase Status Pedestrian Clearance is required by the specification. (NRTM 3.3.5.11.2.5.2.25).  RECORD this information as: TMDD_N97R995_Phase_Status_Pedestrian_Clearance_Supported = ${TMDD_N97R995_Phase_Status_Pedestrian_Clearance_Supported}" passfailResult="False"/>
     <testStep functionId="Step 27 CONFIGURE: Determine whether Phase Status Dont Walks is required by the specification. (NRTM 3.3.5.11.2.5.2.26).  RECORD this information as: TMDD_N97R996_Phase_Status_Dont_Walks_Supported = ${TMDD_N97R996_Phase_Status_Dont_Walks_Supported}" passfailResult="False"/>
     <testStep functionId="Step 28 CONFIGURE: Determine whether Overlap Phase Status Greens is required by the specification. (NRTM 3.3.5.11.2.5.2.27).  RECORD this information as: TMDD_N97R997_Overlap_Phase_Status_Greens_Supported = ${TMDD_N97R997_Overlap_Phase_Status_Greens_Supported}" passfailResult="False"/>
     <testStep functionId="Step 29 CONFIGURE: Determine whether Overlap Phase Status Yellows is required by the specification. (NRTM 3.3.5.11.2.5.2.28).  RECORD this information as: TMDD_N97R998_Overlap_Phase_Status_Yellows_Supported = ${TMDD_N97R998_Overlap_Phase_Status_Yellows_Supported}" passfailResult="False"/>
     <testStep functionId="Step 30 CONFIGURE: Determine whether Overlap Phase Status Reds is required by the specification. (NRTM 3.3.5.11.2.5.2.29).  RECORD this information as: TMDD_N97R999_Overlap_Phase_Status_Reds_Supported = ${TMDD_N97R999_Overlap_Phase_Status_Reds_Supported}" passfailResult="False"/>
     <testStep functionId="Step 31 CONFIGURE: Determine whether Special Functions is required by the specification. (NRTM 3.3.5.11.2.5.2.30).  RECORD this information as: TMDD_N97R1000_Special_Functions_Supported = ${TMDD_N97R1000_Special_Functions_Supported}" passfailResult="False"/>
     <testStep functionId="Step 32 CONFIGURE: Determine whether Preemption / Priority Description is required by the specification. (NRTM 3.3.5.11.2.5.2.31).  RECORD this information as: TMDD_N97R1001_Preemption___Priority_Description_Supported = ${TMDD_N97R1001_Preemption___Priority_Description_Supported}" passfailResult="False"/>
     <C2CRI-session beginSession="true" infoStd="TMDDv3.03a" appStd="${ApplicationLayerStandard}" useWSDL="true" testCaseIdentifier="${C2CRITestCaseID}" riMode="EC">
          <testStep functionId="Step 33 CONFIGURE: Determine the number of publication message transmissions that will be received within this test.  RECORD this information as: PublicationsToReceive:  ${PublicationsToReceive}" passfailResult="False"/>
          <testStep functionId="Step 34 CONFIGURE: Determine whether an error response message is expected for this test.  RECORD this information as: PublicationErrorResponseExpected:  ${PublicationErrorResponseExpected}" passfailResult="False"/>
          <jl:if test="${PublicationErrorResponseExpected}">
               <testStep functionId="Step 35 CONFIGURE: IF PublicationErrorResponseExpected is true, determine the expected error code response for this test.  RECORD this information as:  PublicationErrorTypeExpected:  ${PublicationErrorTypeExpected}" passfailResult="False"/>
          </jl:if>
          <testStep functionId="Step 36 CONFIGURE: Define the publication response message that will be sent to the SUT.  RECORD this information as: PublicationResponseMessage:  ${PublicationResponseMessage}" passfailResult="False"/>
          <testStep functionId="Step 37 CONFIGURE: Determine whether the Authentication parameters need to be verified within this test.  RECORD this information as: AuthenticationCheck:  ${AuthenticationCheck}" passfailResult="False"/>
          <testStep functionId="Step 38 CONFIGURE: Determine whether the SUT will be allowed access to the information requested in this test.  RECORD this information as: AllowAccess:  ${AllowAccess}" passfailResult="False"/>
          <testStep functionId="Step 39 CONFIGURE: Define the publication message that will be sent to the SUT.  RECORD this information as: SubscriptionMessage:  ${SubscriptionMessage}" passfailResult="False"/>
          <testStep functionId="Step 40 CONFIGURE: Determine whether an error response message is expected for this test.  RECORD this information as: SubscriptionErrorResponseExpected:  ${SubscriptionErrorResponseExpected}" passfailResult="False"/>
          <jl:if test="${SubscriptionErrorResponseExpected}">
               <testStep functionId="Step 41 CONFIGURE: IF SubscriptionErrorResponseExpected is true, determine the expected error code response for this test.  RECORD this information as:  SubscriptionErrorTypeExpected:  ${SubscriptionErrorTypeExpected}" passfailResult="False"/>
          </jl:if>
          <testStep functionId="Step 42 SUBSCRIPTION-EC with the following parameters:   DIALOG=dlDeviceInformationSubscription SUBSCRIPTIONMESSAGE = SubscriptionMessage SUBSCRIPTIONERRORRESPONSEEXPECTED = SubscriptionErrorResponseExpected SUBSCRIPTIONERRORTYPEEXPECTED = SubscriptionErrorTypeExpected  Returns: CONTINUEPUBLICATION ">
               <SUBSCRIPTION-EC Dialog="dlDeviceInformationSubscription" functionId="dlDeviceInformationSubscription" SUBSCRIPTIONMESSAGE="${SubscriptionMessage}" SUBSCRIPTIONERRORRESPONSEEXPECTED="${SubscriptionErrorResponseExpected}" SUBSCRIPTIONERRORTYPEEXPECTED="${SubscriptionErrorTypeExpected}"/>
          </testStep>
          <testStep functionId="Step 43 IF SubscriptionErrorResponseExpected is not equal to TRUE THEN CONTINUE, OTHERWISE skip the following substeps." passfailResult="False"/>
          <jl:if test="${!SubscriptionErrorResponseExpected}">
               <testStep functionId="Step 43.1 WHILE CONTINUEPUBLICATION is equal to TRUE then CONTINUE, OTHERWISE skip the following substeps."/>
               <jl:while test="${CONTINUEPUBLICATION}">
                    <testStep functionId="Step 43.1.1 PUBLICATION-EC-RECEIVE with the following parameters:   DIALOG=dlIntersectionSignalStatusUpdate RESPONSETIMEREQUIRED=TMDD_N97R966_Publish_Intersection_Status_Information_Parameter PUBLICATIONSTORECEIVE = PublicationsToReceive PUBLICATIONERRORRESPONSEEXPECTED = PublicationErrorResponseExpected PUBLICATIONERRORTYPEEXPECTED = PublicationErrorTypeExpected AUTHENTICATIONCHECK = AuthenticationCheck ALLOWACCESS = AllowAccess  Returns: CONTINUEPUBLICATION ">
                         <PUBLICATION-EC-RECEIVE Dialog="dlIntersectionSignalStatusUpdate" functionId="dlIntersectionSignalStatusUpdate" RESPONSETIMEREQUIRED="${TMDD_N97R966_Publish_Intersection_Status_Information_Parameter}" PUBLICATIONSTORECEIVE="${PublicationsToReceive}" PUBLICATIONERRORRESPONSEEXPECTED="${PublicationErrorResponseExpected}" PUBLICATIONERRORTYPEEXPECTED="${PublicationErrorTypeExpected}" AUTHENTICATIONCHECK="${AuthenticationCheck}" ALLOWACCESS="${AllowAccess}"/>
                    </testStep>
                    <testStep functionId="Step 43.1.2 IF PublicationErrorResponseExpected is not equal to TRUE THEN CONTINUE, OTHERWISE skip the following substeps." passfailResult="False"/>
                    <jl:if test="${!PublicationErrorResponseExpected}">
                         <testStep functionId="Step 43.1.2.1 VERIFY that element intersectionSignalStatusMsg exists." passfailResult="True">
                              <ri-MessageVerify msgType="REQUEST" elementName="intersectionSignalStatusMsg" instanceName="tmdd:intersectionSignalStatusMsg" elementType="message" functionId="Looking for intersectionSignalStatusMsg"/>
                         </testStep>
                         <testStep functionId="Step 43.1.2.2 VERIFY that element device-status-header exists within each instance of intersectionSignalStatusMsg.intersection-signal-status-item" passfailResult="True">
                              <ri-MessageVerify msgType="REQUEST" elementName="device-status-header" instanceName="tmdd:intersectionSignalStatusMsg.intersection-signal-status-item" elementType="data-frame" functionId="Looking for intersectionSignalStatusMsg.intersection-signal-status-item"/>
                         </testStep>
                         <testStep functionId="Step 43.1.2.3 VERIFY that element signal-control-source exists within each instance of intersectionSignalStatusMsg.intersection-signal-status-item" passfailResult="True">
                              <ri-MessageVerify msgType="REQUEST" elementName="signal-control-source" instanceName="tmdd:intersectionSignalStatusMsg.intersection-signal-status-item" elementType="data-element" functionId="Looking for intersectionSignalStatusMsg.intersection-signal-status-item"/>
                         </testStep>
                         <testStep functionId="Step 43.1.2.4 VERIFY that element planned-signal-timing-mode exists within each instance of intersectionSignalStatusMsg.intersection-signal-status-item" passfailResult="True">
                              <ri-MessageVerify msgType="REQUEST" elementName="planned-signal-timing-mode" instanceName="tmdd:intersectionSignalStatusMsg.intersection-signal-status-item" elementType="data-element" functionId="Looking for intersectionSignalStatusMsg.intersection-signal-status-item"/>
                         </testStep>
                         <testStep functionId="Step 43.1.2.5 VERIFY that element current-signal-timing-mode exists within each instance of intersectionSignalStatusMsg.intersection-signal-status-item" passfailResult="True">
                              <ri-MessageVerify msgType="REQUEST" elementName="current-signal-timing-mode" instanceName="tmdd:intersectionSignalStatusMsg.intersection-signal-status-item" elementType="data-element" functionId="Looking for intersectionSignalStatusMsg.intersection-signal-status-item"/>
                         </testStep>
                         <testStep functionId="Step 43.1.2.6 IF TMDD_N97R971_Section_Identifier___Signal_Status_Supported is equal to TRUE THEN CONTINUE; OTHERWISE skip the following substeps." passFailResult="False"/>
                         <jl:if test="${TMDD_N97R971_Section_Identifier___Signal_Status_Supported}">
                              <testStep functionId="Step 43.1.2.6.1 VERIFY that element section-id exists within each instance of intersectionSignalStatusMsg.intersection-signal-status-item" passfailResult="True">
                                   <ri-MessageVerify msgType="REQUEST" elementName="section-id" instanceName="tmdd:intersectionSignalStatusMsg.intersection-signal-status-item" elementType="data-element" functionId="Looking for intersectionSignalStatusMsg.intersection-signal-status-item"/>
                              </testStep>
                         </jl:if>
                         <testStep functionId="Step 43.1.2.7 IF TMDD_N97R972_Planned_Signal_Timing_Mode_Description_Supported is equal to TRUE THEN CONTINUE; OTHERWISE skip the following substeps." passFailResult="False"/>
                         <jl:if test="${TMDD_N97R972_Planned_Signal_Timing_Mode_Description_Supported}">
                              <testStep functionId="Step 43.1.2.7.1 VERIFY that element planned-signal-timing-mode-description exists within each instance of intersectionSignalStatusMsg.intersection-signal-status-item" passfailResult="True">
                                   <ri-MessageVerify msgType="REQUEST" elementName="planned-signal-timing-mode-description" instanceName="tmdd:intersectionSignalStatusMsg.intersection-signal-status-item" elementType="data-element" functionId="Looking for intersectionSignalStatusMsg.intersection-signal-status-item"/>
                              </testStep>
                         </jl:if>
                         <testStep functionId="Step 43.1.2.8 IF TMDD_N97R973_Timing_Pattern_Identifier___Current_Supported is equal to TRUE THEN CONTINUE; OTHERWISE skip the following substeps." passFailResult="False"/>
                         <jl:if test="${TMDD_N97R973_Timing_Pattern_Identifier___Current_Supported}">
                              <testStep functionId="Step 43.1.2.8.1 VERIFY that element timing-pattern-id-current exists within each instance of intersectionSignalStatusMsg.intersection-signal-status-item" passfailResult="True">
                                   <ri-MessageVerify msgType="REQUEST" elementName="timing-pattern-id-current" instanceName="tmdd:intersectionSignalStatusMsg.intersection-signal-status-item" elementType="data-element" functionId="Looking for intersectionSignalStatusMsg.intersection-signal-status-item"/>
                              </testStep>
                         </jl:if>
                         <testStep functionId="Step 43.1.2.9 IF TMDD_N97R974_Timing_Pattern_Description_Supported is equal to TRUE THEN CONTINUE; OTHERWISE skip the following substeps." passFailResult="False"/>
                         <jl:if test="${TMDD_N97R974_Timing_Pattern_Description_Supported}">
                              <testStep functionId="Step 43.1.2.9.1 VERIFY that element timing-pattern-description exists within each instance of intersectionSignalStatusMsg.intersection-signal-status-item" passfailResult="True">
                                   <ri-MessageVerify msgType="REQUEST" elementName="timing-pattern-description" instanceName="tmdd:intersectionSignalStatusMsg.intersection-signal-status-item" elementType="data-element" functionId="Looking for intersectionSignalStatusMsg.intersection-signal-status-item"/>
                              </testStep>
                         </jl:if>
                         <testStep functionId="Step 43.1.2.10 IF TMDD_N97R975_Actuation_Mode_Supported is equal to TRUE THEN CONTINUE; OTHERWISE skip the following substeps." passFailResult="False"/>
                         <jl:if test="${TMDD_N97R975_Actuation_Mode_Supported}">
                              <testStep functionId="Step 43.1.2.10.1 VERIFY that element actuation-mode exists within each instance of intersectionSignalStatusMsg.intersection-signal-status-item" passfailResult="True">
                                   <ri-MessageVerify msgType="REQUEST" elementName="actuation-mode" instanceName="tmdd:intersectionSignalStatusMsg.intersection-signal-status-item" elementType="data-element" functionId="Looking for intersectionSignalStatusMsg.intersection-signal-status-item"/>
                              </testStep>
                         </jl:if>
                         <testStep functionId="Step 43.1.2.11 IF TMDD_N97R976_Plan_Mode_Supported is equal to TRUE THEN CONTINUE; OTHERWISE skip the following substeps." passFailResult="False"/>
                         <jl:if test="${TMDD_N97R976_Plan_Mode_Supported}">
                              <testStep functionId="Step 43.1.2.11.1 VERIFY that element timing-phase-plan-mode exists within each instance of intersectionSignalStatusMsg.intersection-signal-status-item" passfailResult="True">
                                   <ri-MessageVerify msgType="REQUEST" elementName="timing-phase-plan-mode" instanceName="tmdd:intersectionSignalStatusMsg.intersection-signal-status-item" elementType="data-element" functionId="Looking for intersectionSignalStatusMsg.intersection-signal-status-item"/>
                              </testStep>
                         </jl:if>
                         <testStep functionId="Step 43.1.2.12 IF TMDD_N97R977_Cycle_Length___Planned_Supported is equal to TRUE THEN CONTINUE; OTHERWISE skip the following substeps." passFailResult="False"/>
                         <jl:if test="${TMDD_N97R977_Cycle_Length___Planned_Supported}">
                              <testStep functionId="Step 43.1.2.12.1 VERIFY that element cycle-length-planned exists within each instance of intersectionSignalStatusMsg.intersection-signal-status-item" passfailResult="True">
                                   <ri-MessageVerify msgType="REQUEST" elementName="cycle-length-planned" instanceName="tmdd:intersectionSignalStatusMsg.intersection-signal-status-item" elementType="data-element" functionId="Looking for intersectionSignalStatusMsg.intersection-signal-status-item"/>
                              </testStep>
                         </jl:if>
                         <testStep functionId="Step 43.1.2.13 IF TMDD_N97R978_Cycle_Length___Current_Supported is equal to TRUE THEN CONTINUE; OTHERWISE skip the following substeps." passFailResult="False"/>
                         <jl:if test="${TMDD_N97R978_Cycle_Length___Current_Supported}">
                              <testStep functionId="Step 43.1.2.13.1 VERIFY that element cycle-length-current exists within each instance of intersectionSignalStatusMsg.intersection-signal-status-item" passfailResult="True">
                                   <ri-MessageVerify msgType="REQUEST" elementName="cycle-length-current" instanceName="tmdd:intersectionSignalStatusMsg.intersection-signal-status-item" elementType="data-element" functionId="Looking for intersectionSignalStatusMsg.intersection-signal-status-item"/>
                              </testStep>
                         </jl:if>
                         <testStep functionId="Step 43.1.2.14 IF TMDD_N97R979_Cycle_Length___Previous_Supported is equal to TRUE THEN CONTINUE; OTHERWISE skip the following substeps." passFailResult="False"/>
                         <jl:if test="${TMDD_N97R979_Cycle_Length___Previous_Supported}">
                              <testStep functionId="Step 43.1.2.14.1 VERIFY that element cycle-length-previous exists within each instance of intersectionSignalStatusMsg.intersection-signal-status-item" passfailResult="True">
                                   <ri-MessageVerify msgType="REQUEST" elementName="cycle-length-previous" instanceName="tmdd:intersectionSignalStatusMsg.intersection-signal-status-item" elementType="data-element" functionId="Looking for intersectionSignalStatusMsg.intersection-signal-status-item"/>
                              </testStep>
                         </jl:if>
                         <testStep functionId="Step 43.1.2.15 IF TMDD_N97R980_Master_Cycle_Length___Actual_Supported is equal to TRUE THEN CONTINUE; OTHERWISE skip the following substeps." passFailResult="False"/>
                         <jl:if test="${TMDD_N97R980_Master_Cycle_Length___Actual_Supported}">
                              <testStep functionId="Step 43.1.2.15.1 VERIFY that element cycle-length-master exists within each instance of intersectionSignalStatusMsg.intersection-signal-status-item" passfailResult="True">
                                   <ri-MessageVerify msgType="REQUEST" elementName="cycle-length-master" instanceName="tmdd:intersectionSignalStatusMsg.intersection-signal-status-item" elementType="data-element" functionId="Looking for intersectionSignalStatusMsg.intersection-signal-status-item"/>
                              </testStep>
                         </jl:if>
                         <testStep functionId="Step 43.1.2.16 IF TMDD_N97R981_Controller_Cycle_Counter_Supported is equal to TRUE THEN CONTINUE; OTHERWISE skip the following substeps." passFailResult="False"/>
                         <jl:if test="${TMDD_N97R981_Controller_Cycle_Counter_Supported}">
                              <testStep functionId="Step 43.1.2.16.1 VERIFY that element cycle-counter exists within each instance of intersectionSignalStatusMsg.intersection-signal-status-item" passfailResult="True">
                                   <ri-MessageVerify msgType="REQUEST" elementName="cycle-counter" instanceName="tmdd:intersectionSignalStatusMsg.intersection-signal-status-item" elementType="data-element" functionId="Looking for intersectionSignalStatusMsg.intersection-signal-status-item"/>
                              </testStep>
                         </jl:if>
                         <testStep functionId="Step 43.1.2.17 IF TMDD_N97R982_Master_Cycle_Counter_Supported is equal to TRUE THEN CONTINUE; OTHERWISE skip the following substeps." passFailResult="False"/>
                         <jl:if test="${TMDD_N97R982_Master_Cycle_Counter_Supported}">
                              <testStep functionId="Step 43.1.2.17.1 VERIFY that element cycle-counter-master exists within each instance of intersectionSignalStatusMsg.intersection-signal-status-item" passfailResult="True">
                                   <ri-MessageVerify msgType="REQUEST" elementName="cycle-counter-master" instanceName="tmdd:intersectionSignalStatusMsg.intersection-signal-status-item" elementType="data-element" functionId="Looking for intersectionSignalStatusMsg.intersection-signal-status-item"/>
                              </testStep>
                         </jl:if>
                         <testStep functionId="Step 43.1.2.18 IF TMDD_N97R983_Offset_Reference_Supported is equal to TRUE THEN CONTINUE; OTHERWISE skip the following substeps." passFailResult="False"/>
                         <jl:if test="${TMDD_N97R983_Offset_Reference_Supported}">
                              <testStep functionId="Step 43.1.2.18.1 VERIFY that element offset-reference exists within each instance of intersectionSignalStatusMsg.intersection-signal-status-item" passfailResult="True">
                                   <ri-MessageVerify msgType="REQUEST" elementName="offset-reference" instanceName="tmdd:intersectionSignalStatusMsg.intersection-signal-status-item" elementType="data-element" functionId="Looking for intersectionSignalStatusMsg.intersection-signal-status-item"/>
                              </testStep>
                         </jl:if>
                         <testStep functionId="Step 43.1.2.19 IF TMDD_N97R984_Offset___Planned_Supported is equal to TRUE THEN CONTINUE; OTHERWISE skip the following substeps." passFailResult="False"/>
                         <jl:if test="${TMDD_N97R984_Offset___Planned_Supported}">
                              <testStep functionId="Step 43.1.2.19.1 VERIFY that element offset-time-planned exists within each instance of intersectionSignalStatusMsg.intersection-signal-status-item" passfailResult="True">
                                   <ri-MessageVerify msgType="REQUEST" elementName="offset-time-planned" instanceName="tmdd:intersectionSignalStatusMsg.intersection-signal-status-item" elementType="data-element" functionId="Looking for intersectionSignalStatusMsg.intersection-signal-status-item"/>
                              </testStep>
                         </jl:if>
                         <testStep functionId="Step 43.1.2.20 IF TMDD_N97R985_Offset___Actual_Supported is equal to TRUE THEN CONTINUE; OTHERWISE skip the following substeps." passFailResult="False"/>
                         <jl:if test="${TMDD_N97R985_Offset___Actual_Supported}">
                              <testStep functionId="Step 43.1.2.20.1 VERIFY that element offset-time-current exists within each instance of intersectionSignalStatusMsg.intersection-signal-status-item" passfailResult="True">
                                   <ri-MessageVerify msgType="REQUEST" elementName="offset-time-current" instanceName="tmdd:intersectionSignalStatusMsg.intersection-signal-status-item" elementType="data-element" functionId="Looking for intersectionSignalStatusMsg.intersection-signal-status-item"/>
                              </testStep>
                         </jl:if>
                         <testStep functionId="Step 43.1.2.21 IF TMDD_N97R986_Offset___Previous_Supported is equal to TRUE THEN CONTINUE; OTHERWISE skip the following substeps." passFailResult="False"/>
                         <jl:if test="${TMDD_N97R986_Offset___Previous_Supported}">
                              <testStep functionId="Step 43.1.2.21.1 VERIFY that element offset-time-previous exists within each instance of intersectionSignalStatusMsg.intersection-signal-status-item" passfailResult="True">
                                   <ri-MessageVerify msgType="REQUEST" elementName="offset-time-previous" instanceName="tmdd:intersectionSignalStatusMsg.intersection-signal-status-item" elementType="data-element" functionId="Looking for intersectionSignalStatusMsg.intersection-signal-status-item"/>
                              </testStep>
                         </jl:if>
                         <testStep functionId="Step 43.1.2.22 IF TMDD_N97R987_Controller_Timestamp_Supported is equal to TRUE THEN CONTINUE; OTHERWISE skip the following substeps." passFailResult="False"/>
                         <jl:if test="${TMDD_N97R987_Controller_Timestamp_Supported}">
                              <testStep functionId="Step 43.1.2.22.1 VERIFY that element controller-timestamp exists within each instance of intersectionSignalStatusMsg.intersection-signal-status-item" passfailResult="True">
                                   <ri-MessageVerify msgType="REQUEST" elementName="controller-timestamp" instanceName="tmdd:intersectionSignalStatusMsg.intersection-signal-status-item" elementType="data-frame" functionId="Looking for intersectionSignalStatusMsg.intersection-signal-status-item"/>
                              </testStep>
                         </jl:if>
                         <testStep functionId="Step 43.1.2.23 IF TMDD_N97R988_Phase_Split_Supported is equal to TRUE THEN CONTINUE; OTHERWISE skip the following substeps." passFailResult="False"/>
                         <jl:if test="${TMDD_N97R988_Phase_Split_Supported}">
                              <testStep functionId="Step 43.1.2.23.1 VERIFY that element phase-split-list exists within each instance of intersectionSignalStatusMsg.intersection-signal-status-item" passfailResult="True">
                                   <ri-MessageVerify msgType="REQUEST" elementName="phase-split-list" instanceName="tmdd:intersectionSignalStatusMsg.intersection-signal-status-item" elementType="data-frame" functionId="Looking for intersectionSignalStatusMsg.intersection-signal-status-item"/>
                              </testStep>
                         </jl:if>
                         <testStep functionId="Step 43.1.2.24 IF TMDD_N97R989_Ring_Status_Supported is equal to TRUE THEN CONTINUE; OTHERWISE skip the following substeps." passFailResult="False"/>
                         <jl:if test="${TMDD_N97R989_Ring_Status_Supported}">
                              <testStep functionId="Step 43.1.2.24.1 VERIFY that element ring-status-list exists within each instance of intersectionSignalStatusMsg.intersection-signal-status-item" passfailResult="True">
                                   <ri-MessageVerify msgType="REQUEST" elementName="ring-status-list" instanceName="tmdd:intersectionSignalStatusMsg.intersection-signal-status-item" elementType="data-frame" functionId="Looking for intersectionSignalStatusMsg.intersection-signal-status-item"/>
                              </testStep>
                         </jl:if>
                         <testStep functionId="Step 43.1.2.25 IF TMDD_N97R990_Active_Phases_Supported is equal to TRUE THEN CONTINUE; OTHERWISE skip the following substeps." passFailResult="False"/>
                         <jl:if test="${TMDD_N97R990_Active_Phases_Supported}">
                              <testStep functionId="Step 43.1.2.25.1 VERIFY that element phase-status-group-number exists within each instance of intersectionSignalStatusMsg.intersection-signal-status-item.phase-status.phase-status-group" passfailResult="True">
                                   <ri-MessageVerify msgType="REQUEST" elementName="phase-status-group-number" instanceName="tmdd:intersectionSignalStatusMsg.intersection-signal-status-item.phase-status.phase-status-group" elementType="data-element" functionId="Looking for intersectionSignalStatusMsg.intersection-signal-status-item.phase-status.phase-status-group"/>
                              </testStep>
                              <testStep functionId="Step 43.1.2.25.2 VERIFY that element phase-status-group-greens exists within each instance of intersectionSignalStatusMsg.intersection-signal-status-item.phase-status.phase-status-group" passfailResult="True">
                                   <ri-MessageVerify msgType="REQUEST" elementName="phase-status-group-greens" instanceName="tmdd:intersectionSignalStatusMsg.intersection-signal-status-item.phase-status.phase-status-group" elementType="data-element" functionId="Looking for intersectionSignalStatusMsg.intersection-signal-status-item.phase-status.phase-status-group"/>
                              </testStep>
                              <testStep functionId="Step 43.1.2.25.3 VERIFY that element phase-status-group-walks exists within each instance of intersectionSignalStatusMsg.intersection-signal-status-item.phase-status.phase-status-group" passfailResult="True">
                                   <ri-MessageVerify msgType="REQUEST" elementName="phase-status-group-walks" instanceName="tmdd:intersectionSignalStatusMsg.intersection-signal-status-item.phase-status.phase-status-group" elementType="data-element" functionId="Looking for intersectionSignalStatusMsg.intersection-signal-status-item.phase-status.phase-status-group"/>
                              </testStep>
                         </jl:if>
                         <testStep functionId="Step 43.1.2.26 IF TMDD_N97R991_Phase_Status_Greens_Supported is equal to TRUE THEN CONTINUE; OTHERWISE skip the following substeps." passFailResult="False"/>
                         <jl:if test="${TMDD_N97R991_Phase_Status_Greens_Supported}">
                              <testStep functionId="Step 43.1.2.26.1 VERIFY that element phase-status-group-number exists within each instance of intersectionSignalStatusMsg.intersection-signal-status-item.phase-status.phase-status-group" passfailResult="True">
                                   <ri-MessageVerify msgType="REQUEST" elementName="phase-status-group-number" instanceName="tmdd:intersectionSignalStatusMsg.intersection-signal-status-item.phase-status.phase-status-group" elementType="data-element" functionId="Looking for intersectionSignalStatusMsg.intersection-signal-status-item.phase-status.phase-status-group"/>
                              </testStep>
                              <testStep functionId="Step 43.1.2.26.2 VERIFY that element phase-status-group-greens exists within each instance of intersectionSignalStatusMsg.intersection-signal-status-item.phase-status.phase-status-group" passfailResult="True">
                                   <ri-MessageVerify msgType="REQUEST" elementName="phase-status-group-greens" instanceName="tmdd:intersectionSignalStatusMsg.intersection-signal-status-item.phase-status.phase-status-group" elementType="data-element" functionId="Looking for intersectionSignalStatusMsg.intersection-signal-status-item.phase-status.phase-status-group"/>
                              </testStep>
                         </jl:if>
                         <testStep functionId="Step 43.1.2.27 IF TMDD_N97R992_Phase_Status_Yellows_Supported is equal to TRUE THEN CONTINUE; OTHERWISE skip the following substeps." passFailResult="False"/>
                         <jl:if test="${TMDD_N97R992_Phase_Status_Yellows_Supported}">
                              <testStep functionId="Step 43.1.2.27.1 VERIFY that element phase-status-group-number exists within each instance of intersectionSignalStatusMsg.intersection-signal-status-item.phase-status.phase-status-group" passfailResult="True">
                                   <ri-MessageVerify msgType="REQUEST" elementName="phase-status-group-number" instanceName="tmdd:intersectionSignalStatusMsg.intersection-signal-status-item.phase-status.phase-status-group" elementType="data-element" functionId="Looking for intersectionSignalStatusMsg.intersection-signal-status-item.phase-status.phase-status-group"/>
                              </testStep>
                              <testStep functionId="Step 43.1.2.27.2 VERIFY that element phase-status-group-yellows exists within each instance of intersectionSignalStatusMsg.intersection-signal-status-item.phase-status.phase-status-group" passfailResult="True">
                                   <ri-MessageVerify msgType="REQUEST" elementName="phase-status-group-yellows" instanceName="tmdd:intersectionSignalStatusMsg.intersection-signal-status-item.phase-status.phase-status-group" elementType="data-element" functionId="Looking for intersectionSignalStatusMsg.intersection-signal-status-item.phase-status.phase-status-group"/>
                              </testStep>
                         </jl:if>
                         <testStep functionId="Step 43.1.2.28 IF TMDD_N97R993_Phase_Status_Reds_Supported is equal to TRUE THEN CONTINUE; OTHERWISE skip the following substeps." passFailResult="False"/>
                         <jl:if test="${TMDD_N97R993_Phase_Status_Reds_Supported}">
                              <testStep functionId="Step 43.1.2.28.1 VERIFY that element phase-status-group-number exists within each instance of intersectionSignalStatusMsg.intersection-signal-status-item.phase-status.phase-status-group" passfailResult="True">
                                   <ri-MessageVerify msgType="REQUEST" elementName="phase-status-group-number" instanceName="tmdd:intersectionSignalStatusMsg.intersection-signal-status-item.phase-status.phase-status-group" elementType="data-element" functionId="Looking for intersectionSignalStatusMsg.intersection-signal-status-item.phase-status.phase-status-group"/>
                              </testStep>
                              <testStep functionId="Step 43.1.2.28.2 VERIFY that element phase-status-group-reds exists within each instance of intersectionSignalStatusMsg.intersection-signal-status-item.phase-status.phase-status-group" passfailResult="True">
                                   <ri-MessageVerify msgType="REQUEST" elementName="phase-status-group-reds" instanceName="tmdd:intersectionSignalStatusMsg.intersection-signal-status-item.phase-status.phase-status-group" elementType="data-element" functionId="Looking for intersectionSignalStatusMsg.intersection-signal-status-item.phase-status.phase-status-group"/>
                              </testStep>
                         </jl:if>
                         <testStep functionId="Step 43.1.2.29 IF TMDD_N97R994_Phase_Status_Walks_Supported is equal to TRUE THEN CONTINUE; OTHERWISE skip the following substeps." passFailResult="False"/>
                         <jl:if test="${TMDD_N97R994_Phase_Status_Walks_Supported}">
                              <testStep functionId="Step 43.1.2.29.1 VERIFY that element phase-status-group-number exists within each instance of intersectionSignalStatusMsg.intersection-signal-status-item.phase-status.phase-status-group" passfailResult="True">
                                   <ri-MessageVerify msgType="REQUEST" elementName="phase-status-group-number" instanceName="tmdd:intersectionSignalStatusMsg.intersection-signal-status-item.phase-status.phase-status-group" elementType="data-element" functionId="Looking for intersectionSignalStatusMsg.intersection-signal-status-item.phase-status.phase-status-group"/>
                              </testStep>
                              <testStep functionId="Step 43.1.2.29.2 VERIFY that element phase-status-group-walks exists within each instance of intersectionSignalStatusMsg.intersection-signal-status-item.phase-status.phase-status-group" passfailResult="True">
                                   <ri-MessageVerify msgType="REQUEST" elementName="phase-status-group-walks" instanceName="tmdd:intersectionSignalStatusMsg.intersection-signal-status-item.phase-status.phase-status-group" elementType="data-element" functionId="Looking for intersectionSignalStatusMsg.intersection-signal-status-item.phase-status.phase-status-group"/>
                              </testStep>
                         </jl:if>
                         <testStep functionId="Step 43.1.2.30 IF TMDD_N97R995_Phase_Status_Pedestrian_Clearance_Supported is equal to TRUE THEN CONTINUE; OTHERWISE skip the following substeps." passFailResult="False"/>
                         <jl:if test="${TMDD_N97R995_Phase_Status_Pedestrian_Clearance_Supported}">
                              <testStep functionId="Step 43.1.2.30.1 VERIFY that element phase-status-group-number exists within each instance of intersectionSignalStatusMsg.intersection-signal-status-item.phase-status.phase-status-group" passfailResult="True">
                                   <ri-MessageVerify msgType="REQUEST" elementName="phase-status-group-number" instanceName="tmdd:intersectionSignalStatusMsg.intersection-signal-status-item.phase-status.phase-status-group" elementType="data-element" functionId="Looking for intersectionSignalStatusMsg.intersection-signal-status-item.phase-status.phase-status-group"/>
                              </testStep>
                              <testStep functionId="Step 43.1.2.30.2 VERIFY that element phase-status-group-pedclears exists within each instance of intersectionSignalStatusMsg.intersection-signal-status-item.phase-status.phase-status-group" passfailResult="True">
                                   <ri-MessageVerify msgType="REQUEST" elementName="phase-status-group-pedclears" instanceName="tmdd:intersectionSignalStatusMsg.intersection-signal-status-item.phase-status.phase-status-group" elementType="data-element" functionId="Looking for intersectionSignalStatusMsg.intersection-signal-status-item.phase-status.phase-status-group"/>
                              </testStep>
                         </jl:if>
                         <testStep functionId="Step 43.1.2.31 IF TMDD_N97R996_Phase_Status_Dont_Walks_Supported is equal to TRUE THEN CONTINUE; OTHERWISE skip the following substeps." passFailResult="False"/>
                         <jl:if test="${TMDD_N97R996_Phase_Status_Dont_Walks_Supported}">
                              <testStep functionId="Step 43.1.2.31.1 VERIFY that element phase-status-group-number exists within each instance of intersectionSignalStatusMsg.intersection-signal-status-item.phase-status.phase-status-group" passfailResult="True">
                                   <ri-MessageVerify msgType="REQUEST" elementName="phase-status-group-number" instanceName="tmdd:intersectionSignalStatusMsg.intersection-signal-status-item.phase-status.phase-status-group" elementType="data-element" functionId="Looking for intersectionSignalStatusMsg.intersection-signal-status-item.phase-status.phase-status-group"/>
                              </testStep>
                              <testStep functionId="Step 43.1.2.31.2 VERIFY that element phase-status-group-dontwalks exists within each instance of intersectionSignalStatusMsg.intersection-signal-status-item.phase-status.phase-status-group" passfailResult="True">
                                   <ri-MessageVerify msgType="REQUEST" elementName="phase-status-group-dontwalks" instanceName="tmdd:intersectionSignalStatusMsg.intersection-signal-status-item.phase-status.phase-status-group" elementType="data-element" functionId="Looking for intersectionSignalStatusMsg.intersection-signal-status-item.phase-status.phase-status-group"/>
                              </testStep>
                         </jl:if>
                         <testStep functionId="Step 43.1.2.32 IF TMDD_N97R997_Overlap_Phase_Status_Greens_Supported is equal to TRUE THEN CONTINUE; OTHERWISE skip the following substeps." passFailResult="False"/>
                         <jl:if test="${TMDD_N97R997_Overlap_Phase_Status_Greens_Supported}">
                              <testStep functionId="Step 43.1.2.32.1 VERIFY that element overlap-status-group-number exists within each instance of intersectionSignalStatusMsg.intersection-signal-status-item.overlap-status.overlap-status-group" passfailResult="True">
                                   <ri-MessageVerify msgType="REQUEST" elementName="overlap-status-group-number" instanceName="tmdd:intersectionSignalStatusMsg.intersection-signal-status-item.overlap-status.overlap-status-group" elementType="data-element" functionId="Looking for intersectionSignalStatusMsg.intersection-signal-status-item.overlap-status.overlap-status-group"/>
                              </testStep>
                              <testStep functionId="Step 43.1.2.32.2 VERIFY that element overlap-status-group-greens exists within each instance of intersectionSignalStatusMsg.intersection-signal-status-item.overlap-status.overlap-status-group" passfailResult="True">
                                   <ri-MessageVerify msgType="REQUEST" elementName="overlap-status-group-greens" instanceName="tmdd:intersectionSignalStatusMsg.intersection-signal-status-item.overlap-status.overlap-status-group" elementType="data-element" functionId="Looking for intersectionSignalStatusMsg.intersection-signal-status-item.overlap-status.overlap-status-group"/>
                              </testStep>
                         </jl:if>
                         <testStep functionId="Step 43.1.2.33 IF TMDD_N97R998_Overlap_Phase_Status_Yellows_Supported is equal to TRUE THEN CONTINUE; OTHERWISE skip the following substeps." passFailResult="False"/>
                         <jl:if test="${TMDD_N97R998_Overlap_Phase_Status_Yellows_Supported}">
                              <testStep functionId="Step 43.1.2.33.1 VERIFY that element overlap-status-group-number exists within each instance of intersectionSignalStatusMsg.intersection-signal-status-item.overlap-status.overlap-status-group" passfailResult="True">
                                   <ri-MessageVerify msgType="REQUEST" elementName="overlap-status-group-number" instanceName="tmdd:intersectionSignalStatusMsg.intersection-signal-status-item.overlap-status.overlap-status-group" elementType="data-element" functionId="Looking for intersectionSignalStatusMsg.intersection-signal-status-item.overlap-status.overlap-status-group"/>
                              </testStep>
                              <testStep functionId="Step 43.1.2.33.2 VERIFY that element overlap-status-group-yellows exists within each instance of intersectionSignalStatusMsg.intersection-signal-status-item.overlap-status.overlap-status-group" passfailResult="True">
                                   <ri-MessageVerify msgType="REQUEST" elementName="overlap-status-group-yellows" instanceName="tmdd:intersectionSignalStatusMsg.intersection-signal-status-item.overlap-status.overlap-status-group" elementType="data-element" functionId="Looking for intersectionSignalStatusMsg.intersection-signal-status-item.overlap-status.overlap-status-group"/>
                              </testStep>
                         </jl:if>
                         <testStep functionId="Step 43.1.2.34 IF TMDD_N97R999_Overlap_Phase_Status_Reds_Supported is equal to TRUE THEN CONTINUE; OTHERWISE skip the following substeps." passFailResult="False"/>
                         <jl:if test="${TMDD_N97R999_Overlap_Phase_Status_Reds_Supported}">
                              <testStep functionId="Step 43.1.2.34.1 VERIFY that element overlap-status-group-number exists within each instance of intersectionSignalStatusMsg.intersection-signal-status-item.overlap-status.overlap-status-group" passfailResult="True">
                                   <ri-MessageVerify msgType="REQUEST" elementName="overlap-status-group-number" instanceName="tmdd:intersectionSignalStatusMsg.intersection-signal-status-item.overlap-status.overlap-status-group" elementType="data-element" functionId="Looking for intersectionSignalStatusMsg.intersection-signal-status-item.overlap-status.overlap-status-group"/>
                              </testStep>
                              <testStep functionId="Step 43.1.2.34.2 VERIFY that element overlap-status-group-reds exists within each instance of intersectionSignalStatusMsg.intersection-signal-status-item.overlap-status.overlap-status-group" passfailResult="True">
                                   <ri-MessageVerify msgType="REQUEST" elementName="overlap-status-group-reds" instanceName="tmdd:intersectionSignalStatusMsg.intersection-signal-status-item.overlap-status.overlap-status-group" elementType="data-element" functionId="Looking for intersectionSignalStatusMsg.intersection-signal-status-item.overlap-status.overlap-status-group"/>
                              </testStep>
                         </jl:if>
                         <testStep functionId="Step 43.1.2.35 IF TMDD_N97R1000_Special_Functions_Supported is equal to TRUE THEN CONTINUE; OTHERWISE skip the following substeps." passFailResult="False"/>
                         <jl:if test="${TMDD_N97R1000_Special_Functions_Supported}">
                              <testStep functionId="Step 43.1.2.35.1 VERIFY that element active-special-functions-list exists within each instance of intersectionSignalStatusMsg.intersection-signal-status-item" passfailResult="True">
                                   <ri-MessageVerify msgType="REQUEST" elementName="active-special-functions-list" instanceName="tmdd:intersectionSignalStatusMsg.intersection-signal-status-item" elementType="data-element" functionId="Looking for intersectionSignalStatusMsg.intersection-signal-status-item"/>
                              </testStep>
                         </jl:if>
                         <testStep functionId="Step 43.1.2.36 IF TMDD_N97R1001_Preemption___Priority_Description_Supported is equal to TRUE THEN CONTINUE; OTHERWISE skip the following substeps." passFailResult="False"/>
                         <jl:if test="${TMDD_N97R1001_Preemption___Priority_Description_Supported}">
                              <testStep functionId="Step 43.1.2.36.1 VERIFY that element preempt-priority-description exists within each instance of intersectionSignalStatusMsg.intersection-signal-status-item" passfailResult="True">
                                   <ri-MessageVerify msgType="REQUEST" elementName="preempt-priority-description" instanceName="tmdd:intersectionSignalStatusMsg.intersection-signal-status-item" elementType="data-element" functionId="Looking for intersectionSignalStatusMsg.intersection-signal-status-item"/>
                              </testStep>
                         </jl:if>
                         <testStep functionId="Step 43.1.2.37 VERIFY that the values within the REQUEST message are correct per the TMDD standard and known operational conditions.">
                              <AUTO-VERIFY-MESSAGE functionId="Automatically Verify message content" msgName="REQUEST" verificationSpec="${VerificationSpec}"/>
                              <USER-VERIFY-MESSAGE functionId="The User Verifies the message content" msgName="REQUEST" optionList="TMDD_N97R971_Section_Identifier___Signal_Status_Supported,section-id,tmdd:intersectionSignalStatusMsg.intersection-signal-status-item;TMDD_N97R972_Planned_Signal_Timing_Mode_Description_Supported,planned-signal-timing-mode-description,tmdd:intersectionSignalStatusMsg.intersection-signal-status-item;TMDD_N97R973_Timing_Pattern_Identifier___Current_Supported,timing-pattern-id-current,tmdd:intersectionSignalStatusMsg.intersection-signal-status-item;TMDD_N97R974_Timing_Pattern_Description_Supported,timing-pattern-description,tmdd:intersectionSignalStatusMsg.intersection-signal-status-item;TMDD_N97R975_Actuation_Mode_Supported,actuation-mode,tmdd:intersectionSignalStatusMsg.intersection-signal-status-item;TMDD_N97R976_Plan_Mode_Supported,timing-phase-plan-mode,tmdd:intersectionSignalStatusMsg.intersection-signal-status-item;TMDD_N97R977_Cycle_Length___Planned_Supported,cycle-length-planned,tmdd:intersectionSignalStatusMsg.intersection-signal-status-item;TMDD_N97R978_Cycle_Length___Current_Supported,cycle-length-current,tmdd:intersectionSignalStatusMsg.intersection-signal-status-item;TMDD_N97R979_Cycle_Length___Previous_Supported,cycle-length-previous,tmdd:intersectionSignalStatusMsg.intersection-signal-status-item;TMDD_N97R980_Master_Cycle_Length___Actual_Supported,cycle-length-master,tmdd:intersectionSignalStatusMsg.intersection-signal-status-item;TMDD_N97R981_Controller_Cycle_Counter_Supported,cycle-counter,tmdd:intersectionSignalStatusMsg.intersection-signal-status-item;TMDD_N97R982_Master_Cycle_Counter_Supported,cycle-counter-master,tmdd:intersectionSignalStatusMsg.intersection-signal-status-item;TMDD_N97R983_Offset_Reference_Supported,offset-reference,tmdd:intersectionSignalStatusMsg.intersection-signal-status-item;TMDD_N97R984_Offset___Planned_Supported,offset-time-planned,tmdd:intersectionSignalStatusMsg.intersection-signal-status-item;TMDD_N97R985_Offset___Actual_Supported,offset-time-current,tmdd:intersectionSignalStatusMsg.intersection-signal-status-item;TMDD_N97R986_Offset___Previous_Supported,offset-time-previous,tmdd:intersectionSignalStatusMsg.intersection-signal-status-item;TMDD_N97R987_Controller_Timestamp_Supported,controller-timestamp,tmdd:intersectionSignalStatusMsg.intersection-signal-status-item;TMDD_N97R988_Phase_Split_Supported,phase-split-list,tmdd:intersectionSignalStatusMsg.intersection-signal-status-item;TMDD_N97R989_Ring_Status_Supported,ring-status-list,tmdd:intersectionSignalStatusMsg.intersection-signal-status-item;TMDD_N97R990_Active_Phases_Supported,phase-status-group-number,tmdd:intersectionSignalStatusMsg.intersection-signal-status-item.phase-status.phase-status-group;TMDD_N97R990_Active_Phases_Supported,phase-status-group-greens,tmdd:intersectionSignalStatusMsg.intersection-signal-status-item.phase-status.phase-status-group;TMDD_N97R990_Active_Phases_Supported,phase-status-group-walks,tmdd:intersectionSignalStatusMsg.intersection-signal-status-item.phase-status.phase-status-group;TMDD_N97R991_Phase_Status_Greens_Supported,phase-status-group-number,tmdd:intersectionSignalStatusMsg.intersection-signal-status-item.phase-status.phase-status-group;TMDD_N97R991_Phase_Status_Greens_Supported,phase-status-group-greens,tmdd:intersectionSignalStatusMsg.intersection-signal-status-item.phase-status.phase-status-group;TMDD_N97R992_Phase_Status_Yellows_Supported,phase-status-group-number,tmdd:intersectionSignalStatusMsg.intersection-signal-status-item.phase-status.phase-status-group;TMDD_N97R992_Phase_Status_Yellows_Supported,phase-status-group-yellows,tmdd:intersectionSignalStatusMsg.intersection-signal-status-item.phase-status.phase-status-group;TMDD_N97R993_Phase_Status_Reds_Supported,phase-status-group-number,tmdd:intersectionSignalStatusMsg.intersection-signal-status-item.phase-status.phase-status-group;TMDD_N97R993_Phase_Status_Reds_Supported,phase-status-group-reds,tmdd:intersectionSignalStatusMsg.intersection-signal-status-item.phase-status.phase-status-group;TMDD_N97R994_Phase_Status_Walks_Supported,phase-status-group-number,tmdd:intersectionSignalStatusMsg.intersection-signal-status-item.phase-status.phase-status-group;TMDD_N97R994_Phase_Status_Walks_Supported,phase-status-group-walks,tmdd:intersectionSignalStatusMsg.intersection-signal-status-item.phase-status.phase-status-group;TMDD_N97R995_Phase_Status_Pedestrian_Clearance_Supported,phase-status-group-number,tmdd:intersectionSignalStatusMsg.intersection-signal-status-item.phase-status.phase-status-group;TMDD_N97R995_Phase_Status_Pedestrian_Clearance_Supported,phase-status-group-pedclears,tmdd:intersectionSignalStatusMsg.intersection-signal-status-item.phase-status.phase-status-group;TMDD_N97R996_Phase_Status_Dont_Walks_Supported,phase-status-group-number,tmdd:intersectionSignalStatusMsg.intersection-signal-status-item.phase-status.phase-status-group;TMDD_N97R996_Phase_Status_Dont_Walks_Supported,phase-status-group-dontwalks,tmdd:intersectionSignalStatusMsg.intersection-signal-status-item.phase-status.phase-status-group;TMDD_N97R997_Overlap_Phase_Status_Greens_Supported,overlap-status-group-number,tmdd:intersectionSignalStatusMsg.intersection-signal-status-item.overlap-status.overlap-status-group;TMDD_N97R997_Overlap_Phase_Status_Greens_Supported,overlap-status-group-greens,tmdd:intersectionSignalStatusMsg.intersection-signal-status-item.overlap-status.overlap-status-group;TMDD_N97R998_Overlap_Phase_Status_Yellows_Supported,overlap-status-group-number,tmdd:intersectionSignalStatusMsg.intersection-signal-status-item.overlap-status.overlap-status-group;TMDD_N97R998_Overlap_Phase_Status_Yellows_Supported,overlap-status-group-yellows,tmdd:intersectionSignalStatusMsg.intersection-signal-status-item.overlap-status.overlap-status-group;TMDD_N97R999_Overlap_Phase_Status_Reds_Supported,overlap-status-group-number,tmdd:intersectionSignalStatusMsg.intersection-signal-status-item.overlap-status.overlap-status-group;TMDD_N97R999_Overlap_Phase_Status_Reds_Supported,overlap-status-group-reds,tmdd:intersectionSignalStatusMsg.intersection-signal-status-item.overlap-status.overlap-status-group;TMDD_N97R1000_Special_Functions_Supported,active-special-functions-list,tmdd:intersectionSignalStatusMsg.intersection-signal-status-item;TMDD_N97R1001_Preemption___Priority_Description_Supported,preempt-priority-description,tmdd:intersectionSignalStatusMsg.intersection-signal-status-item;" userDataFile="${RI_USERTCDATAFILE}"/>
                         </testStep>
                         <testStep functionId=" Step 43.1.2.38 CONFIGURE: Set OptionalContentVerified to True" passfailResult="False">
                              <jl:set var="OptionalContentVerified" value="true"/>
                         </testStep>
                         <postcondition>
                              <testStep functionId="Step 43.1.2.39 POSTCONDITION: PUBLICATION-EC-REPLY with the following parameters:   DIALOG=dlIntersectionSignalStatusUpdate RESPONSETIMEREQUIRED=TMDD_N97R966_Publish_Intersection_Status_Information_Parameter OPTIONALCONTENTVERIFIED = OptionalContentVerified PUBLICATIONRESPONSEMESSAGE = PublicationResponseMessage ">
                                   <PUBLICATION-EC-REPLY Dialog="dlIntersectionSignalStatusUpdate" functionId="dlIntersectionSignalStatusUpdate" RESPONSETIMEREQUIRED="${TMDD_N97R966_Publish_Intersection_Status_Information_Parameter}" OPTIONALCONTENTVERIFIED="${OptionalContentVerified}" PUBLICATIONRESPONSEMESSAGE="${PublicationResponseMessage}"/>
                              </testStep>
                         </postcondition>
                    </jl:if>
               </jl:while>
          </jl:if>
     </C2CRI-session>
</testprocedure>