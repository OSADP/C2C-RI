<?xml version="1.0" encoding="UTF-8"?>
<!--Title:  TPS-34-dlVideoSwitchControlRequest-EC
       Description:  This test procedure is called by a test case and is used to verify the SUTs support of the dlVideoSwitchControlRequest dialog as an EC using variables provided by the calling test case.  
This procedure supports verification of requirements related to user need 2.3.6.3.4 [Need to Control a Remote Video Switch] and is used for both valid and invalid test cases.
       Version/Date: 2012/02/14 22:56:01-->
<testprocedure xmlns="jelly:jameleon" xmlns:jl="jelly:core">
     <test-case-id>${C2CRITestCaseID}</test-case-id>
     <test-case-summary>This test procedure is called by a test case and is used to verify the SUTs support of the dlVideoSwitchControlRequest dialog as an EC using variables provided by the calling test case.  
This procedure supports verification of requirements related to user need 2.3.6.3.4 [Need to Control a Remote Video Switch] and is used for both valid and invalid test cases.</test-case-summary>
     <testStep functionId="Step 1 CONFIGURE: Determine the Application Layer Standard that will be used for this test.  RECORD this information as: ApplicationLayerStandard:  ${ApplicationLayerStandard}" passfailResult="False "/>
     <testStep functionId="Step 2 CONFIGURE: Determine whether Text Insertion is required by the specification. (NRTM 3.3.6.4.3.2.2.1).  RECORD this information as: TMDD_N34R556_Text_Insertion_Supported = ${TMDD_N34R556_Text_Insertion_Supported}" passfailResult="False"/>
     <testStep functionId="Step 3 CONFIGURE: Determine whether Output Channel Lock is required by the specification. (NRTM 3.3.6.4.3.2.2.2).  RECORD this information as: TMDD_N34R557_Output_Channel_Lock_Supported = ${TMDD_N34R557_Output_Channel_Lock_Supported}" passfailResult="False"/>
     <testStep functionId="Step 4 CONFIGURE: Determine whether Frames per Second is required by the specification. (NRTM 3.3.6.4.3.2.2.3).  RECORD this information as: TMDD_N34R558_Frames_per_Second_Supported = ${TMDD_N34R558_Frames_per_Second_Supported}" passfailResult="False"/>
     <testStep functionId="Step 5 CONFIGURE: Determine whether Resolution (Height) is required by the specification. (NRTM 3.3.6.4.3.2.2.4).  RECORD this information as: TMDD_N34R559_Resolution_(Height)_Supported = ${TMDD_N34R559_Resolution_(Height)_Supported}" passfailResult="False"/>
     <testStep functionId="Step 6 CONFIGURE: Determine whether Resolution (Width) is required by the specification. (NRTM 3.3.6.4.3.2.2.5).  RECORD this information as: TMDD_N34R560_Resolution_(Width)_Supported = ${TMDD_N34R560_Resolution_(Width)_Supported}" passfailResult="False"/>
     <testStep functionId="Step 7 CONFIGURE: Determine whether Video Format is required by the specification. (NRTM 3.3.6.4.3.2.2.6).  RECORD this information as: TMDD_N34R561_Video_Format_Supported = ${TMDD_N34R561_Video_Format_Supported}" passfailResult="False"/>
     <C2CRI-session beginSession="true" infoStd="TMDDv3.01" appStd="${ApplicationLayerStandard}" useWSDL="true" testCaseIdentifier="${C2CRITestCaseID}" requestDialog="dlVideoSwitchControlRequest" riMode="OC">
          <testStep functionId="Step 8 CONFIGURE: Define the response message that will be sent to the SUT.  RECORD this information as: ResponseMessage:  ${ResponseMessage}" passfailResult="False"/>
          <testStep functionId="Step 9 CONFIGURE: Determine whether the Authentication parameters need to be verified within this test.  RECORD this information as: AuthenticationCheck:  ${AuthenticationCheck}" passfailResult="False"/>
          <testStep functionId="Step 10 CONFIGURE: Identify the Username expected for authentication during this test.  RECORD this information as: Username:  ${Username}" passfailResult="False"/>
          <testStep functionId="Step 11 CONFIGURE: Identify the Password expected for authentication during this test.  RECORD this information as: Password:  ${Password}" passfailResult="False"/>
          <testStep functionId="Step 12 CONFIGURE: Identify the Organization Identifier expected for authentication during this test.  RECORD this information as: OrganizationID:  ${OrganizationID}" passfailResult="False"/>
          <testStep functionId="Step 13 CONFIGURE: Determine whether the SUT will be allowed access to the information requested in this test.  RECORD this information as: AllowAccess:  ${AllowAccess}" passfailResult="False"/>
          <testStep functionId="Step 14 CONFIGURE: Determine whether an error response message is expected for this test.  RECORD this information as: ErrorResponseExpected:  ${ErrorResponseExpected}" passfailResult="False"/>
          <jl:if test="${ErrorResponseExpected}">
               <testStep functionId="Step 15 CONFIGURE: IF ErrorResponseExpected is true, determine the expected error code response for this test.  RECORD this information as:  ErrorTypeExpected:  ${ErrorTypeExpected}" passfailResult="False"/>
          </jl:if>
          <testStep functionId="Step 16 CONFIGURE: Determine whether the SUT is expected to have valid data available for a response message in this test.  RECORD this information as: DataValid:  ${DataValid}" passfailResult="False"/>
          <testStep functionId="Step 17 REQUEST-RESPONSE-OC-RECEIVE with the following parameters:   DIALOG=dlVideoSwitchControlRequest AUTHENTICATIONCHECK = AuthenticationCheck USERNAME = Username PASSWORD = Password ORGANIZATIONID = OrganizationID ALLOWACCESS = AllowAccess ERRORRESPONSEEXPECTED = ErrorResponseExpected ERRORTYPEEXPECTED = ErrorTypeExpected DATAVALID = DataValid ">
               <REQUEST-RESPONSE-OC-RECEIVE Dialog="dlVideoSwitchControlRequest" functionId="dlVideoSwitchControlRequest" AUTHENTICATIONCHECK="${AuthenticationCheck}" USERNAME="${Username}" PASSWORD="${Password}" ORGANIZATIONID="${OrganizationID}" ALLOWACCESS="${AllowAccess}" ERRORRESPONSEEXPECTED="${ErrorResponseExpected}" ERRORTYPEEXPECTED="${ErrorTypeExpected}" DATAVALID="${DataValid}"/>
          </testStep>
          <testStep functionId="Step 18 IF ErrorResponseExpected is not equal to TRUE THEN CONTINUE, OTHERWISE skip the following substeps." passfailResult="False"/>
          <jl:if test="${!ErrorResponseExpected}">
               <testStep functionId="Step 18.1 IF TMDD_N34R556_Text_Insertion_Supported is equal to TRUE THEN CONTINUE; OTHERWISE skip the following substeps." passFailResult="False"/>
               <jl:if test="${TMDD_N34R556_Text_Insertion_Supported}">
                    <testStep functionId="Step 18.1.1 VERIFY that element channel-titling-text exists within videoSwitchControlRequestMsg" passfailResult="True">
                         <ri-MessageVerify msgType="REQUEST" elementName="channel-titling-text" instanceName="tmdd:videoSwitchControlRequestMsg" functionId="Looking for videoSwitchControlRequestMsg.channel-titling-text"/>
                    </testStep>
               </jl:if>
               <testStep functionId="Step 18.2 IF TMDD_N34R557_Output_Channel_Lock_Supported is equal to TRUE THEN CONTINUE; OTHERWISE skip the following substeps." passFailResult="False"/>
               <jl:if test="${TMDD_N34R557_Output_Channel_Lock_Supported}">
                    <testStep functionId="Step 18.2.1 VERIFY that element set-output-channel-lock exists within videoSwitchControlRequestMsg" passfailResult="True">
                         <ri-MessageVerify msgType="REQUEST" elementName="set-output-channel-lock" instanceName="tmdd:videoSwitchControlRequestMsg" functionId="Looking for videoSwitchControlRequestMsg.set-output-channel-lock"/>
                    </testStep>
               </jl:if>
               <testStep functionId="Step 18.3 IF TMDD_N34R558_Frames_per_Second_Supported is equal to TRUE THEN CONTINUE; OTHERWISE skip the following substeps." passFailResult="False"/>
               <jl:if test="${TMDD_N34R558_Frames_per_Second_Supported}">
                    <testStep functionId="Step 18.3.1 VERIFY that element frames-per-second exists within videoSwitchControlRequestMsg" passfailResult="True">
                         <ri-MessageVerify msgType="REQUEST" elementName="frames-per-second" instanceName="tmdd:videoSwitchControlRequestMsg" functionId="Looking for videoSwitchControlRequestMsg.frames-per-second"/>
                    </testStep>
               </jl:if>
               <testStep functionId="Step 18.4 IF TMDD_N34R559_Resolution_(Height)_Supported is equal to TRUE THEN CONTINUE; OTHERWISE skip the following substeps." passFailResult="False"/>
               <jl:if test="${TMDD_N34R559_Resolution_(Height)_Supported}">
                    <testStep functionId="Step 18.4.1 VERIFY that element frame-height-pixels exists within videoSwitchControlRequestMsg" passfailResult="True">
                         <ri-MessageVerify msgType="REQUEST" elementName="frame-height-pixels" instanceName="tmdd:videoSwitchControlRequestMsg" functionId="Looking for videoSwitchControlRequestMsg.frame-height-pixels"/>
                    </testStep>
               </jl:if>
               <testStep functionId="Step 18.5 IF TMDD_N34R560_Resolution_(Width)_Supported is equal to TRUE THEN CONTINUE; OTHERWISE skip the following substeps." passFailResult="False"/>
               <jl:if test="${TMDD_N34R560_Resolution_(Width)_Supported}">
                    <testStep functionId="Step 18.5.1 VERIFY that element frame-width-pixels exists within videoSwitchControlRequestMsg" passfailResult="True">
                         <ri-MessageVerify msgType="REQUEST" elementName="frame-width-pixels" instanceName="tmdd:videoSwitchControlRequestMsg" functionId="Looking for videoSwitchControlRequestMsg.frame-width-pixels"/>
                    </testStep>
               </jl:if>
               <testStep functionId="Step 18.6 IF TMDD_N34R561_Video_Format_Supported is equal to TRUE THEN CONTINUE; OTHERWISE skip the following substeps." passFailResult="False"/>
               <jl:if test="${TMDD_N34R561_Video_Format_Supported}">
                    <testStep functionId="Step 18.6.1 VERIFY that element video-format exists within videoSwitchControlRequestMsg" passfailResult="True">
                         <ri-MessageVerify msgType="REQUEST" elementName="video-format" instanceName="tmdd:videoSwitchControlRequestMsg" functionId="Looking for videoSwitchControlRequestMsg.video-format"/>
                    </testStep>
               </jl:if>
               <testStep functionId="Step 18.7 VERIFY that the values within the REQUEST message are correct per the TMDD standard and known operational conditions.">
                    <AUTO-VERIFY-MESSAGE functionId="Automatically Verify message content" msgName="REQUEST" verificationSpec="${VerificationSpec}"/>
                    <USER-VERIFY-MESSAGE functionId="The User Verifies the message content" msgName="REQUEST" optionList="TMDD_N34R556_Text_Insertion_Supported,channel-titling-text,tmdd:videoSwitchControlRequestMsg;TMDD_N34R557_Output_Channel_Lock_Supported,set-output-channel-lock,tmdd:videoSwitchControlRequestMsg;TMDD_N34R558_Frames_per_Second_Supported,frames-per-second,tmdd:videoSwitchControlRequestMsg;TMDD_N34R559_Resolution_(Height)_Supported,frame-height-pixels,tmdd:videoSwitchControlRequestMsg;TMDD_N34R560_Resolution_(Width)_Supported,frame-width-pixels,tmdd:videoSwitchControlRequestMsg;TMDD_N34R561_Video_Format_Supported,video-format,tmdd:videoSwitchControlRequestMsg;" userDataFile="${RI_USERTCDATAFILE}"/>
               </testStep>
               <testStep functionId=" Step 18.8 CONFIGURE: Set OptionalContentVerified to True" passfailResult="False">
                    <jl:set var="OptionalContentVerified" value="true"/>
               </testStep>
               <postcondition>
                    <testStep functionId="Step 18.9 POSTCONDITION: REQUEST-RESPONSE-OC-REPLY with the following parameters:   DIALOG=dlVideoSwitchControlRequest OPTIONALCONTENTVERIFIED = OptionalContentVerified RESPONSEMESSAGE = ResponseMessage ">
                         <REQUEST-RESPONSE-OC-REPLY Dialog="dlVideoSwitchControlRequest" functionId="dlVideoSwitchControlRequest" OPTIONALCONTENTVERIFIED="${OptionalContentVerified}" RESPONSEMESSAGE="${ResponseMessage}"/>
                    </testStep>
               </postcondition>
          </jl:if>
     </C2CRI-session>
</testprocedure>