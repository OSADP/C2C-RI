<?xml version="1.0" encoding="UTF-8"?>
<!--Title:  TPS-12-dlTrafficNetworkInformationSubscription-OC
       Description:  This test procedure is called by a test case and is used to verify the SUTs support of the dlTrafficNetworkInformationSubscription dialog as an OC using variables provided by the calling test case.  
This procedure supports verification of requirements related to user need 2.3.5.1.2 [Need for Link Inventory] and is used for both valid and invalid test cases.
       Version/Date: 2012/02/14 22:43:35-->
<testprocedure xmlns="jelly:jameleon" xmlns:jl="jelly:core">
     <test-case-id>${C2CRITestCaseID}</test-case-id>
     <test-case-summary>This test procedure is called by a test case and is used to verify the SUTs support of the dlTrafficNetworkInformationSubscription dialog as an OC using variables provided by the calling test case.  
This procedure supports verification of requirements related to user need 2.3.5.1.2 [Need for Link Inventory] and is used for both valid and invalid test cases.</test-case-summary>
     <testStep functionId="Step 1 CONFIGURE: Determine the Application Layer Standard that will be used for this test.  RECORD this information as: ApplicationLayerStandard:  ${ApplicationLayerStandard}" passfailResult="False "/>
     <testStep functionId="Step 2 CONFIGURE: Determine whether Roadway Network Name is required by the specification. (NRTM 3.3.5.3.1.5.2.2).  RECORD this information as: TMDD_N12R261_Roadway_Network_Name_Supported = ${TMDD_N12R261_Roadway_Network_Name_Supported}" passfailResult="False"/>
     <testStep functionId="Step 3 CONFIGURE: Determine whether Link Name is required by the specification. (NRTM 3.3.5.3.1.5.2.3).  RECORD this information as: TMDD_N12R262_Link_Name_Supported = ${TMDD_N12R262_Link_Name_Supported}" passfailResult="False"/>
     <testStep functionId="Step 4 CONFIGURE: Determine whether Alternate Names is required by the specification. (NRTM 3.3.5.3.1.5.2.4).  RECORD this information as: TMDD_N12R263_Alternate_Names_Supported = ${TMDD_N12R263_Alternate_Names_Supported}" passfailResult="False"/>
     <testStep functionId="Step 5 CONFIGURE: Determine whether Route Designator is required by the specification. (NRTM 3.3.5.3.1.5.2.5).  RECORD this information as: TMDD_N12R264_Route_Designator_Supported = ${TMDD_N12R264_Route_Designator_Supported}" passfailResult="False"/>
     <testStep functionId="Step 6 CONFIGURE: Determine whether Secondary Route Designator is required by the specification. (NRTM 3.3.5.3.1.5.2.6).  RECORD this information as: TMDD_N12R265_Secondary_Route_Designator_Supported = ${TMDD_N12R265_Secondary_Route_Designator_Supported}" passfailResult="False"/>
     <testStep functionId="Step 7 CONFIGURE: Determine whether Linear Reference is required by the specification. (NRTM 3.3.5.3.1.5.2.7).  RECORD this information as: TMDD_N12R266_Linear_Reference_Supported = ${TMDD_N12R266_Linear_Reference_Supported}" passfailResult="False"/>
     <testStep functionId="Step 8 CONFIGURE: Determine whether Link Length is required by the specification. (NRTM 3.3.5.3.1.5.2.8).  RECORD this information as: TMDD_N12R267_Link_Length_Supported = ${TMDD_N12R267_Link_Length_Supported}" passfailResult="False"/>
     <testStep functionId="Step 9 CONFIGURE: Determine whether Link Capacity is required by the specification. (NRTM 3.3.5.3.1.5.2.9).  RECORD this information as: TMDD_N12R268_Link_Capacity_Supported = ${TMDD_N12R268_Link_Capacity_Supported}" passfailResult="False"/>
     <testStep functionId="Step 10 CONFIGURE: Determine whether Link Speed Limit is required by the specification. (NRTM 3.3.5.3.1.5.2.10).  RECORD this information as: TMDD_N12R269_Link_Speed_Limit_Supported = ${TMDD_N12R269_Link_Speed_Limit_Supported}" passfailResult="False"/>
     <testStep functionId="Step 11 CONFIGURE: Determine whether Link Truck Speed Limit is required by the specification. (NRTM 3.3.5.3.1.5.2.11).  RECORD this information as: TMDD_N12R270_Link_Truck_Speed_Limit_Supported = ${TMDD_N12R270_Link_Truck_Speed_Limit_Supported}" passfailResult="False"/>
     <testStep functionId="Step 12 CONFIGURE: Determine whether Speed Limit Units is required by the specification. (NRTM 3.3.5.3.1.5.2.12).  RECORD this information as: TMDD_N12R271_Speed_Limit_Units_Supported = ${TMDD_N12R271_Speed_Limit_Units_Supported}" passfailResult="False"/>
     <testStep functionId="Step 13 CONFIGURE: Determine whether Link Law Enforcement Jurisdiction is required by the specification. (NRTM 3.3.5.3.1.5.2.13).  RECORD this information as: TMDD_N12R272_Link_Law_Enforcement_Jurisdiction_Supported = ${TMDD_N12R272_Link_Law_Enforcement_Jurisdiction_Supported}" passfailResult="False"/>
     <testStep functionId="Step 14 CONFIGURE: Determine whether Designated Owner is required by the specification. (NRTM 3.3.5.3.1.5.2.14).  RECORD this information as: TMDD_N12R273_Designated_Owner_Supported = ${TMDD_N12R273_Designated_Owner_Supported}" passfailResult="False"/>
     <testStep functionId="Step 15 CONFIGURE: Determine whether Left Shoulder Width is required by the specification. (NRTM 3.3.5.3.1.5.2.15).  RECORD this information as: TMDD_N12R274_Left_Shoulder_Width_Supported = ${TMDD_N12R274_Left_Shoulder_Width_Supported}" passfailResult="False"/>
     <testStep functionId="Step 16 CONFIGURE: Determine whether Right Shoulder Width is required by the specification. (NRTM 3.3.5.3.1.5.2.16).  RECORD this information as: TMDD_N12R275_Right_Shoulder_Width_Supported = ${TMDD_N12R275_Right_Shoulder_Width_Supported}" passfailResult="False"/>
     <testStep functionId="Step 17 CONFIGURE: Determine whether Median Type is required by the specification. (NRTM 3.3.5.3.1.5.2.17).  RECORD this information as: TMDD_N12R276_Median_Type_Supported = ${TMDD_N12R276_Median_Type_Supported}" passfailResult="False"/>
     <testStep functionId="Step 18 CONFIGURE: Determine whether Inventory Date and Time Change Information is required by the specification. (NRTM 3.3.5.3.1.5.2.18).  RECORD this information as: TMDD_N12R277_Inventory_Date_and_Time_Change_Information_Supported = ${TMDD_N12R277_Inventory_Date_and_Time_Change_Information_Supported}" passfailResult="False"/>
     <C2CRI-session beginSession="true" infoStd="TMDDv3.01" appStd="${ApplicationLayerStandard}" useWSDL="true" testCaseIdentifier="${C2CRITestCaseID}" subscriptionDialog="dlTrafficNetworkInformationSubscription" publicationDialog="dlLinkInventoryUpdate" riMode="EC">
          <testStep functionId="Step 19 CONFIGURE: Determine the number of publication message transmissions that will be received within this test.  RECORD this information as: PublicationsToReceive:  ${PublicationsToReceive}" passfailResult="False"/>
          <testStep functionId="Step 20 CONFIGURE: Determine whether an error response message is expected for this test.  RECORD this information as: PublicationErrorResponseExpected:  ${PublicationErrorResponseExpected}" passfailResult="False"/>
          <jl:if test="${PublicationErrorResponseExpected}">
               <testStep functionId="Step 21 CONFIGURE: IF PublicationErrorResponseExpected is true, determine the expected error code response for this test.  RECORD this information as:  PublicationErrorTypeExpected:  ${PublicationErrorTypeExpected}" passfailResult="False"/>
          </jl:if>
          <testStep functionId="Step 22 CONFIGURE: Define the publication response message that will be sent to the SUT.  RECORD this information as: PublicationResponseMessage:  ${PublicationResponseMessage}" passfailResult="False"/>
          <testStep functionId="Step 23 CONFIGURE: Determine whether the Authentication parameters need to be verified within this test.  RECORD this information as: AuthenticationCheck:  ${AuthenticationCheck}" passfailResult="False"/>
          <testStep functionId="Step 24 CONFIGURE: Determine whether the SUT will be allowed access to the information requested in this test.  RECORD this information as: AllowAccess:  ${AllowAccess}" passfailResult="False"/>
          <testStep functionId="Step 25 CONFIGURE: Define the publication message that will be sent to the SUT.  RECORD this information as: SubscriptionMessage:  ${SubscriptionMessage}" passfailResult="False"/>
          <testStep functionId="Step 26 CONFIGURE: Determine whether an error response message is expected for this test.  RECORD this information as: SubscriptionErrorResponseExpected:  ${SubscriptionErrorResponseExpected}" passfailResult="False"/>
          <jl:if test="${SubscriptionErrorResponseExpected}">
               <testStep functionId="Step 27 CONFIGURE: IF SubscriptionErrorResponseExpected is true, determine the expected error code response for this test.  RECORD this information as:  SubscriptionErrorTypeExpected:  ${SubscriptionErrorTypeExpected}" passfailResult="False"/>
          </jl:if>
          <testStep functionId="Step 28 SUBSCRIPTION-EC with the following parameters:   DIALOG=dlTrafficNetworkInformationSubscription SUBSCRIPTIONMESSAGE = SubscriptionMessage SUBSCRIPTIONERRORRESPONSEEXPECTED = SubscriptionErrorResponseExpected SUBSCRIPTIONERRORTYPEEXPECTED = SubscriptionErrorTypeExpected  Returns: CONTINUEPUBLICATION ">
               <SUBSCRIPTION-EC Dialog="dlTrafficNetworkInformationSubscription" functionId="dlTrafficNetworkInformationSubscription" SUBSCRIPTIONMESSAGE="${SubscriptionMessage}" SUBSCRIPTIONERRORRESPONSEEXPECTED="${SubscriptionErrorResponseExpected}" SUBSCRIPTIONERRORTYPEEXPECTED="${SubscriptionErrorTypeExpected}"/>
          </testStep>
          <testStep functionId="Step 29 IF SubscriptionErrorResponseExpected is not equal to TRUE THEN CONTINUE, OTHERWISE skip the following substeps." passfailResult="False"/>
          <jl:if test="${!SubscriptionErrorResponseExpected}">
               <testStep functionId="Step 29.1 WHILE CONTINUEPUBLICATION is equal to TRUE then CONTINUE, OTHERWISE skip the following substeps."/>
               <jl:while test="${CONTINUEPUBLICATION}">
                    <testStep functionId="Step 29.1.1 PUBLICATION-EC-RECEIVE with the following parameters:   DIALOG=dlLinkInventoryUpdate PUBLICATIONSTORECEIVE = PublicationsToReceive PUBLICATIONERRORRESPONSEEXPECTED = PublicationErrorResponseExpected PUBLICATIONERRORTYPEEXPECTED = PublicationErrorTypeExpected AUTHENTICATIONCHECK = AuthenticationCheck ALLOWACCESS = AllowAccess  Returns: CONTINUEPUBLICATION ">
                         <PUBLICATION-EC-RECEIVE Dialog="dlLinkInventoryUpdate" functionId="dlLinkInventoryUpdate" PUBLICATIONSTORECEIVE="${PublicationsToReceive}" PUBLICATIONERRORRESPONSEEXPECTED="${PublicationErrorResponseExpected}" PUBLICATIONERRORTYPEEXPECTED="${PublicationErrorTypeExpected}" AUTHENTICATIONCHECK="${AuthenticationCheck}" ALLOWACCESS="${AllowAccess}"/>
                    </testStep>
                    <testStep functionId="Step 29.1.2 IF PublicationErrorResponseExpected is not equal to TRUE THEN CONTINUE, OTHERWISE skip the following substeps." passfailResult="False"/>
                    <jl:if test="${!PublicationErrorResponseExpected}">
                         <testStep functionId="Step 29.1.2.1 IF TMDD_N12R261_Roadway_Network_Name_Supported is equal to TRUE THEN CONTINUE; OTHERWISE skip the following substeps." passFailResult="False"/>
                         <jl:if test="${TMDD_N12R261_Roadway_Network_Name_Supported}">
                              <testStep functionId="Step 29.1.2.1.1 VERIFY that element network-name exists within each instance of linkInventoryMsg.link-inventory-item.link-list.link" passfailResult="True">
                                   <ri-MessageVerify msgType="RESPONSE" elementName="network-name" instanceName="tmdd:linkInventoryMsg.link-inventory-item.link-list.link" functionId="Looking for linkInventoryMsg.link-inventory-item.link-list.link.network-name"/>
                              </testStep>
                         </jl:if>
                         <testStep functionId="Step 29.1.2.2 IF TMDD_N12R262_Link_Name_Supported is equal to TRUE THEN CONTINUE; OTHERWISE skip the following substeps." passFailResult="False"/>
                         <jl:if test="${TMDD_N12R262_Link_Name_Supported}">
                              <testStep functionId="Step 29.1.2.2.1 VERIFY that element link-name exists within each instance of linkInventoryMsg.link-inventory-item.link-list.link" passfailResult="True">
                                   <ri-MessageVerify msgType="RESPONSE" elementName="link-name" instanceName="tmdd:linkInventoryMsg.link-inventory-item.link-list.link" functionId="Looking for linkInventoryMsg.link-inventory-item.link-list.link.link-name"/>
                              </testStep>
                         </jl:if>
                         <testStep functionId="Step 29.1.2.3 IF TMDD_N12R263_Alternate_Names_Supported is equal to TRUE THEN CONTINUE; OTHERWISE skip the following substeps." passFailResult="False"/>
                         <jl:if test="${TMDD_N12R263_Alternate_Names_Supported}">
                              <testStep functionId="Step 29.1.2.3.1 VERIFY that element alternate-link-name exists within each instance of linkInventoryMsg.link-inventory-item.link-list.link" passfailResult="True">
                                   <ri-MessageVerify msgType="RESPONSE" elementName="alternate-link-name" instanceName="tmdd:linkInventoryMsg.link-inventory-item.link-list.link" functionId="Looking for linkInventoryMsg.link-inventory-item.link-list.link.alternate-link-name"/>
                              </testStep>
                         </jl:if>
                         <testStep functionId="Step 29.1.2.4 IF TMDD_N12R264_Route_Designator_Supported is equal to TRUE THEN CONTINUE; OTHERWISE skip the following substeps." passFailResult="False"/>
                         <jl:if test="${TMDD_N12R264_Route_Designator_Supported}">
                              <testStep functionId="Step 29.1.2.4.1 VERIFY that element link-route-designator exists within each instance of linkInventoryMsg.link-inventory-item.link-list.link" passfailResult="True">
                                   <ri-MessageVerify msgType="RESPONSE" elementName="link-route-designator" instanceName="tmdd:linkInventoryMsg.link-inventory-item.link-list.link" functionId="Looking for linkInventoryMsg.link-inventory-item.link-list.link.link-route-designator"/>
                              </testStep>
                         </jl:if>
                         <testStep functionId="Step 29.1.2.5 IF TMDD_N12R265_Secondary_Route_Designator_Supported is equal to TRUE THEN CONTINUE; OTHERWISE skip the following substeps." passFailResult="False"/>
                         <jl:if test="${TMDD_N12R265_Secondary_Route_Designator_Supported}">
                              <testStep functionId="Step 29.1.2.5.1 VERIFY that element secondary-link-route-designator exists within each instance of linkInventoryMsg.link-inventory-item.link-list.link" passfailResult="True">
                                   <ri-MessageVerify msgType="RESPONSE" elementName="secondary-link-route-designator" instanceName="tmdd:linkInventoryMsg.link-inventory-item.link-list.link" functionId="Looking for linkInventoryMsg.link-inventory-item.link-list.link.secondary-link-route-designator"/>
                              </testStep>
                         </jl:if>
                         <testStep functionId="Step 29.1.2.6 IF TMDD_N12R266_Linear_Reference_Supported is equal to TRUE THEN CONTINUE; OTHERWISE skip the following substeps." passFailResult="False"/>
                         <jl:if test="${TMDD_N12R266_Linear_Reference_Supported}">
                              <testStep functionId="Step 29.1.2.6.1 VERIFY that element linear-reference exists within each instance of linkInventoryMsg.link-inventory-item.link-list.link" passfailResult="True">
                                   <ri-MessageVerify msgType="RESPONSE" elementName="linear-reference" instanceName="tmdd:linkInventoryMsg.link-inventory-item.link-list.link" functionId="Looking for linkInventoryMsg.link-inventory-item.link-list.link.linear-reference"/>
                              </testStep>
                              <testStep functionId="Step 29.1.2.6.2 VERIFY that element linear-reference-version exists within each instance of linkInventoryMsg.link-inventory-item.link-list.link" passfailResult="True">
                                   <ri-MessageVerify msgType="RESPONSE" elementName="linear-reference-version" instanceName="tmdd:linkInventoryMsg.link-inventory-item.link-list.link" functionId="Looking for linkInventoryMsg.link-inventory-item.link-list.link.linear-reference-version"/>
                              </testStep>
                         </jl:if>
                         <testStep functionId="Step 29.1.2.7 IF TMDD_N12R267_Link_Length_Supported is equal to TRUE THEN CONTINUE; OTHERWISE skip the following substeps." passFailResult="False"/>
                         <jl:if test="${TMDD_N12R267_Link_Length_Supported}">
                              <testStep functionId="Step 29.1.2.7.1 VERIFY that element link-length exists within each instance of linkInventoryMsg.link-inventory-item.link-list.link" passfailResult="True">
                                   <ri-MessageVerify msgType="RESPONSE" elementName="link-length" instanceName="tmdd:linkInventoryMsg.link-inventory-item.link-list.link" functionId="Looking for linkInventoryMsg.link-inventory-item.link-list.link.link-length"/>
                              </testStep>
                         </jl:if>
                         <testStep functionId="Step 29.1.2.8 IF TMDD_N12R268_Link_Capacity_Supported is equal to TRUE THEN CONTINUE; OTHERWISE skip the following substeps." passFailResult="False"/>
                         <jl:if test="${TMDD_N12R268_Link_Capacity_Supported}">
                              <testStep functionId="Step 29.1.2.8.1 VERIFY that element link-capacity exists within each instance of linkInventoryMsg.link-inventory-item.link-list.link" passfailResult="True">
                                   <ri-MessageVerify msgType="RESPONSE" elementName="link-capacity" instanceName="tmdd:linkInventoryMsg.link-inventory-item.link-list.link" functionId="Looking for linkInventoryMsg.link-inventory-item.link-list.link.link-capacity"/>
                              </testStep>
                         </jl:if>
                         <testStep functionId="Step 29.1.2.9 IF TMDD_N12R269_Link_Speed_Limit_Supported is equal to TRUE THEN CONTINUE; OTHERWISE skip the following substeps." passFailResult="False"/>
                         <jl:if test="${TMDD_N12R269_Link_Speed_Limit_Supported}">
                              <testStep functionId="Step 29.1.2.9.1 VERIFY that element link-speed-limit exists within each instance of linkInventoryMsg.link-inventory-item.link-list.link" passfailResult="True">
                                   <ri-MessageVerify msgType="RESPONSE" elementName="link-speed-limit" instanceName="tmdd:linkInventoryMsg.link-inventory-item.link-list.link" functionId="Looking for linkInventoryMsg.link-inventory-item.link-list.link.link-speed-limit"/>
                              </testStep>
                         </jl:if>
                         <testStep functionId="Step 29.1.2.10 IF TMDD_N12R270_Link_Truck_Speed_Limit_Supported is equal to TRUE THEN CONTINUE; OTHERWISE skip the following substeps." passFailResult="False"/>
                         <jl:if test="${TMDD_N12R270_Link_Truck_Speed_Limit_Supported}">
                              <testStep functionId="Step 29.1.2.10.1 VERIFY that element link-speed-limit-truck exists within each instance of linkInventoryMsg.link-inventory-item.link-list.link" passfailResult="True">
                                   <ri-MessageVerify msgType="RESPONSE" elementName="link-speed-limit-truck" instanceName="tmdd:linkInventoryMsg.link-inventory-item.link-list.link" functionId="Looking for linkInventoryMsg.link-inventory-item.link-list.link.link-speed-limit-truck"/>
                              </testStep>
                         </jl:if>
                         <testStep functionId="Step 29.1.2.11 IF TMDD_N12R271_Speed_Limit_Units_Supported is equal to TRUE THEN CONTINUE; OTHERWISE skip the following substeps." passFailResult="False"/>
                         <jl:if test="${TMDD_N12R271_Speed_Limit_Units_Supported}">
                              <testStep functionId="Step 29.1.2.11.1 VERIFY that element link-speed-limit-units exists within each instance of linkInventoryMsg.link-inventory-item.link-list.link" passfailResult="True">
                                   <ri-MessageVerify msgType="RESPONSE" elementName="link-speed-limit-units" instanceName="tmdd:linkInventoryMsg.link-inventory-item.link-list.link" functionId="Looking for linkInventoryMsg.link-inventory-item.link-list.link.link-speed-limit-units"/>
                              </testStep>
                         </jl:if>
                         <testStep functionId="Step 29.1.2.12 IF TMDD_N12R272_Link_Law_Enforcement_Jurisdiction_Supported is equal to TRUE THEN CONTINUE; OTHERWISE skip the following substeps." passFailResult="False"/>
                         <jl:if test="${TMDD_N12R272_Link_Law_Enforcement_Jurisdiction_Supported}">
                              <testStep functionId="Step 29.1.2.12.1 VERIFY that element link-jurisdiction exists within each instance of linkInventoryMsg.link-inventory-item.link-list.link" passfailResult="True">
                                   <ri-MessageVerify msgType="RESPONSE" elementName="link-jurisdiction" instanceName="tmdd:linkInventoryMsg.link-inventory-item.link-list.link" functionId="Looking for linkInventoryMsg.link-inventory-item.link-list.link.link-jurisdiction"/>
                              </testStep>
                         </jl:if>
                         <testStep functionId="Step 29.1.2.13 IF TMDD_N12R273_Designated_Owner_Supported is equal to TRUE THEN CONTINUE; OTHERWISE skip the following substeps." passFailResult="False"/>
                         <jl:if test="${TMDD_N12R273_Designated_Owner_Supported}">
                              <testStep functionId="Step 29.1.2.13.1 VERIFY that element link-owner exists within each instance of linkInventoryMsg.link-inventory-item.link-list.link" passfailResult="True">
                                   <ri-MessageVerify msgType="RESPONSE" elementName="link-owner" instanceName="tmdd:linkInventoryMsg.link-inventory-item.link-list.link" functionId="Looking for linkInventoryMsg.link-inventory-item.link-list.link.link-owner"/>
                              </testStep>
                         </jl:if>
                         <testStep functionId="Step 29.1.2.14 IF TMDD_N12R274_Left_Shoulder_Width_Supported is equal to TRUE THEN CONTINUE; OTHERWISE skip the following substeps." passFailResult="False"/>
                         <jl:if test="${TMDD_N12R274_Left_Shoulder_Width_Supported}">
                              <testStep functionId="Step 29.1.2.14.1 VERIFY that element left-shoulder-width exists within each instance of linkInventoryMsg.link-inventory-item.link-list.link" passfailResult="True">
                                   <ri-MessageVerify msgType="RESPONSE" elementName="left-shoulder-width" instanceName="tmdd:linkInventoryMsg.link-inventory-item.link-list.link" functionId="Looking for linkInventoryMsg.link-inventory-item.link-list.link.left-shoulder-width"/>
                              </testStep>
                         </jl:if>
                         <testStep functionId="Step 29.1.2.15 IF TMDD_N12R275_Right_Shoulder_Width_Supported is equal to TRUE THEN CONTINUE; OTHERWISE skip the following substeps." passFailResult="False"/>
                         <jl:if test="${TMDD_N12R275_Right_Shoulder_Width_Supported}">
                              <testStep functionId="Step 29.1.2.15.1 VERIFY that element right-shoulder-width exists within each instance of linkInventoryMsg.link-inventory-item.link-list.link" passfailResult="True">
                                   <ri-MessageVerify msgType="RESPONSE" elementName="right-shoulder-width" instanceName="tmdd:linkInventoryMsg.link-inventory-item.link-list.link" functionId="Looking for linkInventoryMsg.link-inventory-item.link-list.link.right-shoulder-width"/>
                              </testStep>
                         </jl:if>
                         <testStep functionId="Step 29.1.2.16 IF TMDD_N12R276_Median_Type_Supported is equal to TRUE THEN CONTINUE; OTHERWISE skip the following substeps." passFailResult="False"/>
                         <jl:if test="${TMDD_N12R276_Median_Type_Supported}">
                              <testStep functionId="Step 29.1.2.16.1 VERIFY that element lane-separator exists within each instance of linkInventoryMsg.link-inventory-item.link-list.link" passfailResult="True">
                                   <ri-MessageVerify msgType="RESPONSE" elementName="lane-separator" instanceName="tmdd:linkInventoryMsg.link-inventory-item.link-list.link" functionId="Looking for linkInventoryMsg.link-inventory-item.link-list.link.lane-separator"/>
                              </testStep>
                         </jl:if>
                         <testStep functionId="Step 29.1.2.17 IF TMDD_N12R277_Inventory_Date_and_Time_Change_Information_Supported is equal to TRUE THEN CONTINUE; OTHERWISE skip the following substeps." passFailResult="False"/>
                         <jl:if test="${TMDD_N12R277_Inventory_Date_and_Time_Change_Information_Supported}">
                              <testStep functionId="Step 29.1.2.17.1 VERIFY that element last-update-time exists within each instance of linkInventoryMsg.link-inventory-item.organization-information" passfailResult="True">
                                   <ri-MessageVerify msgType="RESPONSE" elementName="last-update-time" instanceName="tmdd:linkInventoryMsg.link-inventory-item.organization-information" functionId="Looking for linkInventoryMsg.link-inventory-item.organization-information.last-update-time"/>
                              </testStep>
                              <testStep functionId="Step 29.1.2.17.2 VERIFY that element last-update-time exists within each instance of linkInventoryMsg.link-inventory-item.link-list.link" passfailResult="True">
                                   <ri-MessageVerify msgType="RESPONSE" elementName="last-update-time" instanceName="tmdd:linkInventoryMsg.link-inventory-item.link-list.link" functionId="Looking for linkInventoryMsg.link-inventory-item.link-list.link.last-update-time"/>
                              </testStep>
                         </jl:if>
                         <testStep functionId="Step 29.1.2.18 VERIFY that the values within the REQUEST message are correct per the TMDD standard and known operational conditions.">
                              <AUTO-VERIFY-MESSAGE functionId="Automatically Verify message content" msgName="REQUEST" verificationSpec="${VerificationSpec}"/>
                              <USER-VERIFY-MESSAGE functionId="The User Verifies the message content" msgName="REQUEST" optionList="TMDD_N12R261_Roadway_Network_Name_Supported,network-name,tmdd:linkInventoryMsg.link-inventory-item.link-list.link;TMDD_N12R262_Link_Name_Supported,link-name,tmdd:linkInventoryMsg.link-inventory-item.link-list.link;TMDD_N12R263_Alternate_Names_Supported,alternate-link-name,tmdd:linkInventoryMsg.link-inventory-item.link-list.link;TMDD_N12R264_Route_Designator_Supported,link-route-designator,tmdd:linkInventoryMsg.link-inventory-item.link-list.link;TMDD_N12R265_Secondary_Route_Designator_Supported,secondary-link-route-designator,tmdd:linkInventoryMsg.link-inventory-item.link-list.link;TMDD_N12R266_Linear_Reference_Supported,linear-reference,tmdd:linkInventoryMsg.link-inventory-item.link-list.link;TMDD_N12R266_Linear_Reference_Supported,linear-reference-version,tmdd:linkInventoryMsg.link-inventory-item.link-list.link;TMDD_N12R267_Link_Length_Supported,link-length,tmdd:linkInventoryMsg.link-inventory-item.link-list.link;TMDD_N12R268_Link_Capacity_Supported,link-capacity,tmdd:linkInventoryMsg.link-inventory-item.link-list.link;TMDD_N12R269_Link_Speed_Limit_Supported,link-speed-limit,tmdd:linkInventoryMsg.link-inventory-item.link-list.link;TMDD_N12R270_Link_Truck_Speed_Limit_Supported,link-speed-limit-truck,tmdd:linkInventoryMsg.link-inventory-item.link-list.link;TMDD_N12R271_Speed_Limit_Units_Supported,link-speed-limit-units,tmdd:linkInventoryMsg.link-inventory-item.link-list.link;TMDD_N12R272_Link_Law_Enforcement_Jurisdiction_Supported,link-jurisdiction,tmdd:linkInventoryMsg.link-inventory-item.link-list.link;TMDD_N12R273_Designated_Owner_Supported,link-owner,tmdd:linkInventoryMsg.link-inventory-item.link-list.link;TMDD_N12R274_Left_Shoulder_Width_Supported,left-shoulder-width,tmdd:linkInventoryMsg.link-inventory-item.link-list.link;TMDD_N12R275_Right_Shoulder_Width_Supported,right-shoulder-width,tmdd:linkInventoryMsg.link-inventory-item.link-list.link;TMDD_N12R276_Median_Type_Supported,lane-separator,tmdd:linkInventoryMsg.link-inventory-item.link-list.link;TMDD_N12R277_Inventory_Date_and_Time_Change_Information_Supported,last-update-time,tmdd:linkInventoryMsg.link-inventory-item.organization-information;TMDD_N12R277_Inventory_Date_and_Time_Change_Information_Supported,last-update-time,tmdd:linkInventoryMsg.link-inventory-item.link-list.link;" userDataFile="${RI_USERTCDATAFILE}"/>
                         </testStep>
                         <testStep functionId=" Step 29.1.2.19 CONFIGURE: Set OptionalContentVerified to True" passfailResult="False">
                              <jl:set var="OptionalContentVerified" value="true"/>
                         </testStep>
                         <postcondition>
                              <testStep functionId="Step 29.1.2.20 POSTCONDITION: PUBLICATION-EC-REPLY with the following parameters:   DIALOG=dlLinkInventoryUpdate OPTIONALCONTENTVERIFIED = OptionalContentVerified PUBLICATIONRESPONSEMESSAGE = PublicationResponseMessage ">
                                   <PUBLICATION-EC-REPLY Dialog="dlLinkInventoryUpdate" functionId="dlLinkInventoryUpdate" OPTIONALCONTENTVERIFIED="${OptionalContentVerified}" PUBLICATIONRESPONSEMESSAGE="${PublicationResponseMessage}"/>
                              </testStep>
                         </postcondition>
                    </jl:if>
               </jl:while>
          </jl:if>
     </C2CRI-session>
</testprocedure>