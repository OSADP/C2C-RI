<?xml version="1.0" encoding="UTF-8"?>
<!--Title:  TPS-109-dlNodeInventoryUpdate-EC
       Description:  This test procedure is called by a test case and is used to verify the SUTs support of the dlNodeInventoryUpdate dialog as an EC using variables provided by the calling test case.  
This procedure supports verification of requirements related to user need 2.3.7.1.6 [Need for Roadway Characteristics Data] and is used for both valid and invalid test cases.
       Version/Date: 2012/02/14 23:27:06-->
<testprocedure xmlns="jelly:jameleon" xmlns:jl="jelly:core">
     <test-case-id>${C2CRITestCaseID}</test-case-id>
     <test-case-summary>This test procedure is called by a test case and is used to verify the SUTs support of the dlNodeInventoryUpdate dialog as an EC using variables provided by the calling test case.  
This procedure supports verification of requirements related to user need 2.3.7.1.6 [Need for Roadway Characteristics Data] and is used for both valid and invalid test cases.</test-case-summary>
     <testStep functionId="Step 1 CONFIGURE: Determine the Application Layer Standard that will be used for this test.  RECORD this information as: ApplicationLayerStandard:  ${ApplicationLayerStandard}" passfailResult="False "/>
     <testStep functionId="Step 2 CONFIGURE: Determine whether Authentication is required by the specification. (NRTM 3.3.5.1.1.2.1).  RECORD this information as: TMDD_N109R224_Authentication_Supported = ${TMDD_N109R224_Authentication_Supported}" passfailResult="False"/>
     <testStep functionId="Step 3 CONFIGURE: Determine whether Roadway Network Identifier is required by the specification. (NRTM 3.3.5.1.1.2.2).  RECORD this information as: TMDD_N109R225_Roadway_Network_Identifier_Supported = ${TMDD_N109R225_Roadway_Network_Identifier_Supported}" passfailResult="False"/>
     <testStep functionId="Step 4 CONFIGURE: Determine whether Traffic Network Identifier is required by the specification. (NRTM 3.3.5.1.1.2.3).  RECORD this information as: TMDD_N109R226_Traffic_Network_Identifier_Supported = ${TMDD_N109R226_Traffic_Network_Identifier_Supported}" passfailResult="False"/>
     <C2CRI-session beginSession="true" infoStd="TMDDv3.01" appStd="${ApplicationLayerStandard}" useWSDL="true" testCaseIdentifier="${C2CRITestCaseID}" publicationDialog="dlNodeInventoryUpdate" subscriptionDialog="dlTrafficNetworkInformationSubscription" riMode="OC">
          <testStep functionId="Step 5 CONFIGURE: Define the publication message that will be sent to the SUT.  RECORD this information as: PublicationMessage:  ${PublicationMessage}" passfailResult="False"/>
          <testStep functionId="Step 6 CONFIGURE: Determine the number of publication message transmissions that will be performed within this test.  RECORD this information as: PublicationCount:  ${PublicationCount}" passfailResult="False"/>
          <testStep functionId="Step 7 CONFIGURE: Determine whether an error response message is expected for this test.  RECORD this information as: PublicationErrorResponseExpected:  ${PublicationErrorResponseExpected}" passfailResult="False"/>
          <jl:if test="${PublicationErrorResponseExpected}">
               <testStep functionId="Step 8 CONFIGURE: IF PublicationErrorResponseExpected is true, determine the expected error code response for this test.  RECORD this information as:  PublicationErrorTypeExpected:  ${PublicationErrorTypeExpected}" passfailResult="False"/>
          </jl:if>
          <testStep functionId="Step 9 CONFIGURE: Determine whether the Authentication parameters need to be verified within this test.  RECORD this information as: AuthenticationCheck:  ${AuthenticationCheck}" passfailResult="False"/>
          <testStep functionId="Step 10 CONFIGURE: Identify the Username expected for authentication during this test.  RECORD this information as: Username:  ${Username}" passfailResult="False"/>
          <testStep functionId="Step 11 CONFIGURE: Identify the Password expected for authentication during this test.  RECORD this information as: Password:  ${Password}" passfailResult="False"/>
          <testStep functionId="Step 12 CONFIGURE: Identify the Organization Identifier expected for authentication during this test.  RECORD this information as: OrganizationID:  ${OrganizationID}" passfailResult="False"/>
          <testStep functionId="Step 13 CONFIGURE: Determine whether the SUT will be allowed access to the information requested in this test.  RECORD this information as: AllowAccess:  ${AllowAccess}" passfailResult="False"/>
          <testStep functionId="Step 14 CONFIGURE: Determine whether an error response message is expected for this test.  RECORD this information as: SubscriptionErrorResponseExpected:  ${SubscriptionErrorResponseExpected}" passfailResult="False"/>
          <jl:if test="${SubscriptionErrorResponseExpected}">
               <testStep functionId="Step 15 CONFIGURE: IF SubscriptionErrorResponseExpected is true, determine the expected error code response for this test.  RECORD this information as:  SubscriptionErrorTypeExpected:  ${SubscriptionErrorTypeExpected}" passfailResult="False"/>
          </jl:if>
          <testStep functionId="Step 16 CONFIGURE: Define the subscription response message that will be sent to the SUT.  RECORD this information as: SubscriptionResponseMessage:  ${SubscriptionResponseMessage}" passfailResult="False"/>
          <testStep functionId="Step 17 SUBSCRIPTION-OC-RECEIVE with the following parameters:   DIALOG=dlTrafficNetworkInformationSubscription AUTHENTICATIONCHECK = AuthenticationCheck USERNAME = Username PASSWORD = Password ORGANIZATIONID = OrganizationID ALLOWACCESS = AllowAccess SUBSCRIPTIONERRORRESPONSEEXPECTED = SubscriptionErrorResponseExpected SUBSCRIPTIONERRORTYPEEXPECTED = SubscriptionErrorTypeExpected  Returns: CONTINUEPUBLICATION ">
               <SUBSCRIPTION-OC-RECEIVE Dialog="dlTrafficNetworkInformationSubscription" functionId="dlTrafficNetworkInformationSubscription" AUTHENTICATIONCHECK="${AuthenticationCheck}" USERNAME="${Username}" PASSWORD="${Password}" ORGANIZATIONID="${OrganizationID}" ALLOWACCESS="${AllowAccess}" SUBSCRIPTIONERRORRESPONSEEXPECTED="${SubscriptionErrorResponseExpected}" SUBSCRIPTIONERRORTYPEEXPECTED="${SubscriptionErrorTypeExpected}"/>
          </testStep>
          <testStep functionId="Step 18 IF SubscriptionErrorResponseExpected is not equal to TRUE THEN CONTINUE, OTHERWISE skip the following substeps." passfailResult="False"/>
          <jl:if test="${!SubscriptionErrorResponseExpected}">
               <testStep functionId="Step 18.1 IF TMDD_N109R224_Authentication_Supported is equal to TRUE THEN CONTINUE; OTHERWISE skip the following substeps." passFailResult="False"/>
               <jl:if test="${TMDD_N109R224_Authentication_Supported}">
                    <testStep functionId="Step 18.1.1 VERIFY that element authentication exists within trafficNetworkInformationRequestMsg" passfailResult="True">
                         <ri-MessageVerify msgType="REQUEST" elementName="authentication" instanceName="tmdd:trafficNetworkInformationRequestMsg" functionId="Looking for trafficNetworkInformationRequestMsg.authentication"/>
                    </testStep>
               </jl:if>
               <testStep functionId="Step 18.2 IF TMDD_N109R225_Roadway_Network_Identifier_Supported is equal to TRUE THEN CONTINUE; OTHERWISE skip the following substeps." passFailResult="False"/>
               <jl:if test="${TMDD_N109R225_Roadway_Network_Identifier_Supported}">
                    <testStep functionId="Step 18.2.1 VERIFY that element network-identifiers exists within trafficNetworkInformationRequestMsg" passfailResult="True">
                         <ri-MessageVerify msgType="REQUEST" elementName="network-identifiers" instanceName="tmdd:trafficNetworkInformationRequestMsg" functionId="Looking for trafficNetworkInformationRequestMsg.network-identifiers"/>
                    </testStep>
               </jl:if>
               <testStep functionId="Step 18.3 IF TMDD_N109R226_Traffic_Network_Identifier_Supported is equal to TRUE THEN CONTINUE; OTHERWISE skip the following substeps." passFailResult="False"/>
               <jl:if test="${TMDD_N109R226_Traffic_Network_Identifier_Supported}">
                    <testStep functionId="Step 18.3.1 VERIFY that element roadway-network-id-list exists within trafficNetworkInformationRequestMsg" passfailResult="True">
                         <ri-MessageVerify msgType="REQUEST" elementName="roadway-network-id-list" instanceName="tmdd:trafficNetworkInformationRequestMsg" functionId="Looking for trafficNetworkInformationRequestMsg.roadway-network-id-list"/>
                    </testStep>
               </jl:if>
               <testStep functionId="Step 18.4 VERIFY that the values within the REQUEST message are correct per the TMDD standard and known operational conditions.">
                    <AUTO-VERIFY-MESSAGE functionId="Automatically Verify message content" msgName="REQUEST" verificationSpec="${VerificationSpec}"/>
                    <USER-VERIFY-MESSAGE functionId="The User Verifies the message content" msgName="REQUEST" optionList="TMDD_N109R224_Authentication_Supported,authentication,tmdd:trafficNetworkInformationRequestMsg;TMDD_N109R225_Roadway_Network_Identifier_Supported,network-identifiers,tmdd:trafficNetworkInformationRequestMsg;TMDD_N109R226_Traffic_Network_Identifier_Supported,roadway-network-id-list,tmdd:trafficNetworkInformationRequestMsg;" userDataFile="${RI_USERTCDATAFILE}"/>
               </testStep>
               <testStep functionId=" Step 18.5 CONFIGURE: Set OptionalContentVerified to True" passfailResult="False">
                    <jl:set var="OptionalContentVerified" value="true"/>
               </testStep>
               <postcondition>
                    <testStep functionId="Step 18.6 POSTCONDITION: SUBSCRIPTION-OC-REPLY with the following parameters:   DIALOG=dlTrafficNetworkInformationSubscription OPTIONALCONTENTVERIFIED = OptionalContentVerified SUBSCRIPTIONRESPONSEMESSAGE = SubscriptionResponseMessage ">
                         <SUBSCRIPTION-OC-REPLY Dialog="dlTrafficNetworkInformationSubscription" functionId="dlTrafficNetworkInformationSubscription" OPTIONALCONTENTVERIFIED="${OptionalContentVerified}" SUBSCRIPTIONRESPONSEMESSAGE="${SubscriptionResponseMessage}"/>
                    </testStep>
               </postcondition>
               <testStep functionId="Step 18.7 WHILE CONTINUEPUBLICATION is equal to TRUE then CONTINUE, OTHERWISE skip the following substeps."/>
               <jl:while test="${CONTINUEPUBLICATION}">
                    <testStep functionId="Step 18.7.1 PUBLICATION-OC with the following parameters:   DIALOG=dlNodeInventoryUpdate PUBLICATIONMESSAGE = PublicationMessage PUBLICATIONCOUNT = PublicationCount PUBLICATIONERRORRESPONSEEXPECTED = PublicationErrorResponseExpected PUBLICATIONERRORTYPEEXPECTED = PublicationErrorTypeExpected  Returns: CONTINUEPUBLICATION ">
                         <PUBLICATION-OC Dialog="dlNodeInventoryUpdate" functionId="dlNodeInventoryUpdate" PUBLICATIONMESSAGE="${PublicationMessage}" PUBLICATIONCOUNT="${PublicationCount}" PUBLICATIONERRORRESPONSEEXPECTED="${PublicationErrorResponseExpected}" PUBLICATIONERRORTYPEEXPECTED="${PublicationErrorTypeExpected}"/>
                    </testStep>
               </jl:while>
          </jl:if>
     </C2CRI-session>
</testprocedure>