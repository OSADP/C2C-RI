<?xml version="1.0" encoding="UTF-8"?>
<!--Title:  TPS-17-dlTrafficNetworkInformationSubscription-OC
       Description:  This test procedure is called by a test case and is used to verify the SUTs support of the dlTrafficNetworkInformationSubscription dialog as an OC using variables provided by the calling test case.  
This procedure supports verification of requirements related to user need 2.3.5.3 [Need to Share Link Data] and is used for both valid and invalid test cases.
       Version/Date: 2012/02/14 22:46:18-->
<testprocedure xmlns="jelly:jameleon" xmlns:jl="jelly:core">
     <test-case-id>${C2CRITestCaseID}</test-case-id>
     <test-case-summary>This test procedure is called by a test case and is used to verify the SUTs support of the dlTrafficNetworkInformationSubscription dialog as an OC using variables provided by the calling test case.  
This procedure supports verification of requirements related to user need 2.3.5.3 [Need to Share Link Data] and is used for both valid and invalid test cases.</test-case-summary>
     <testStep functionId="Step 1 CONFIGURE: Determine the Application Layer Standard that will be used for this test.  RECORD this information as: ApplicationLayerStandard:  ${ApplicationLayerStandard}" passfailResult="False "/>
     <testStep functionId="Step 2 CONFIGURE: Determine whether Restrictions is required by the specification. (NRTM 3.3.5.3.2.5.2.1).  RECORD this information as: TMDD_N17R284_Restrictions_Supported = ${TMDD_N17R284_Restrictions_Supported}" passfailResult="False"/>
     <testStep functionId="Step 3 CONFIGURE: Determine whether Link Name is required by the specification. (NRTM 3.3.5.3.2.5.2.2).  RECORD this information as: TMDD_N17R285_Link_Name_Supported = ${TMDD_N17R285_Link_Name_Supported}" passfailResult="False"/>
     <testStep functionId="Step 4 CONFIGURE: Determine whether Link Direction is required by the specification. (NRTM 3.3.5.3.2.5.2.3).  RECORD this information as: TMDD_N17R286_Link_Direction_Supported = ${TMDD_N17R286_Link_Direction_Supported}" passfailResult="False"/>
     <testStep functionId="Step 5 CONFIGURE: Determine whether Lanes Open is required by the specification. (NRTM 3.3.5.3.2.5.2.4).  RECORD this information as: TMDD_N17R287_Lanes_Open_Supported = ${TMDD_N17R287_Lanes_Open_Supported}" passfailResult="False"/>
     <testStep functionId="Step 6 CONFIGURE: Determine whether Link Priority is required by the specification. (NRTM 3.3.5.3.2.5.2.5).  RECORD this information as: TMDD_N17R288_Link_Priority_Supported = ${TMDD_N17R288_Link_Priority_Supported}" passfailResult="False"/>
     <testStep functionId="Step 7 CONFIGURE: Determine whether Link Restrictions - Axles is required by the specification. (NRTM 3.3.5.3.2.5.2.6).  RECORD this information as: TMDD_N17R289_Link_Restrictions_-_Axles_Supported = ${TMDD_N17R289_Link_Restrictions_-_Axles_Supported}" passfailResult="False"/>
     <testStep functionId="Step 8 CONFIGURE: Determine whether Link Restrictions - Height is required by the specification. (NRTM 3.3.5.3.2.5.2.7).  RECORD this information as: TMDD_N17R290_Link_Restrictions_-_Height_Supported = ${TMDD_N17R290_Link_Restrictions_-_Height_Supported}" passfailResult="False"/>
     <testStep functionId="Step 9 CONFIGURE: Determine whether Link Restrictions - Length is required by the specification. (NRTM 3.3.5.3.2.5.2.8).  RECORD this information as: TMDD_N17R291_Link_Restrictions_-_Length_Supported = ${TMDD_N17R291_Link_Restrictions_-_Length_Supported}" passfailResult="False"/>
     <testStep functionId="Step 10 CONFIGURE: Determine whether Link Restrictions - Weight is required by the specification. (NRTM 3.3.5.3.2.5.2.9).  RECORD this information as: TMDD_N17R292_Link_Restrictions_-_Weight_Supported = ${TMDD_N17R292_Link_Restrictions_-_Weight_Supported}" passfailResult="False"/>
     <testStep functionId="Step 11 CONFIGURE: Determine whether Link Restrictions - Width is required by the specification. (NRTM 3.3.5.3.2.5.2.10).  RECORD this information as: TMDD_N17R293_Link_Restrictions_-_Width_Supported = ${TMDD_N17R293_Link_Restrictions_-_Width_Supported}" passfailResult="False"/>
     <testStep functionId="Step 12 CONFIGURE: Determine whether Link Restrictions - Axle Weight is required by the specification. (NRTM 3.3.5.3.2.5.2.11).  RECORD this information as: TMDD_N17R294_Link_Restrictions_-_Axle_Weight_Supported = ${TMDD_N17R294_Link_Restrictions_-_Axle_Weight_Supported}" passfailResult="False"/>
     <testStep functionId="Step 13 CONFIGURE: Determine whether Link Restriction Units is required by the specification. (NRTM 3.3.5.3.2.5.2.12).  RECORD this information as: TMDD_N17R295_Link_Restriction_Units_Supported = ${TMDD_N17R295_Link_Restriction_Units_Supported}" passfailResult="False"/>
     <testStep functionId="Step 14 CONFIGURE: Determine whether Link Surface Conditions is required by the specification. (NRTM 3.3.5.3.2.5.2.13).  RECORD this information as: TMDD_N17R296_Link_Surface_Conditions_Supported = ${TMDD_N17R296_Link_Surface_Conditions_Supported}" passfailResult="False"/>
     <testStep functionId="Step 15 CONFIGURE: Determine whether Link Saturation is required by the specification. (NRTM 3.3.5.3.2.5.2.14).  RECORD this information as: TMDD_N17R297_Link_Saturation_Supported = ${TMDD_N17R297_Link_Saturation_Supported}" passfailResult="False"/>
     <testStep functionId="Step 16 CONFIGURE: Determine whether Link Saturation Threshold is required by the specification. (NRTM 3.3.5.3.2.5.2.15).  RECORD this information as: TMDD_N17R298_Link_Saturation_Threshold_Supported = ${TMDD_N17R298_Link_Saturation_Threshold_Supported}" passfailResult="False"/>
     <testStep functionId="Step 17 CONFIGURE: Determine whether Link Level of Service is required by the specification. (NRTM 3.3.5.3.2.5.2.16).  RECORD this information as: TMDD_N17R299_Link_Level_of_Service_Supported = ${TMDD_N17R299_Link_Level_of_Service_Supported}" passfailResult="False"/>
     <testStep functionId="Step 18 CONFIGURE: Determine whether Lane Numbers is required by the specification. (NRTM 3.3.5.3.2.5.2.17).  RECORD this information as: TMDD_N17R300_Lane_Numbers_Supported = ${TMDD_N17R300_Lane_Numbers_Supported}" passfailResult="False"/>
     <testStep functionId="Step 19 CONFIGURE: Determine whether Link Data Stored Type is required by the specification. (NRTM 3.3.5.3.2.5.2.18).  RECORD this information as: TMDD_N17R301_Link_Data_Stored_Type_Supported = ${TMDD_N17R301_Link_Data_Stored_Type_Supported}" passfailResult="False"/>
     <testStep functionId="Step 20 CONFIGURE: Determine whether Roadway Event Source is required by the specification. (NRTM 3.3.5.3.2.5.2.19).  RECORD this information as: TMDD_N17R302_Roadway_Event_Source_Supported = ${TMDD_N17R302_Roadway_Event_Source_Supported}" passfailResult="False"/>
     <testStep functionId="Step 21 CONFIGURE: Determine whether Traffic Data Type is required by the specification. (NRTM 3.3.5.3.2.5.2.20).  RECORD this information as: TMDD_N17R303_Traffic_Data_Type_Supported = ${TMDD_N17R303_Traffic_Data_Type_Supported}" passfailResult="False"/>
     <testStep functionId="Step 22 CONFIGURE: Determine whether Link Stops is required by the specification. (NRTM 3.3.5.3.2.5.2.21).  RECORD this information as: TMDD_N17R304_Link_Stops_Supported = ${TMDD_N17R304_Link_Stops_Supported}" passfailResult="False"/>
     <testStep functionId="Step 23 CONFIGURE: Determine whether Link Delay Time is required by the specification. (NRTM 3.3.5.3.2.5.2.22).  RECORD this information as: TMDD_N17R305_Link_Delay_Time_Supported = ${TMDD_N17R305_Link_Delay_Time_Supported}" passfailResult="False"/>
     <testStep functionId="Step 24 CONFIGURE: Determine whether Link Delay Time - Alternate Route is required by the specification. (NRTM 3.3.5.3.2.5.2.23).  RECORD this information as: TMDD_N17R306_Link_Delay_Time_-_Alternate_Route_Supported = ${TMDD_N17R306_Link_Delay_Time_-_Alternate_Route_Supported}" passfailResult="False"/>
     <testStep functionId="Step 25 CONFIGURE: Determine whether Link Headway is required by the specification. (NRTM 3.3.5.3.2.5.2.24).  RECORD this information as: TMDD_N17R307_Link_Headway_Supported = ${TMDD_N17R307_Link_Headway_Supported}" passfailResult="False"/>
     <testStep functionId="Step 26 CONFIGURE: Determine whether Link Travel Time is required by the specification. (NRTM 3.3.5.3.2.5.2.25).  RECORD this information as: TMDD_N17R308_Link_Travel_Time_Supported = ${TMDD_N17R308_Link_Travel_Time_Supported}" passfailResult="False"/>
     <testStep functionId="Step 27 CONFIGURE: Determine whether Link Existing Capacity is required by the specification. (NRTM 3.3.5.3.2.5.2.26).  RECORD this information as: TMDD_N17R309_Link_Existing_Capacity_Supported = ${TMDD_N17R309_Link_Existing_Capacity_Supported}" passfailResult="False"/>
     <testStep functionId="Step 28 CONFIGURE: Determine whether Link Travel Time Increase is required by the specification. (NRTM 3.3.5.3.2.5.2.27).  RECORD this information as: TMDD_N17R310_Link_Travel_Time_Increase_Supported = ${TMDD_N17R310_Link_Travel_Time_Increase_Supported}" passfailResult="False"/>
     <testStep functionId="Step 29 CONFIGURE: Determine whether Link Average Speed is required by the specification. (NRTM 3.3.5.3.2.5.2.28).  RECORD this information as: TMDD_N17R311_Link_Average_Speed_Supported = ${TMDD_N17R311_Link_Average_Speed_Supported}" passfailResult="False"/>
     <testStep functionId="Step 30 CONFIGURE: Determine whether Link Estimated Speed is required by the specification. (NRTM 3.3.5.3.2.5.2.29).  RECORD this information as: TMDD_N17R312_Link_Estimated_Speed_Supported = ${TMDD_N17R312_Link_Estimated_Speed_Supported}" passfailResult="False"/>
     <testStep functionId="Step 31 CONFIGURE: Determine whether Link Speed Limit is required by the specification. (NRTM 3.3.5.3.2.5.2.30).  RECORD this information as: TMDD_N17R313_Link_Speed_Limit_Supported = ${TMDD_N17R313_Link_Speed_Limit_Supported}" passfailResult="False"/>
     <testStep functionId="Step 32 CONFIGURE: Determine whether Link Current Advisory Speed is required by the specification. (NRTM 3.3.5.3.2.5.2.31).  RECORD this information as: TMDD_N17R314_Link_Current_Advisory_Speed_Supported = ${TMDD_N17R314_Link_Current_Advisory_Speed_Supported}" passfailResult="False"/>
     <testStep functionId="Step 33 CONFIGURE: Determine whether Link Truck Speed Limit is required by the specification. (NRTM 3.3.5.3.2.5.2.32).  RECORD this information as: TMDD_N17R315_Link_Truck_Speed_Limit_Supported = ${TMDD_N17R315_Link_Truck_Speed_Limit_Supported}" passfailResult="False"/>
     <testStep functionId="Step 34 CONFIGURE: Determine whether Speed Limit Units is required by the specification. (NRTM 3.3.5.3.2.5.2.33).  RECORD this information as: TMDD_N17R316_Speed_Limit_Units_Supported = ${TMDD_N17R316_Speed_Limit_Units_Supported}" passfailResult="False"/>
     <testStep functionId="Step 35 CONFIGURE: Determine whether Link Density is required by the specification. (NRTM 3.3.5.3.2.5.2.34).  RECORD this information as: TMDD_N17R317_Link_Density_Supported = ${TMDD_N17R317_Link_Density_Supported}" passfailResult="False"/>
     <testStep functionId="Step 36 CONFIGURE: Determine whether Link Occupancy is required by the specification. (NRTM 3.3.5.3.2.5.2.35).  RECORD this information as: TMDD_N17R318_Link_Occupancy_Supported = ${TMDD_N17R318_Link_Occupancy_Supported}" passfailResult="False"/>
     <testStep functionId="Step 37 CONFIGURE: Determine whether Link Volume is required by the specification. (NRTM 3.3.5.3.2.5.2.36).  RECORD this information as: TMDD_N17R319_Link_Volume_Supported = ${TMDD_N17R319_Link_Volume_Supported}" passfailResult="False"/>
     <testStep functionId="Step 38 CONFIGURE: Determine whether Event Description Time is required by the specification. (NRTM 3.3.5.3.2.5.2.37).  RECORD this information as: TMDD_N17R320_Event_Description_Time_Supported = ${TMDD_N17R320_Event_Description_Time_Supported}" passfailResult="False"/>
     <testStep functionId="Step 39 CONFIGURE: Determine whether Status Date and Time Change Information is required by the specification. (NRTM 3.3.5.3.2.5.2.38).  RECORD this information as: TMDD_N17R321_Status_Date_and_Time_Change_Information_Supported = ${TMDD_N17R321_Status_Date_and_Time_Change_Information_Supported}" passfailResult="False"/>
     <C2CRI-session beginSession="true" infoStd="TMDDv3.01" appStd="${ApplicationLayerStandard}" useWSDL="true" testCaseIdentifier="${C2CRITestCaseID}" subscriptionDialog="dlTrafficNetworkInformationSubscription" publicationDialog="dlLinkStatusUpdate" riMode="EC">
          <testStep functionId="Step 40 CONFIGURE: Determine the number of publication message transmissions that will be received within this test.  RECORD this information as: PublicationsToReceive:  ${PublicationsToReceive}" passfailResult="False"/>
          <testStep functionId="Step 41 CONFIGURE: Determine whether an error response message is expected for this test.  RECORD this information as: PublicationErrorResponseExpected:  ${PublicationErrorResponseExpected}" passfailResult="False"/>
          <jl:if test="${PublicationErrorResponseExpected}">
               <testStep functionId="Step 42 CONFIGURE: IF PublicationErrorResponseExpected is true, determine the expected error code response for this test.  RECORD this information as:  PublicationErrorTypeExpected:  ${PublicationErrorTypeExpected}" passfailResult="False"/>
          </jl:if>
          <testStep functionId="Step 43 CONFIGURE: Define the publication response message that will be sent to the SUT.  RECORD this information as: PublicationResponseMessage:  ${PublicationResponseMessage}" passfailResult="False"/>
          <testStep functionId="Step 44 CONFIGURE: Determine whether the Authentication parameters need to be verified within this test.  RECORD this information as: AuthenticationCheck:  ${AuthenticationCheck}" passfailResult="False"/>
          <testStep functionId="Step 45 CONFIGURE: Determine whether the SUT will be allowed access to the information requested in this test.  RECORD this information as: AllowAccess:  ${AllowAccess}" passfailResult="False"/>
          <testStep functionId="Step 46 CONFIGURE: Define the publication message that will be sent to the SUT.  RECORD this information as: SubscriptionMessage:  ${SubscriptionMessage}" passfailResult="False"/>
          <testStep functionId="Step 47 CONFIGURE: Determine whether an error response message is expected for this test.  RECORD this information as: SubscriptionErrorResponseExpected:  ${SubscriptionErrorResponseExpected}" passfailResult="False"/>
          <jl:if test="${SubscriptionErrorResponseExpected}">
               <testStep functionId="Step 48 CONFIGURE: IF SubscriptionErrorResponseExpected is true, determine the expected error code response for this test.  RECORD this information as:  SubscriptionErrorTypeExpected:  ${SubscriptionErrorTypeExpected}" passfailResult="False"/>
          </jl:if>
          <testStep functionId="Step 49 SUBSCRIPTION-EC with the following parameters:   DIALOG=dlTrafficNetworkInformationSubscription SUBSCRIPTIONMESSAGE = SubscriptionMessage SUBSCRIPTIONERRORRESPONSEEXPECTED = SubscriptionErrorResponseExpected SUBSCRIPTIONERRORTYPEEXPECTED = SubscriptionErrorTypeExpected  Returns: CONTINUEPUBLICATION ">
               <SUBSCRIPTION-EC Dialog="dlTrafficNetworkInformationSubscription" functionId="dlTrafficNetworkInformationSubscription" SUBSCRIPTIONMESSAGE="${SubscriptionMessage}" SUBSCRIPTIONERRORRESPONSEEXPECTED="${SubscriptionErrorResponseExpected}" SUBSCRIPTIONERRORTYPEEXPECTED="${SubscriptionErrorTypeExpected}"/>
          </testStep>
          <testStep functionId="Step 50 IF SubscriptionErrorResponseExpected is not equal to TRUE THEN CONTINUE, OTHERWISE skip the following substeps." passfailResult="False"/>
          <jl:if test="${!SubscriptionErrorResponseExpected}">
               <testStep functionId="Step 50.1 WHILE CONTINUEPUBLICATION is equal to TRUE then CONTINUE, OTHERWISE skip the following substeps."/>
               <jl:while test="${CONTINUEPUBLICATION}">
                    <testStep functionId="Step 50.1.1 PUBLICATION-EC-RECEIVE with the following parameters:   DIALOG=dlLinkStatusUpdate PUBLICATIONSTORECEIVE = PublicationsToReceive PUBLICATIONERRORRESPONSEEXPECTED = PublicationErrorResponseExpected PUBLICATIONERRORTYPEEXPECTED = PublicationErrorTypeExpected AUTHENTICATIONCHECK = AuthenticationCheck ALLOWACCESS = AllowAccess  Returns: CONTINUEPUBLICATION ">
                         <PUBLICATION-EC-RECEIVE Dialog="dlLinkStatusUpdate" functionId="dlLinkStatusUpdate" PUBLICATIONSTORECEIVE="${PublicationsToReceive}" PUBLICATIONERRORRESPONSEEXPECTED="${PublicationErrorResponseExpected}" PUBLICATIONERRORTYPEEXPECTED="${PublicationErrorTypeExpected}" AUTHENTICATIONCHECK="${AuthenticationCheck}" ALLOWACCESS="${AllowAccess}"/>
                    </testStep>
                    <testStep functionId="Step 50.1.2 IF PublicationErrorResponseExpected is not equal to TRUE THEN CONTINUE, OTHERWISE skip the following substeps." passfailResult="False"/>
                    <jl:if test="${!PublicationErrorResponseExpected}">
                         <testStep functionId="Step 50.1.2.1 IF TMDD_N17R284_Restrictions_Supported is equal to TRUE THEN CONTINUE; OTHERWISE skip the following substeps." passFailResult="False"/>
                         <jl:if test="${TMDD_N17R284_Restrictions_Supported}">
                              <testStep functionId="Step 50.1.2.1.1 VERIFY that element restrictions exists within each instance of linkStatusMsg.link-status-item" passfailResult="True">
                                   <ri-MessageVerify msgType="RESPONSE" elementName="restrictions" instanceName="tmdd:linkStatusMsg.link-status-item" functionId="Looking for linkStatusMsg.link-status-item.restrictions"/>
                              </testStep>
                         </jl:if>
                         <testStep functionId="Step 50.1.2.2 IF TMDD_N17R285_Link_Name_Supported is equal to TRUE THEN CONTINUE; OTHERWISE skip the following substeps." passFailResult="False"/>
                         <jl:if test="${TMDD_N17R285_Link_Name_Supported}">
                              <testStep functionId="Step 50.1.2.2.1 VERIFY that element link-name exists within each instance of linkStatusMsg.link-status-item.link-list.link" passfailResult="True">
                                   <ri-MessageVerify msgType="RESPONSE" elementName="link-name" instanceName="tmdd:linkStatusMsg.link-status-item.link-list.link" functionId="Looking for linkStatusMsg.link-status-item.link-list.link.link-name"/>
                              </testStep>
                         </jl:if>
                         <testStep functionId="Step 50.1.2.3 IF TMDD_N17R286_Link_Direction_Supported is equal to TRUE THEN CONTINUE; OTHERWISE skip the following substeps." passFailResult="False"/>
                         <jl:if test="${TMDD_N17R286_Link_Direction_Supported}">
                              <testStep functionId="Step 50.1.2.3.1 VERIFY that element link-direction exists within each instance of linkStatusMsg.link-status-item.link-list.link" passfailResult="True">
                                   <ri-MessageVerify msgType="RESPONSE" elementName="link-direction" instanceName="tmdd:linkStatusMsg.link-status-item.link-list.link" functionId="Looking for linkStatusMsg.link-status-item.link-list.link.link-direction"/>
                              </testStep>
                         </jl:if>
                         <testStep functionId="Step 50.1.2.4 IF TMDD_N17R287_Lanes_Open_Supported is equal to TRUE THEN CONTINUE; OTHERWISE skip the following substeps." passFailResult="False"/>
                         <jl:if test="${TMDD_N17R287_Lanes_Open_Supported}">
                              <testStep functionId="Step 50.1.2.4.1 VERIFY that element lanes-number-open exists within each instance of linkStatusMsg.link-status-item.link-list.link" passfailResult="True">
                                   <ri-MessageVerify msgType="RESPONSE" elementName="lanes-number-open" instanceName="tmdd:linkStatusMsg.link-status-item.link-list.link" functionId="Looking for linkStatusMsg.link-status-item.link-list.link.lanes-number-open"/>
                              </testStep>
                         </jl:if>
                         <testStep functionId="Step 50.1.2.5 IF TMDD_N17R288_Link_Priority_Supported is equal to TRUE THEN CONTINUE; OTHERWISE skip the following substeps." passFailResult="False"/>
                         <jl:if test="${TMDD_N17R288_Link_Priority_Supported}">
                              <testStep functionId="Step 50.1.2.5.1 VERIFY that element priority-type exists within each instance of linkStatusMsg.link-status-item.link-list.link" passfailResult="True">
                                   <ri-MessageVerify msgType="RESPONSE" elementName="priority-type" instanceName="tmdd:linkStatusMsg.link-status-item.link-list.link" functionId="Looking for linkStatusMsg.link-status-item.link-list.link.priority-type"/>
                              </testStep>
                         </jl:if>
                         <testStep functionId="Step 50.1.2.6 IF TMDD_N17R289_Link_Restrictions_-_Axles_Supported is equal to TRUE THEN CONTINUE; OTHERWISE skip the following substeps." passFailResult="False"/>
                         <jl:if test="${TMDD_N17R289_Link_Restrictions_-_Axles_Supported}">
                              <testStep functionId="Step 50.1.2.6.1 VERIFY that element restriction-axle-count exists within each instance of linkStatusMsg.link-status-item.link-list.link" passfailResult="True">
                                   <ri-MessageVerify msgType="RESPONSE" elementName="restriction-axle-count" instanceName="tmdd:linkStatusMsg.link-status-item.link-list.link" functionId="Looking for linkStatusMsg.link-status-item.link-list.link.restriction-axle-count"/>
                              </testStep>
                         </jl:if>
                         <testStep functionId="Step 50.1.2.7 IF TMDD_N17R290_Link_Restrictions_-_Height_Supported is equal to TRUE THEN CONTINUE; OTHERWISE skip the following substeps." passFailResult="False"/>
                         <jl:if test="${TMDD_N17R290_Link_Restrictions_-_Height_Supported}">
                              <testStep functionId="Step 50.1.2.7.1 VERIFY that element restriction-height exists within each instance of linkStatusMsg.link-status-item.link-list.link" passfailResult="True">
                                   <ri-MessageVerify msgType="RESPONSE" elementName="restriction-height" instanceName="tmdd:linkStatusMsg.link-status-item.link-list.link" functionId="Looking for linkStatusMsg.link-status-item.link-list.link.restriction-height"/>
                              </testStep>
                         </jl:if>
                         <testStep functionId="Step 50.1.2.8 IF TMDD_N17R291_Link_Restrictions_-_Length_Supported is equal to TRUE THEN CONTINUE; OTHERWISE skip the following substeps." passFailResult="False"/>
                         <jl:if test="${TMDD_N17R291_Link_Restrictions_-_Length_Supported}">
                              <testStep functionId="Step 50.1.2.8.1 VERIFY that element restriction-length exists within each instance of linkStatusMsg.link-status-item.link-list.link" passfailResult="True">
                                   <ri-MessageVerify msgType="RESPONSE" elementName="restriction-length" instanceName="tmdd:linkStatusMsg.link-status-item.link-list.link" functionId="Looking for linkStatusMsg.link-status-item.link-list.link.restriction-length"/>
                              </testStep>
                         </jl:if>
                         <testStep functionId="Step 50.1.2.9 IF TMDD_N17R292_Link_Restrictions_-_Weight_Supported is equal to TRUE THEN CONTINUE; OTHERWISE skip the following substeps." passFailResult="False"/>
                         <jl:if test="${TMDD_N17R292_Link_Restrictions_-_Weight_Supported}">
                              <testStep functionId="Step 50.1.2.9.1 VERIFY that element restriction-weight exists within each instance of linkStatusMsg.link-status-item.link-list.link" passfailResult="True">
                                   <ri-MessageVerify msgType="RESPONSE" elementName="restriction-weight" instanceName="tmdd:linkStatusMsg.link-status-item.link-list.link" functionId="Looking for linkStatusMsg.link-status-item.link-list.link.restriction-weight"/>
                              </testStep>
                         </jl:if>
                         <testStep functionId="Step 50.1.2.10 IF TMDD_N17R293_Link_Restrictions_-_Width_Supported is equal to TRUE THEN CONTINUE; OTHERWISE skip the following substeps." passFailResult="False"/>
                         <jl:if test="${TMDD_N17R293_Link_Restrictions_-_Width_Supported}">
                              <testStep functionId="Step 50.1.2.10.1 VERIFY that element restriction-width exists within each instance of linkStatusMsg.link-status-item.link-list.link" passfailResult="True">
                                   <ri-MessageVerify msgType="RESPONSE" elementName="restriction-width" instanceName="tmdd:linkStatusMsg.link-status-item.link-list.link" functionId="Looking for linkStatusMsg.link-status-item.link-list.link.restriction-width"/>
                              </testStep>
                         </jl:if>
                         <testStep functionId="Step 50.1.2.11 IF TMDD_N17R294_Link_Restrictions_-_Axle_Weight_Supported is equal to TRUE THEN CONTINUE; OTHERWISE skip the following substeps." passFailResult="False"/>
                         <jl:if test="${TMDD_N17R294_Link_Restrictions_-_Axle_Weight_Supported}">
                              <testStep functionId="Step 50.1.2.11.1 VERIFY that element restriction-weight-axle exists within each instance of linkStatusMsg.link-status-item.link-list.link" passfailResult="True">
                                   <ri-MessageVerify msgType="RESPONSE" elementName="restriction-weight-axle" instanceName="tmdd:linkStatusMsg.link-status-item.link-list.link" functionId="Looking for linkStatusMsg.link-status-item.link-list.link.restriction-weight-axle"/>
                              </testStep>
                         </jl:if>
                         <testStep functionId="Step 50.1.2.12 IF TMDD_N17R295_Link_Restriction_Units_Supported is equal to TRUE THEN CONTINUE; OTHERWISE skip the following substeps." passFailResult="False"/>
                         <jl:if test="${TMDD_N17R295_Link_Restriction_Units_Supported}">
                              <testStep functionId="Step 50.1.2.12.1 VERIFY that element restriction-units exists within each instance of linkStatusMsg.link-status-item.link-list.link" passfailResult="True">
                                   <ri-MessageVerify msgType="RESPONSE" elementName="restriction-units" instanceName="tmdd:linkStatusMsg.link-status-item.link-list.link" functionId="Looking for linkStatusMsg.link-status-item.link-list.link.restriction-units"/>
                              </testStep>
                         </jl:if>
                         <testStep functionId="Step 50.1.2.13 IF TMDD_N17R296_Link_Surface_Conditions_Supported is equal to TRUE THEN CONTINUE; OTHERWISE skip the following substeps." passFailResult="False"/>
                         <jl:if test="${TMDD_N17R296_Link_Surface_Conditions_Supported}">
                              <testStep functionId="Step 50.1.2.13.1 VERIFY that element surface-condition exists within each instance of linkStatusMsg.link-status-item.link-list.link" passfailResult="True">
                                   <ri-MessageVerify msgType="RESPONSE" elementName="surface-condition" instanceName="tmdd:linkStatusMsg.link-status-item.link-list.link" functionId="Looking for linkStatusMsg.link-status-item.link-list.link.surface-condition"/>
                              </testStep>
                         </jl:if>
                         <testStep functionId="Step 50.1.2.14 IF TMDD_N17R297_Link_Saturation_Supported is equal to TRUE THEN CONTINUE; OTHERWISE skip the following substeps." passFailResult="False"/>
                         <jl:if test="${TMDD_N17R297_Link_Saturation_Supported}">
                              <testStep functionId="Step 50.1.2.14.1 VERIFY that element saturation-flag exists within each instance of linkStatusMsg.link-status-item.link-list.link" passfailResult="True">
                                   <ri-MessageVerify msgType="RESPONSE" elementName="saturation-flag" instanceName="tmdd:linkStatusMsg.link-status-item.link-list.link" functionId="Looking for linkStatusMsg.link-status-item.link-list.link.saturation-flag"/>
                              </testStep>
                         </jl:if>
                         <testStep functionId="Step 50.1.2.15 IF TMDD_N17R298_Link_Saturation_Threshold_Supported is equal to TRUE THEN CONTINUE; OTHERWISE skip the following substeps." passFailResult="False"/>
                         <jl:if test="${TMDD_N17R298_Link_Saturation_Threshold_Supported}">
                              <testStep functionId="Step 50.1.2.15.1 VERIFY that element oversaturated-threshold exists within each instance of linkStatusMsg.link-status-item.link-list.link" passfailResult="True">
                                   <ri-MessageVerify msgType="RESPONSE" elementName="oversaturated-threshold" instanceName="tmdd:linkStatusMsg.link-status-item.link-list.link" functionId="Looking for linkStatusMsg.link-status-item.link-list.link.oversaturated-threshold"/>
                              </testStep>
                         </jl:if>
                         <testStep functionId="Step 50.1.2.16 IF TMDD_N17R299_Link_Level_of_Service_Supported is equal to TRUE THEN CONTINUE; OTHERWISE skip the following substeps." passFailResult="False"/>
                         <jl:if test="${TMDD_N17R299_Link_Level_of_Service_Supported}">
                              <testStep functionId="Step 50.1.2.16.1 VERIFY that element level-of-service exists within each instance of linkStatusMsg.link-status-item.link-list.link" passfailResult="True">
                                   <ri-MessageVerify msgType="RESPONSE" elementName="level-of-service" instanceName="tmdd:linkStatusMsg.link-status-item.link-list.link" functionId="Looking for linkStatusMsg.link-status-item.link-list.link.level-of-service"/>
                              </testStep>
                         </jl:if>
                         <testStep functionId="Step 50.1.2.17 IF TMDD_N17R300_Lane_Numbers_Supported is equal to TRUE THEN CONTINUE; OTHERWISE skip the following substeps." passFailResult="False"/>
                         <jl:if test="${TMDD_N17R300_Lane_Numbers_Supported}">
                              <testStep functionId="Step 50.1.2.17.1 VERIFY that element lane-numbers exists within each instance of linkStatusMsg.link-status-item.link-list.link" passfailResult="True">
                                   <ri-MessageVerify msgType="RESPONSE" elementName="lane-numbers" instanceName="tmdd:linkStatusMsg.link-status-item.link-list.link" functionId="Looking for linkStatusMsg.link-status-item.link-list.link.lane-numbers"/>
                              </testStep>
                         </jl:if>
                         <testStep functionId="Step 50.1.2.18 IF TMDD_N17R301_Link_Data_Stored_Type_Supported is equal to TRUE THEN CONTINUE; OTHERWISE skip the following substeps." passFailResult="False"/>
                         <jl:if test="${TMDD_N17R301_Link_Data_Stored_Type_Supported}">
                              <testStep functionId="Step 50.1.2.18.1 VERIFY that element link-data-stored exists within each instance of linkStatusMsg.link-status-item.link-list.link" passfailResult="True">
                                   <ri-MessageVerify msgType="RESPONSE" elementName="link-data-stored" instanceName="tmdd:linkStatusMsg.link-status-item.link-list.link" functionId="Looking for linkStatusMsg.link-status-item.link-list.link.link-data-stored"/>
                              </testStep>
                         </jl:if>
                         <testStep functionId="Step 50.1.2.19 IF TMDD_N17R302_Roadway_Event_Source_Supported is equal to TRUE THEN CONTINUE; OTHERWISE skip the following substeps." passFailResult="False"/>
                         <jl:if test="${TMDD_N17R302_Roadway_Event_Source_Supported}">
                              <testStep functionId="Step 50.1.2.19.1 VERIFY that element detection-method exists within each instance of linkStatusMsg.link-status-item.link-list.link" passfailResult="True">
                                   <ri-MessageVerify msgType="RESPONSE" elementName="detection-method" instanceName="tmdd:linkStatusMsg.link-status-item.link-list.link" functionId="Looking for linkStatusMsg.link-status-item.link-list.link.detection-method"/>
                              </testStep>
                         </jl:if>
                         <testStep functionId="Step 50.1.2.20 IF TMDD_N17R303_Traffic_Data_Type_Supported is equal to TRUE THEN CONTINUE; OTHERWISE skip the following substeps." passFailResult="False"/>
                         <jl:if test="${TMDD_N17R303_Traffic_Data_Type_Supported}">
                              <testStep functionId="Step 50.1.2.20.1 VERIFY that element link-traffic-data-algorithm exists within each instance of linkStatusMsg.link-status-item.link-list.link" passfailResult="True">
                                   <ri-MessageVerify msgType="RESPONSE" elementName="link-traffic-data-algorithm" instanceName="tmdd:linkStatusMsg.link-status-item.link-list.link" functionId="Looking for linkStatusMsg.link-status-item.link-list.link.link-traffic-data-algorithm"/>
                              </testStep>
                         </jl:if>
                         <testStep functionId="Step 50.1.2.21 IF TMDD_N17R304_Link_Stops_Supported is equal to TRUE THEN CONTINUE; OTHERWISE skip the following substeps." passFailResult="False"/>
                         <jl:if test="${TMDD_N17R304_Link_Stops_Supported}">
                              <testStep functionId="Step 50.1.2.21.1 VERIFY that element stops exists within each instance of linkStatusMsg.link-status-item.link-list.link" passfailResult="True">
                                   <ri-MessageVerify msgType="RESPONSE" elementName="stops" instanceName="tmdd:linkStatusMsg.link-status-item.link-list.link" functionId="Looking for linkStatusMsg.link-status-item.link-list.link.stops"/>
                              </testStep>
                         </jl:if>
                         <testStep functionId="Step 50.1.2.22 IF TMDD_N17R305_Link_Delay_Time_Supported is equal to TRUE THEN CONTINUE; OTHERWISE skip the following substeps." passFailResult="False"/>
                         <jl:if test="${TMDD_N17R305_Link_Delay_Time_Supported}">
                              <testStep functionId="Step 50.1.2.22.1 VERIFY that element delay exists within each instance of linkStatusMsg.link-status-item.link-list.link" passfailResult="True">
                                   <ri-MessageVerify msgType="RESPONSE" elementName="delay" instanceName="tmdd:linkStatusMsg.link-status-item.link-list.link" functionId="Looking for linkStatusMsg.link-status-item.link-list.link.delay"/>
                              </testStep>
                         </jl:if>
                         <testStep functionId="Step 50.1.2.23 IF TMDD_N17R306_Link_Delay_Time_-_Alternate_Route_Supported is equal to TRUE THEN CONTINUE; OTHERWISE skip the following substeps." passFailResult="False"/>
                         <jl:if test="${TMDD_N17R306_Link_Delay_Time_-_Alternate_Route_Supported}">
                              <testStep functionId="Step 50.1.2.23.1 VERIFY that element alternate-route-delay exists within each instance of linkStatusMsg.link-status-item.link-list.link" passfailResult="True">
                                   <ri-MessageVerify msgType="RESPONSE" elementName="alternate-route-delay" instanceName="tmdd:linkStatusMsg.link-status-item.link-list.link" functionId="Looking for linkStatusMsg.link-status-item.link-list.link.alternate-route-delay"/>
                              </testStep>
                         </jl:if>
                         <testStep functionId="Step 50.1.2.24 IF TMDD_N17R307_Link_Headway_Supported is equal to TRUE THEN CONTINUE; OTHERWISE skip the following substeps." passFailResult="False"/>
                         <jl:if test="${TMDD_N17R307_Link_Headway_Supported}">
                              <testStep functionId="Step 50.1.2.24.1 VERIFY that element headway exists within each instance of linkStatusMsg.link-status-item.link-list.link" passfailResult="True">
                                   <ri-MessageVerify msgType="RESPONSE" elementName="headway" instanceName="tmdd:linkStatusMsg.link-status-item.link-list.link" functionId="Looking for linkStatusMsg.link-status-item.link-list.link.headway"/>
                              </testStep>
                         </jl:if>
                         <testStep functionId="Step 50.1.2.25 IF TMDD_N17R308_Link_Travel_Time_Supported is equal to TRUE THEN CONTINUE; OTHERWISE skip the following substeps." passFailResult="False"/>
                         <jl:if test="${TMDD_N17R308_Link_Travel_Time_Supported}">
                              <testStep functionId="Step 50.1.2.25.1 VERIFY that element travel-time exists within each instance of linkStatusMsg.link-status-item.link-list.link" passfailResult="True">
                                   <ri-MessageVerify msgType="RESPONSE" elementName="travel-time" instanceName="tmdd:linkStatusMsg.link-status-item.link-list.link" functionId="Looking for linkStatusMsg.link-status-item.link-list.link.travel-time"/>
                              </testStep>
                         </jl:if>
                         <testStep functionId="Step 50.1.2.26 IF TMDD_N17R309_Link_Existing_Capacity_Supported is equal to TRUE THEN CONTINUE; OTHERWISE skip the following substeps." passFailResult="False"/>
                         <jl:if test="${TMDD_N17R309_Link_Existing_Capacity_Supported}">
                              <testStep functionId="Step 50.1.2.26.1 VERIFY that element capacity-existing exists within each instance of linkStatusMsg.link-status-item.link-list.link" passfailResult="True">
                                   <ri-MessageVerify msgType="RESPONSE" elementName="capacity-existing" instanceName="tmdd:linkStatusMsg.link-status-item.link-list.link" functionId="Looking for linkStatusMsg.link-status-item.link-list.link.capacity-existing"/>
                              </testStep>
                         </jl:if>
                         <testStep functionId="Step 50.1.2.27 IF TMDD_N17R310_Link_Travel_Time_Increase_Supported is equal to TRUE THEN CONTINUE; OTHERWISE skip the following substeps." passFailResult="False"/>
                         <jl:if test="${TMDD_N17R310_Link_Travel_Time_Increase_Supported}">
                              <testStep functionId="Step 50.1.2.27.1 VERIFY that element travel-time-increase exists within each instance of linkStatusMsg.link-status-item.link-list.link" passfailResult="True">
                                   <ri-MessageVerify msgType="RESPONSE" elementName="travel-time-increase" instanceName="tmdd:linkStatusMsg.link-status-item.link-list.link" functionId="Looking for linkStatusMsg.link-status-item.link-list.link.travel-time-increase"/>
                              </testStep>
                         </jl:if>
                         <testStep functionId="Step 50.1.2.28 IF TMDD_N17R311_Link_Average_Speed_Supported is equal to TRUE THEN CONTINUE; OTHERWISE skip the following substeps." passFailResult="False"/>
                         <jl:if test="${TMDD_N17R311_Link_Average_Speed_Supported}">
                              <testStep functionId="Step 50.1.2.28.1 VERIFY that element speed-average exists within each instance of linkStatusMsg.link-status-item.link-list.link" passfailResult="True">
                                   <ri-MessageVerify msgType="RESPONSE" elementName="speed-average" instanceName="tmdd:linkStatusMsg.link-status-item.link-list.link" functionId="Looking for linkStatusMsg.link-status-item.link-list.link.speed-average"/>
                              </testStep>
                         </jl:if>
                         <testStep functionId="Step 50.1.2.29 IF TMDD_N17R312_Link_Estimated_Speed_Supported is equal to TRUE THEN CONTINUE; OTHERWISE skip the following substeps." passFailResult="False"/>
                         <jl:if test="${TMDD_N17R312_Link_Estimated_Speed_Supported}">
                              <testStep functionId="Step 50.1.2.29.1 VERIFY that element speed-vehicle-estimated exists within each instance of linkStatusMsg.link-status-item.link-list.link" passfailResult="True">
                                   <ri-MessageVerify msgType="RESPONSE" elementName="speed-vehicle-estimated" instanceName="tmdd:linkStatusMsg.link-status-item.link-list.link" functionId="Looking for linkStatusMsg.link-status-item.link-list.link.speed-vehicle-estimated"/>
                              </testStep>
                         </jl:if>
                         <testStep functionId="Step 50.1.2.30 IF TMDD_N17R313_Link_Speed_Limit_Supported is equal to TRUE THEN CONTINUE; OTHERWISE skip the following substeps." passFailResult="False"/>
                         <jl:if test="${TMDD_N17R313_Link_Speed_Limit_Supported}">
                              <testStep functionId="Step 50.1.2.30.1 VERIFY that element speed-limit exists within each instance of linkStatusMsg.link-status-item.link-list.link" passfailResult="True">
                                   <ri-MessageVerify msgType="RESPONSE" elementName="speed-limit" instanceName="tmdd:linkStatusMsg.link-status-item.link-list.link" functionId="Looking for linkStatusMsg.link-status-item.link-list.link.speed-limit"/>
                              </testStep>
                         </jl:if>
                         <testStep functionId="Step 50.1.2.31 IF TMDD_N17R314_Link_Current_Advisory_Speed_Supported is equal to TRUE THEN CONTINUE; OTHERWISE skip the following substeps." passFailResult="False"/>
                         <jl:if test="${TMDD_N17R314_Link_Current_Advisory_Speed_Supported}">
                              <testStep functionId="Step 50.1.2.31.1 VERIFY that element advisory-speed-limit exists within each instance of linkStatusMsg.link-status-item.link-list.link" passfailResult="True">
                                   <ri-MessageVerify msgType="RESPONSE" elementName="advisory-speed-limit" instanceName="tmdd:linkStatusMsg.link-status-item.link-list.link" functionId="Looking for linkStatusMsg.link-status-item.link-list.link.advisory-speed-limit"/>
                              </testStep>
                         </jl:if>
                         <testStep functionId="Step 50.1.2.32 IF TMDD_N17R315_Link_Truck_Speed_Limit_Supported is equal to TRUE THEN CONTINUE; OTHERWISE skip the following substeps." passFailResult="False"/>
                         <jl:if test="${TMDD_N17R315_Link_Truck_Speed_Limit_Supported}">
                              <testStep functionId="Step 50.1.2.32.1 VERIFY that element truck-speed-limit exists within each instance of linkStatusMsg.link-status-item.link-list.link" passfailResult="True">
                                   <ri-MessageVerify msgType="RESPONSE" elementName="truck-speed-limit" instanceName="tmdd:linkStatusMsg.link-status-item.link-list.link" functionId="Looking for linkStatusMsg.link-status-item.link-list.link.truck-speed-limit"/>
                              </testStep>
                         </jl:if>
                         <testStep functionId="Step 50.1.2.33 IF TMDD_N17R316_Speed_Limit_Units_Supported is equal to TRUE THEN CONTINUE; OTHERWISE skip the following substeps." passFailResult="False"/>
                         <jl:if test="${TMDD_N17R316_Speed_Limit_Units_Supported}">
                              <testStep functionId="Step 50.1.2.33.1 VERIFY that element speed-limit-units exists within each instance of linkStatusMsg.link-status-item.link-list.link" passfailResult="True">
                                   <ri-MessageVerify msgType="RESPONSE" elementName="speed-limit-units" instanceName="tmdd:linkStatusMsg.link-status-item.link-list.link" functionId="Looking for linkStatusMsg.link-status-item.link-list.link.speed-limit-units"/>
                              </testStep>
                         </jl:if>
                         <testStep functionId="Step 50.1.2.34 IF TMDD_N17R317_Link_Density_Supported is equal to TRUE THEN CONTINUE; OTHERWISE skip the following substeps." passFailResult="False"/>
                         <jl:if test="${TMDD_N17R317_Link_Density_Supported}">
                              <testStep functionId="Step 50.1.2.34.1 VERIFY that element density exists within each instance of linkStatusMsg.link-status-item.link-list.link" passfailResult="True">
                                   <ri-MessageVerify msgType="RESPONSE" elementName="density" instanceName="tmdd:linkStatusMsg.link-status-item.link-list.link" functionId="Looking for linkStatusMsg.link-status-item.link-list.link.density"/>
                              </testStep>
                         </jl:if>
                         <testStep functionId="Step 50.1.2.35 IF TMDD_N17R318_Link_Occupancy_Supported is equal to TRUE THEN CONTINUE; OTHERWISE skip the following substeps." passFailResult="False"/>
                         <jl:if test="${TMDD_N17R318_Link_Occupancy_Supported}">
                              <testStep functionId="Step 50.1.2.35.1 VERIFY that element occupancy exists within each instance of linkStatusMsg.link-status-item.link-list.link" passfailResult="True">
                                   <ri-MessageVerify msgType="RESPONSE" elementName="occupancy" instanceName="tmdd:linkStatusMsg.link-status-item.link-list.link" functionId="Looking for linkStatusMsg.link-status-item.link-list.link.occupancy"/>
                              </testStep>
                         </jl:if>
                         <testStep functionId="Step 50.1.2.36 IF TMDD_N17R319_Link_Volume_Supported is equal to TRUE THEN CONTINUE; OTHERWISE skip the following substeps." passFailResult="False"/>
                         <jl:if test="${TMDD_N17R319_Link_Volume_Supported}">
                              <testStep functionId="Step 50.1.2.36.1 VERIFY that element volume exists within each instance of linkStatusMsg.link-status-item.link-list.link" passfailResult="True">
                                   <ri-MessageVerify msgType="RESPONSE" elementName="volume" instanceName="tmdd:linkStatusMsg.link-status-item.link-list.link" functionId="Looking for linkStatusMsg.link-status-item.link-list.link.volume"/>
                              </testStep>
                         </jl:if>
                         <testStep functionId="Step 50.1.2.37 IF TMDD_N17R320_Event_Description_Time_Supported is equal to TRUE THEN CONTINUE; OTHERWISE skip the following substeps." passFailResult="False"/>
                         <jl:if test="${TMDD_N17R320_Event_Description_Time_Supported}">
                              <testStep functionId="Step 50.1.2.37.1 VERIFY that element event-description-time exists within each instance of linkStatusMsg.link-status-item.link-list.link" passfailResult="True">
                                   <ri-MessageVerify msgType="RESPONSE" elementName="event-description-time" instanceName="tmdd:linkStatusMsg.link-status-item.link-list.link" functionId="Looking for linkStatusMsg.link-status-item.link-list.link.event-description-time"/>
                              </testStep>
                         </jl:if>
                         <testStep functionId="Step 50.1.2.38 IF TMDD_N17R321_Status_Date_and_Time_Change_Information_Supported is equal to TRUE THEN CONTINUE; OTHERWISE skip the following substeps." passFailResult="False"/>
                         <jl:if test="${TMDD_N17R321_Status_Date_and_Time_Change_Information_Supported}">
                              <testStep functionId="Step 50.1.2.38.1 VERIFY that element last-update-time exists within each instance of linkStatusMsg.link-status-item.link-list.link" passfailResult="True">
                                   <ri-MessageVerify msgType="RESPONSE" elementName="last-update-time" instanceName="tmdd:linkStatusMsg.link-status-item.link-list.link" functionId="Looking for linkStatusMsg.link-status-item.link-list.link.last-update-time"/>
                              </testStep>
                              <testStep functionId="Step 50.1.2.38.2 VERIFY that element last-update-time exists within each instance of linkStatusMsg.link-status-item.organization-information" passfailResult="True">
                                   <ri-MessageVerify msgType="RESPONSE" elementName="last-update-time" instanceName="tmdd:linkStatusMsg.link-status-item.organization-information" functionId="Looking for linkStatusMsg.link-status-item.organization-information.last-update-time"/>
                              </testStep>
                         </jl:if>
                         <testStep functionId="Step 50.1.2.39 VERIFY that the values within the REQUEST message are correct per the TMDD standard and known operational conditions.">
                              <AUTO-VERIFY-MESSAGE functionId="Automatically Verify message content" msgName="REQUEST" verificationSpec="${VerificationSpec}"/>
                              <USER-VERIFY-MESSAGE functionId="The User Verifies the message content" msgName="REQUEST" optionList="TMDD_N17R284_Restrictions_Supported,restrictions,tmdd:linkStatusMsg.link-status-item;TMDD_N17R285_Link_Name_Supported,link-name,tmdd:linkStatusMsg.link-status-item.link-list.link;TMDD_N17R286_Link_Direction_Supported,link-direction,tmdd:linkStatusMsg.link-status-item.link-list.link;TMDD_N17R287_Lanes_Open_Supported,lanes-number-open,tmdd:linkStatusMsg.link-status-item.link-list.link;TMDD_N17R288_Link_Priority_Supported,priority-type,tmdd:linkStatusMsg.link-status-item.link-list.link;TMDD_N17R289_Link_Restrictions_-_Axles_Supported,restriction-axle-count,tmdd:linkStatusMsg.link-status-item.link-list.link;TMDD_N17R290_Link_Restrictions_-_Height_Supported,restriction-height,tmdd:linkStatusMsg.link-status-item.link-list.link;TMDD_N17R291_Link_Restrictions_-_Length_Supported,restriction-length,tmdd:linkStatusMsg.link-status-item.link-list.link;TMDD_N17R292_Link_Restrictions_-_Weight_Supported,restriction-weight,tmdd:linkStatusMsg.link-status-item.link-list.link;TMDD_N17R293_Link_Restrictions_-_Width_Supported,restriction-width,tmdd:linkStatusMsg.link-status-item.link-list.link;TMDD_N17R294_Link_Restrictions_-_Axle_Weight_Supported,restriction-weight-axle,tmdd:linkStatusMsg.link-status-item.link-list.link;TMDD_N17R295_Link_Restriction_Units_Supported,restriction-units,tmdd:linkStatusMsg.link-status-item.link-list.link;TMDD_N17R296_Link_Surface_Conditions_Supported,surface-condition,tmdd:linkStatusMsg.link-status-item.link-list.link;TMDD_N17R297_Link_Saturation_Supported,saturation-flag,tmdd:linkStatusMsg.link-status-item.link-list.link;TMDD_N17R298_Link_Saturation_Threshold_Supported,oversaturated-threshold,tmdd:linkStatusMsg.link-status-item.link-list.link;TMDD_N17R299_Link_Level_of_Service_Supported,level-of-service,tmdd:linkStatusMsg.link-status-item.link-list.link;TMDD_N17R300_Lane_Numbers_Supported,lane-numbers,tmdd:linkStatusMsg.link-status-item.link-list.link;TMDD_N17R301_Link_Data_Stored_Type_Supported,link-data-stored,tmdd:linkStatusMsg.link-status-item.link-list.link;TMDD_N17R302_Roadway_Event_Source_Supported,detection-method,tmdd:linkStatusMsg.link-status-item.link-list.link;TMDD_N17R303_Traffic_Data_Type_Supported,link-traffic-data-algorithm,tmdd:linkStatusMsg.link-status-item.link-list.link;TMDD_N17R304_Link_Stops_Supported,stops,tmdd:linkStatusMsg.link-status-item.link-list.link;TMDD_N17R305_Link_Delay_Time_Supported,delay,tmdd:linkStatusMsg.link-status-item.link-list.link;TMDD_N17R306_Link_Delay_Time_-_Alternate_Route_Supported,alternate-route-delay,tmdd:linkStatusMsg.link-status-item.link-list.link;TMDD_N17R307_Link_Headway_Supported,headway,tmdd:linkStatusMsg.link-status-item.link-list.link;TMDD_N17R308_Link_Travel_Time_Supported,travel-time,tmdd:linkStatusMsg.link-status-item.link-list.link;TMDD_N17R309_Link_Existing_Capacity_Supported,capacity-existing,tmdd:linkStatusMsg.link-status-item.link-list.link;TMDD_N17R310_Link_Travel_Time_Increase_Supported,travel-time-increase,tmdd:linkStatusMsg.link-status-item.link-list.link;TMDD_N17R311_Link_Average_Speed_Supported,speed-average,tmdd:linkStatusMsg.link-status-item.link-list.link;TMDD_N17R312_Link_Estimated_Speed_Supported,speed-vehicle-estimated,tmdd:linkStatusMsg.link-status-item.link-list.link;TMDD_N17R313_Link_Speed_Limit_Supported,speed-limit,tmdd:linkStatusMsg.link-status-item.link-list.link;TMDD_N17R314_Link_Current_Advisory_Speed_Supported,advisory-speed-limit,tmdd:linkStatusMsg.link-status-item.link-list.link;TMDD_N17R315_Link_Truck_Speed_Limit_Supported,truck-speed-limit,tmdd:linkStatusMsg.link-status-item.link-list.link;TMDD_N17R316_Speed_Limit_Units_Supported,speed-limit-units,tmdd:linkStatusMsg.link-status-item.link-list.link;TMDD_N17R317_Link_Density_Supported,density,tmdd:linkStatusMsg.link-status-item.link-list.link;TMDD_N17R318_Link_Occupancy_Supported,occupancy,tmdd:linkStatusMsg.link-status-item.link-list.link;TMDD_N17R319_Link_Volume_Supported,volume,tmdd:linkStatusMsg.link-status-item.link-list.link;TMDD_N17R320_Event_Description_Time_Supported,event-description-time,tmdd:linkStatusMsg.link-status-item.link-list.link;TMDD_N17R321_Status_Date_and_Time_Change_Information_Supported,last-update-time,tmdd:linkStatusMsg.link-status-item.link-list.link;TMDD_N17R321_Status_Date_and_Time_Change_Information_Supported,last-update-time,tmdd:linkStatusMsg.link-status-item.organization-information;" userDataFile="${RI_USERTCDATAFILE}"/>
                         </testStep>
                         <testStep functionId=" Step 50.1.2.40 CONFIGURE: Set OptionalContentVerified to True" passfailResult="False">
                              <jl:set var="OptionalContentVerified" value="true"/>
                         </testStep>
                         <postcondition>
                              <testStep functionId="Step 50.1.2.41 POSTCONDITION: PUBLICATION-EC-REPLY with the following parameters:   DIALOG=dlLinkStatusUpdate OPTIONALCONTENTVERIFIED = OptionalContentVerified PUBLICATIONRESPONSEMESSAGE = PublicationResponseMessage ">
                                   <PUBLICATION-EC-REPLY Dialog="dlLinkStatusUpdate" functionId="dlLinkStatusUpdate" OPTIONALCONTENTVERIFIED="${OptionalContentVerified}" PUBLICATIONRESPONSEMESSAGE="${PublicationResponseMessage}"/>
                              </testStep>
                         </postcondition>
                    </jl:if>
               </jl:while>
          </jl:if>
     </C2CRI-session>
</testprocedure>