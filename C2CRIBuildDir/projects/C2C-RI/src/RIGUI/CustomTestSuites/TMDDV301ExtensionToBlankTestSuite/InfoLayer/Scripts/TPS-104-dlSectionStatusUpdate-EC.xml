<?xml version="1.0" encoding="UTF-8"?>
<!--Title:  TPS-104-dlSectionStatusUpdate-EC
       Description:  This test procedure is called by a test case and is used to verify the SUTs support of the dlSectionStatusUpdate dialog as an EC using variables provided by the calling test case.  
This procedure supports verification of requirements related to user need 2.3.6.10.13 [Need to Share Section Status] and is used for both valid and invalid test cases.
       Version/Date: 2011/12/27 12:41:08-->
<testprocedure xmlns="jelly:jameleon" xmlns:jl="jelly:core">
     <test-case-id>${C2CRITestCaseID}</test-case-id>
     <test-case-summary>This test procedure is called by a test case and is used to verify the SUTs support of the dlSectionStatusUpdate dialog as an EC using variables provided by the calling test case.  
This procedure supports verification of requirements related to user need 2.3.6.10.13 [Need to Share Section Status] and is used for both valid and invalid test cases.</test-case-summary>
     <testStep functionId="Step 1 CONFIGURE: Determine the Application Layer Standard that will be used for this test.  RECORD this information as: ApplicationLayerStandard:  ${ApplicationLayerStandard}" passfailResult="False "/>
     <testStep functionId="Step 2 CONFIGURE: Determine whether Authentication is required by the specification. (NRTM 3.3.6.1.1.1.2.1).  RECORD this information as: TMDD_N104R368_Authentication_Supported = ${TMDD_N104R368_Authentication_Supported}" passfailResult="False"/>
     <testStep functionId="Step 3 CONFIGURE: Determine whether Owner Organization is required by the specification. (NRTM 3.3.6.1.1.1.2.2).  RECORD this information as: TMDD_N104R369_Owner_Organization_Supported = ${TMDD_N104R369_Owner_Organization_Supported}" passfailResult="False"/>
     <testStep functionId="Step 4 CONFIGURE: Determine whether Content of Device Information Request Filter is required by the specification. (NRTM 3.3.6.1.1.1.3).  RECORD this information as: TMDD_N104R371_Content_of_Device_Information_Request_Filter_Supported = ${TMDD_N104R371_Content_of_Device_Information_Request_Filter_Supported}" passfailResult="False"/>
     <testStep functionId="Step 5 CONFIGURE: Determine whether Device Identifier Filter is required by the specification. (NRTM 3.3.6.1.1.1.3.1).  RECORD this information as: TMDD_N104R372_Device_Identifier_Filter_Supported = ${TMDD_N104R372_Device_Identifier_Filter_Supported}" passfailResult="False"/>
     <testStep functionId="Step 6 CONFIGURE: Determine whether Roadway Network Identifier Filter is required by the specification. (NRTM 3.3.6.1.1.1.3.2).  RECORD this information as: TMDD_N104R373_Roadway_Network_Identifier_Filter_Supported = ${TMDD_N104R373_Roadway_Network_Identifier_Filter_Supported}" passfailResult="False"/>
     <testStep functionId="Step 7 CONFIGURE: Determine whether Link Identifier Filter is required by the specification. (NRTM 3.3.6.1.1.1.3.3).  RECORD this information as: TMDD_N104R374_Link_Identifier_Filter_Supported = ${TMDD_N104R374_Link_Identifier_Filter_Supported}" passfailResult="False"/>
     <testStep functionId="Step 8 CONFIGURE: Determine whether Route Designator Filter is required by the specification. (NRTM 3.3.6.1.1.1.3.4).  RECORD this information as: TMDD_N104R375_Route_Designator_Filter_Supported = ${TMDD_N104R375_Route_Designator_Filter_Supported}" passfailResult="False"/>
     <testStep functionId="Step 9 CONFIGURE: Determine whether Linear Reference Filter is required by the specification. (NRTM 3.3.6.1.1.1.3.5).  RECORD this information as: TMDD_N104R376_Linear_Reference_Filter_Supported = ${TMDD_N104R376_Linear_Reference_Filter_Supported}" passfailResult="False"/>
     <C2CRI-session beginSession="true" infoStd="TMDDv3.01" appStd="${ApplicationLayerStandard}" useWSDL="true" testCaseIdentifier="${C2CRITestCaseID}" publicationDialog="dlSectionStatusUpdate" subscriptionDialog="dlDeviceInformationSubscription" riMode="OC">
          <testStep functionId="Step 10 CONFIGURE: Define the publication message that will be sent to the SUT.  RECORD this information as: PublicationMessage:  ${PublicationMessage}" passfailResult="False"/>
          <testStep functionId="Step 11 CONFIGURE: Determine the number of publication message transmissions that will be performed within this test.  RECORD this information as: PublicationCount:  ${PublicationCount}" passfailResult="False"/>
          <testStep functionId="Step 12 CONFIGURE: Determine whether an error response message is expected for this test.  RECORD this information as: PublicationErrorResponseExpected:  ${PublicationErrorResponseExpected}" passfailResult="False"/>
          <jl:if test="${PublicationErrorResponseExpected}">
               <testStep functionId="Step 13 CONFIGURE: IF PublicationErrorResponseExpected is true, determine the expected error code response for this test.  RECORD this information as:  PublicationErrorTypeExpected:  ${PublicationErrorTypeExpected}" passfailResult="False"/>
          </jl:if>
          <testStep functionId="Step 14 CONFIGURE: Determine whether credential authentication will be used for this test.  RECORD this information as: AuthenticationCheck:  ${AuthenticationCheck}" passfailResult="False"/>
          <testStep functionId="Step 15 CONFIGURE: Identify the Username expected for authentication during this test.  RECORD this information as: Username:  ${Username}" passfailResult="False"/>
          <testStep functionId="Step 16 CONFIGURE: Identify the Password expected for authentication during this test.  RECORD this information as: Password:  ${Password}" passfailResult="False"/>
          <testStep functionId="Step 17 CONFIGURE: Identify the Organization Identifier expected for authentication during this test.  RECORD this information as: OrganizationID:  ${OrganizationID}" passfailResult="False"/>
          <testStep functionId="Step 18 CONFIGURE: Determine whether the SUT will be allowed access to the information requested in this test.  RECORD this information as: AllowAccess:  ${AllowAccess}" passfailResult="False"/>
          <testStep functionId="Step 19 CONFIGURE: Determine whether an error response message is expected for this test.  RECORD this information as: SubscriptionErrorResponseExpected:  ${SubscriptionErrorResponseExpected}" passfailResult="False"/>
          <jl:if test="${SubscriptionErrorResponseExpected}">
               <testStep functionId="Step 20 CONFIGURE: IF SubscriptionErrorResponseExpected is true, determine the expected error code response for this test.  RECORD this information as:  SubscriptionErrorTypeExpected:  ${SubscriptionErrorTypeExpected}" passfailResult="False"/>
          </jl:if>
          <testStep functionId="Step 21 CONFIGURE: Define the subscription response message that will be sent to the SUT.  RECORD this information as: SubscriptionResponseMessage:  ${SubscriptionResponseMessage}" passfailResult="False"/>
          <testStep functionId="Step 22 SUBSCRIPTION-OC-RECEIVE with the following parameters:   Dialog=dlDeviceInformationSubscription AuthenticationCheck Username Password OrganizationID AllowAccess SubscriptionErrorResponseExpected SubscriptionErrorTypeExpected ">
               <SUBSCRIPTION-OC-RECEIVE Dialog="dlDeviceInformationSubscription" functionId="dlDeviceInformationSubscription" AuthenticationCheck="${AuthenticationCheck}" Username="${Username}" Password="${Password}" OrganizationID="${OrganizationID}" AllowAccess="${AllowAccess}" SubscriptionErrorResponseExpected="${SubscriptionErrorResponseExpected}" SubscriptionErrorTypeExpected="${SubscriptionErrorTypeExpected}"/>
          </testStep>
          <testStep functionId="Step 23 IF SubscriptionErrorResponseExpected is not equal to [TRUE] then CONTINUE, Otherwise SKIP the following substeps."/>
          <jl:if test="${!SubscriptionErrorResponseExpected.isTrue()}">
               <testStep functionId="Step 23.1 IF TMDD_N104R368_Authentication_Supported is equal to [TRUE] then CONTINUE; Otherwise SKIP the following substeps." passFailResult="True"/>
               <jl:if test="${TMDD_N104R368_Authentication_Supported}">
                    <testStep functionId="Step 23.1.1 VERIFY that element authentication exists within deviceInformationRequestMsg" passfailResult="True">
                         <ri-MessageVerify msgType="REQUEST" elementName="authentication" instanceName="deviceInformationRequestMsg" functionId="Looking for deviceInformationRequestMsg.authentication"/>
                    </testStep>
               </jl:if>
               <testStep functionId="Step 23.2 IF TMDD_N104R369_Owner_Organization_Supported is equal to [TRUE] then CONTINUE; Otherwise SKIP the following substeps." passFailResult="True"/>
               <jl:if test="${TMDD_N104R369_Owner_Organization_Supported}">
                    <testStep functionId="Step 23.2.1 VERIFY that element organization-requesting exists within deviceInformationRequestMsg" passfailResult="True">
                         <ri-MessageVerify msgType="REQUEST" elementName="organization-requesting" instanceName="deviceInformationRequestMsg" functionId="Looking for deviceInformationRequestMsg.organization-requesting"/>
                    </testStep>
               </jl:if>
               <testStep functionId="Step 23.3 IF TMDD_N104R371_Content_of_Device_Information_Request_Filter_Supported is equal to [TRUE] then CONTINUE; Otherwise SKIP the following substeps." passFailResult="True"/>
               <jl:if test="${TMDD_N104R371_Content_of_Device_Information_Request_Filter_Supported}">
                    <testStep functionId="Step 23.3.1 VERIFY that element device-filter exists within deviceInformationRequestMsg" passfailResult="True">
                         <ri-MessageVerify msgType="REQUEST" elementName="device-filter" instanceName="deviceInformationRequestMsg" functionId="Looking for deviceInformationRequestMsg.device-filter"/>
                    </testStep>
               </jl:if>
               <testStep functionId="Step 23.4 IF TMDD_N104R372_Device_Identifier_Filter_Supported is equal to [TRUE] then CONTINUE; Otherwise SKIP the following substeps." passFailResult="True"/>
               <jl:if test="${TMDD_N104R372_Device_Identifier_Filter_Supported}">
                    <testStep functionId="Step 23.4.1 VERIFY that element device-id-list exists within each instance of deviceInformationRequestMsg.device-filter" passfailResult="True">
                         <ri-MessageVerify msgType="REQUEST" elementName="device-id-list" instanceName="deviceInformationRequestMsg.device-filter" functionId="Looking for deviceInformationRequestMsg.device-filter.device-id-list"/>
                    </testStep>
               </jl:if>
               <testStep functionId="Step 23.5 IF TMDD_N104R373_Roadway_Network_Identifier_Filter_Supported is equal to [TRUE] then CONTINUE; Otherwise SKIP the following substeps." passFailResult="True"/>
               <jl:if test="${TMDD_N104R373_Roadway_Network_Identifier_Filter_Supported}">
                    <testStep functionId="Step 23.5.1 VERIFY that element network-id-list exists within each instance of deviceInformationRequestMsg.device-filter" passfailResult="True">
                         <ri-MessageVerify msgType="REQUEST" elementName="network-id-list" instanceName="deviceInformationRequestMsg.device-filter" functionId="Looking for deviceInformationRequestMsg.device-filter.network-id-list"/>
                    </testStep>
               </jl:if>
               <testStep functionId="Step 23.6 IF TMDD_N104R374_Link_Identifier_Filter_Supported is equal to [TRUE] then CONTINUE; Otherwise SKIP the following substeps." passFailResult="True"/>
               <jl:if test="${TMDD_N104R374_Link_Identifier_Filter_Supported}">
                    <testStep functionId="Step 23.6.1 VERIFY that element link-id-list exists within each instance of deviceInformationRequestMsg.device-filter" passfailResult="True">
                         <ri-MessageVerify msgType="REQUEST" elementName="link-id-list" instanceName="deviceInformationRequestMsg.device-filter" functionId="Looking for deviceInformationRequestMsg.device-filter.link-id-list"/>
                    </testStep>
               </jl:if>
               <testStep functionId="Step 23.7 IF TMDD_N104R375_Route_Designator_Filter_Supported is equal to [TRUE] then CONTINUE; Otherwise SKIP the following substeps." passFailResult="True"/>
               <jl:if test="${TMDD_N104R375_Route_Designator_Filter_Supported}">
                    <testStep functionId="Step 23.7.1 VERIFY that element link-designator-list exists within each instance of deviceInformationRequestMsg.device-filter" passfailResult="True">
                         <ri-MessageVerify msgType="REQUEST" elementName="link-designator-list" instanceName="deviceInformationRequestMsg.device-filter" functionId="Looking for deviceInformationRequestMsg.device-filter.link-designator-list"/>
                    </testStep>
               </jl:if>
               <testStep functionId="Step 23.8 IF TMDD_N104R376_Linear_Reference_Filter_Supported is equal to [TRUE] then CONTINUE; Otherwise SKIP the following substeps." passFailResult="True"/>
               <jl:if test="${TMDD_N104R376_Linear_Reference_Filter_Supported}">
                    <testStep functionId="Step 23.8.1 VERIFY that element linear-reference exists within each instance of deviceInformationRequestMsg.device-filter" passfailResult="True">
                         <ri-MessageVerify msgType="REQUEST" elementName="linear-reference" instanceName="deviceInformationRequestMsg.device-filter" functionId="Looking for deviceInformationRequestMsg.device-filter.linear-reference"/>
                    </testStep>
               </jl:if>
               <testStep functionId=" Step 23.9 CONFIGURE: Set OptionalContentVerified to True" passfailResult="False">
                    <jl:set var="OptionalContentVerified" value="true"/>
               </testStep>
               <postcondition>
                    <testStep functionId="Step 23.10 POSTCONDITION: SUBSCRIPTION-OC-REPLY with the following parameters:   Dialog=dlDeviceInformationSubscription OptionalContentVerified SubscriptionResponseMessage ">
                         <SUBSCRIPTION-OC-REPLY Dialog="dlDeviceInformationSubscription" functionId="dlDeviceInformationSubscription" OptionalContentVerified="${OptionalContentVerified}" SubscriptionResponseMessage="${SubscriptionResponseMessage}"/>
                    </testStep>
               </postcondition>
               <testStep functionId="Step 23.11 WHILE PUBLICATION_COMPLETE is not equal to [TRUE] then CONTINUE, Otherwise SKIP the following substeps."/>
               <jl:set var="PUBLICATION_COMPLETE" value="false"/>
               <jl:while test="${!PUBLICATION_COMPLETE.isTrue()}">
                    <testStep functionId="Step 23.11.1 PUBLICATION-OC with the following parameters:   Dialog=dlSectionStatusUpdate PublicationMessage PublicationCount PublicationErrorResponseExpected PublicationErrorTypeExpected ">
                         <PUBLICATION-OC Dialog="dlSectionStatusUpdate" functionId="dlSectionStatusUpdate" PublicationMessage="${PublicationMessage}" PublicationCount="${PublicationCount}" PublicationErrorResponseExpected="${PublicationErrorResponseExpected}" PublicationErrorTypeExpected="${PublicationErrorTypeExpected}"/>
                    </testStep>
               </jl:while>
          </jl:if>
     </C2CRI-session>
</testprocedure>