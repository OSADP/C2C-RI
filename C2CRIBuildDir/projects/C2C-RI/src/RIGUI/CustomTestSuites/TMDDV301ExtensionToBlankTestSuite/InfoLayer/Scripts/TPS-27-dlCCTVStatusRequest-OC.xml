<?xml version="1.0" encoding="UTF-8"?>
<!--Title:  TPS-27-dlCCTVStatusRequest-OC
       Description:  This test procedure is called by a test case and is used to verify the SUTs support of the dlCCTVStatusRequest dialog as an OC using variables provided by the calling test case.  
This procedure supports verification of requirements related to user need 2.3.6.2.3 [Need to Share CCTV Device Status] and is used for both valid and invalid test cases.
       Version/Date: 2012/02/14 22:52:48-->
<testprocedure xmlns="jelly:jameleon" xmlns:jl="jelly:core">
     <test-case-id>${C2CRITestCaseID}</test-case-id>
     <test-case-summary>This test procedure is called by a test case and is used to verify the SUTs support of the dlCCTVStatusRequest dialog as an OC using variables provided by the calling test case.  
This procedure supports verification of requirements related to user need 2.3.6.2.3 [Need to Share CCTV Device Status] and is used for both valid and invalid test cases.</test-case-summary>
     <testStep functionId="Step 1 CONFIGURE: Determine the Application Layer Standard that will be used for this test.  RECORD this information as: ApplicationLayerStandard:  ${ApplicationLayerStandard}" passfailResult="False "/>
     <testStep functionId="Step 2 CONFIGURE: Determine whether CCTV Error is required by the specification. (NRTM 3.3.6.3.2.5.2.1).  RECORD this information as: TMDD_N27R524_CCTV_Error_Supported = ${TMDD_N27R524_CCTV_Error_Supported}" passfailResult="False"/>
     <testStep functionId="Step 3 CONFIGURE: Determine whether CCTV Format is required by the specification. (NRTM 3.3.6.3.2.5.2.2).  RECORD this information as: TMDD_N27R525_CCTV_Format_Supported = ${TMDD_N27R525_CCTV_Format_Supported}" passfailResult="False"/>
     <testStep functionId="Step 4 CONFIGURE: Determine whether CCTV Preset Position is required by the specification. (NRTM 3.3.6.3.2.5.2.3).  RECORD this information as: TMDD_N27R526_CCTV_Preset_Position_Supported = ${TMDD_N27R526_CCTV_Preset_Position_Supported}" passfailResult="False"/>
     <testStep functionId="Step 5 CONFIGURE: Determine whether CCTV Pan Position is required by the specification. (NRTM 3.3.6.3.2.5.2.4).  RECORD this information as: TMDD_N27R527_CCTV_Pan_Position_Supported = ${TMDD_N27R527_CCTV_Pan_Position_Supported}" passfailResult="False"/>
     <testStep functionId="Step 6 CONFIGURE: Determine whether CCTV Tilt Position is required by the specification. (NRTM 3.3.6.3.2.5.2.5).  RECORD this information as: TMDD_N27R528_CCTV_Tilt_Position_Supported = ${TMDD_N27R528_CCTV_Tilt_Position_Supported}" passfailResult="False"/>
     <testStep functionId="Step 7 CONFIGURE: Determine whether CCTV Zoom Position is required by the specification. (NRTM 3.3.6.3.2.5.2.6).  RECORD this information as: TMDD_N27R529_CCTV_Zoom_Position_Supported = ${TMDD_N27R529_CCTV_Zoom_Position_Supported}" passfailResult="False"/>
     <testStep functionId="Step 8 CONFIGURE: Determine whether CCTV Iris Position is required by the specification. (NRTM 3.3.6.3.2.5.2.7).  RECORD this information as: TMDD_N27R530_CCTV_Iris_Position_Supported = ${TMDD_N27R530_CCTV_Iris_Position_Supported}" passfailResult="False"/>
     <testStep functionId="Step 9 CONFIGURE: Determine whether CCTV Focus Position is required by the specification. (NRTM 3.3.6.3.2.5.2.8).  RECORD this information as: TMDD_N27R531_CCTV_Focus_Position_Supported = ${TMDD_N27R531_CCTV_Focus_Position_Supported}" passfailResult="False"/>
     <C2CRI-session beginSession="true" infoStd="TMDDv3.01" appStd="${ApplicationLayerStandard}" useWSDL="true" testCaseIdentifier="${C2CRITestCaseID}" requestDialog="dlCCTVStatusRequest" riMode="EC">
          <testStep functionId="Step 10 CONFIGURE: Define the message that will be sent to the SUT.  RECORD this information as: RequestMessage:  ${RequestMessage}" passfailResult="False"/>
          <testStep functionId="Step 11 CONFIGURE: Determine whether an error response message is expected for this test.  RECORD this information as: ErrorResponseExpected:  ${ErrorResponseExpected}" passfailResult="False"/>
          <jl:if test="${ErrorResponseExpected}">
               <testStep functionId="Step 12 CONFIGURE: IF ErrorResponseExpected is true, determine the expected error code response for this test.  RECORD this information as:  ErrorTypeExpected:  ${ErrorTypeExpected}" passfailResult="False"/>
          </jl:if>
          <testStep functionId="Step 13 REQUEST-RESPONSE-EC with the following parameters:   DIALOG=dlCCTVStatusRequest REQUESTMESSAGE = RequestMessage ERRORRESPONSEEXPECTED = ErrorResponseExpected ERRORTYPEEXPECTED = ErrorTypeExpected ">
               <REQUEST-RESPONSE-EC Dialog="dlCCTVStatusRequest" functionId="dlCCTVStatusRequest" REQUESTMESSAGE="${RequestMessage}" ERRORRESPONSEEXPECTED="${ErrorResponseExpected}" ERRORTYPEEXPECTED="${ErrorTypeExpected}"/>
          </testStep>
          <testStep functionId="Step 14 IF ErrorResponseExpected is not equal to TRUE THEN CONTINUE, OTHERWISE skip the following substeps." passfailResult="False"/>
          <jl:if test="${!ErrorResponseExpected}">
               <testStep functionId="Step 14.1 IF TMDD_N27R524_CCTV_Error_Supported is equal to TRUE THEN CONTINUE; OTHERWISE skip the following substeps." passFailResult="False"/>
               <jl:if test="${TMDD_N27R524_CCTV_Error_Supported}">
                    <testStep functionId="Step 14.1.1 VERIFY that element cctv-error exists within each instance of cCTVStatusMsg.cctv-status-item" passfailResult="True">
                         <ri-MessageVerify msgType="RESPONSE" elementName="cctv-error" instanceName="tmdd:cCTVStatusMsg.cctv-status-item" functionId="Looking for cCTVStatusMsg.cctv-status-item.cctv-error"/>
                    </testStep>
               </jl:if>
               <testStep functionId="Step 14.2 IF TMDD_N27R525_CCTV_Format_Supported is equal to TRUE THEN CONTINUE; OTHERWISE skip the following substeps." passFailResult="False"/>
               <jl:if test="${TMDD_N27R525_CCTV_Format_Supported}">
                    <testStep functionId="Step 14.2.1 VERIFY that element cctv-image-list exists within each instance of cCTVStatusMsg.cctv-status-item" passfailResult="True">
                         <ri-MessageVerify msgType="RESPONSE" elementName="cctv-image-list" instanceName="tmdd:cCTVStatusMsg.cctv-status-item" functionId="Looking for cCTVStatusMsg.cctv-status-item.cctv-image-list"/>
                    </testStep>
               </jl:if>
               <testStep functionId="Step 14.3 IF TMDD_N27R526_CCTV_Preset_Position_Supported is equal to TRUE THEN CONTINUE; OTHERWISE skip the following substeps." passFailResult="False"/>
               <jl:if test="${TMDD_N27R526_CCTV_Preset_Position_Supported}">
                    <testStep functionId="Step 14.3.1 VERIFY that element cctv-position-preset exists within each instance of cCTVStatusMsg.cctv-status-item" passfailResult="True">
                         <ri-MessageVerify msgType="RESPONSE" elementName="cctv-position-preset" instanceName="tmdd:cCTVStatusMsg.cctv-status-item" functionId="Looking for cCTVStatusMsg.cctv-status-item.cctv-position-preset"/>
                    </testStep>
               </jl:if>
               <testStep functionId="Step 14.4 IF TMDD_N27R527_CCTV_Pan_Position_Supported is equal to TRUE THEN CONTINUE; OTHERWISE skip the following substeps." passFailResult="False"/>
               <jl:if test="${TMDD_N27R527_CCTV_Pan_Position_Supported}">
                    <testStep functionId="Step 14.4.1 VERIFY that element cctv-position-pan exists within each instance of cCTVStatusMsg.cctv-status-item" passfailResult="True">
                         <ri-MessageVerify msgType="RESPONSE" elementName="cctv-position-pan" instanceName="tmdd:cCTVStatusMsg.cctv-status-item" functionId="Looking for cCTVStatusMsg.cctv-status-item.cctv-position-pan"/>
                    </testStep>
               </jl:if>
               <testStep functionId="Step 14.5 IF TMDD_N27R528_CCTV_Tilt_Position_Supported is equal to TRUE THEN CONTINUE; OTHERWISE skip the following substeps." passFailResult="False"/>
               <jl:if test="${TMDD_N27R528_CCTV_Tilt_Position_Supported}">
                    <testStep functionId="Step 14.5.1 VERIFY that element cctv-position-tilt exists within each instance of cCTVStatusMsg.cctv-status-item" passfailResult="True">
                         <ri-MessageVerify msgType="RESPONSE" elementName="cctv-position-tilt" instanceName="tmdd:cCTVStatusMsg.cctv-status-item" functionId="Looking for cCTVStatusMsg.cctv-status-item.cctv-position-tilt"/>
                    </testStep>
               </jl:if>
               <testStep functionId="Step 14.6 IF TMDD_N27R529_CCTV_Zoom_Position_Supported is equal to TRUE THEN CONTINUE; OTHERWISE skip the following substeps." passFailResult="False"/>
               <jl:if test="${TMDD_N27R529_CCTV_Zoom_Position_Supported}">
                    <testStep functionId="Step 14.6.1 VERIFY that element cctv-position-zoom-lens exists within each instance of cCTVStatusMsg.cctv-status-item" passfailResult="True">
                         <ri-MessageVerify msgType="RESPONSE" elementName="cctv-position-zoom-lens" instanceName="tmdd:cCTVStatusMsg.cctv-status-item" functionId="Looking for cCTVStatusMsg.cctv-status-item.cctv-position-zoom-lens"/>
                    </testStep>
               </jl:if>
               <testStep functionId="Step 14.7 IF TMDD_N27R530_CCTV_Iris_Position_Supported is equal to TRUE THEN CONTINUE; OTHERWISE skip the following substeps." passFailResult="False"/>
               <jl:if test="${TMDD_N27R530_CCTV_Iris_Position_Supported}">
                    <testStep functionId="Step 14.7.1 VERIFY that element cctv-position-iris-lens exists within each instance of cCTVStatusMsg.cctv-status-item" passfailResult="True">
                         <ri-MessageVerify msgType="RESPONSE" elementName="cctv-position-iris-lens" instanceName="tmdd:cCTVStatusMsg.cctv-status-item" functionId="Looking for cCTVStatusMsg.cctv-status-item.cctv-position-iris-lens"/>
                    </testStep>
               </jl:if>
               <testStep functionId="Step 14.8 IF TMDD_N27R531_CCTV_Focus_Position_Supported is equal to TRUE THEN CONTINUE; OTHERWISE skip the following substeps." passFailResult="False"/>
               <jl:if test="${TMDD_N27R531_CCTV_Focus_Position_Supported}">
                    <testStep functionId="Step 14.8.1 VERIFY that element cctv-position-focus-lens exists within each instance of cCTVStatusMsg.cctv-status-item" passfailResult="True">
                         <ri-MessageVerify msgType="RESPONSE" elementName="cctv-position-focus-lens" instanceName="tmdd:cCTVStatusMsg.cctv-status-item" functionId="Looking for cCTVStatusMsg.cctv-status-item.cctv-position-focus-lens"/>
                    </testStep>
               </jl:if>
               <testStep functionId="Step 14.9 VERIFY that the values within the RESPONSE message are correct per the TMDD standard and known operational conditions.">
                    <AUTO-VERIFY-MESSAGE functionId="Automatically Verify message content" msgName="RESPONSE" verificationSpec="${VerificationSpec}"/>
                    <USER-VERIFY-MESSAGE functionId="The User Verifies the message content" msgName="RESPONSE" optionList="TMDD_N27R524_CCTV_Error_Supported,cctv-error,tmdd:cCTVStatusMsg.cctv-status-item;TMDD_N27R525_CCTV_Format_Supported,cctv-image-list,tmdd:cCTVStatusMsg.cctv-status-item;TMDD_N27R526_CCTV_Preset_Position_Supported,cctv-position-preset,tmdd:cCTVStatusMsg.cctv-status-item;TMDD_N27R527_CCTV_Pan_Position_Supported,cctv-position-pan,tmdd:cCTVStatusMsg.cctv-status-item;TMDD_N27R528_CCTV_Tilt_Position_Supported,cctv-position-tilt,tmdd:cCTVStatusMsg.cctv-status-item;TMDD_N27R529_CCTV_Zoom_Position_Supported,cctv-position-zoom-lens,tmdd:cCTVStatusMsg.cctv-status-item;TMDD_N27R530_CCTV_Iris_Position_Supported,cctv-position-iris-lens,tmdd:cCTVStatusMsg.cctv-status-item;TMDD_N27R531_CCTV_Focus_Position_Supported,cctv-position-focus-lens,tmdd:cCTVStatusMsg.cctv-status-item;" userDataFile="${RI_USERTCDATAFILE}"/>
               </testStep>
          </jl:if>
     </C2CRI-session>
</testprocedure>