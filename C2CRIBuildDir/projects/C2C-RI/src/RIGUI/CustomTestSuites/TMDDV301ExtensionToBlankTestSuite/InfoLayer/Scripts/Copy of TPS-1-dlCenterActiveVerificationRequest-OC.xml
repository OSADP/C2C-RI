<?xml version="1.0" encoding="UTF-8"?>
<!--Title:  TPS-1-dlCenterActiveVerificationRequest-OC
       Description:  This test procedure is called by a test case and is used to verify the SUTs support of the dlCenterActiveVerificationRequest dialog as an OC using variables provided by the calling test case.  
This procedure supports verification of requirements related to user need 2.3.1.1 [Verify Connection Active] and is used for both valid and invalid test cases.
       Version/Date: 2012/01/20 15:45:47-->
<testprocedure xmlns="jelly:jameleon" xmlns:jl="jelly:core">
     <test-case-id>${C2CRITestCaseID}</test-case-id>
     <test-case-summary>This test procedure is called by a test case and is used to verify the SUTs support of the dlCenterActiveVerificationRequest dialog as an OC using variables provided by the calling test case.  
This procedure supports verification of requirements related to user need 2.3.1.1 [Verify Connection Active] and is used for both valid and invalid test cases.</test-case-summary>
     <testStep functionId="Step 1 CONFIGURE: Determine the Application Layer Standard that will be used for this test.  RECORD this information as: ApplicationLayerStandard:  ${ApplicationLayerStandard}" passfailResult="False "/>
     <testStep functionId="Step 2 CONFIGURE: Determine whether Restrictions is required by the specification. (NRTM 3.3.1.1.5.2.1).  RECORD this information as: TMDD_N1R9_Restrictions_Supported = ${TMDD_N1R9_Restrictions_Supported}" passfailResult="False"/>
     <C2CRI-session beginSession="true" infoStd="TMDDv3.01" appStd="${ApplicationLayerStandard}" useWSDL="true" testCaseIdentifier="${C2CRITestCaseID}" requestDialog="dlCenterActiveVerificationRequest" riMode="EC">
          <testStep functionId="Step 3 CONFIGURE: Define the message that will be sent to the SUT.  RECORD this information as: RequestMessage:  ${RequestMessage}" passfailResult="False"/>
          <testStep functionId="Step 4 CONFIGURE: Determine whether an error response message is expected for this test.  RECORD this information as: ErrorResponseExpected:  ${ErrorResponseExpected}" passfailResult="False"/>
          <jl:if test="${ErrorResponseExpected}">
               <testStep functionId="Step 5 CONFIGURE: IF ErrorResponseExpected is true, determine the expected error code response for this test.  RECORD this information as:  ErrorTypeExpected:  ${ErrorTypeExpected}" passfailResult="False"/>
          </jl:if>
          <testStep functionId="Step 6 CONFIGURE: Determine whether the SUT is expected to have valid data available for a response message in this test.  RECORD this information as: DataValid:  ${DataValid}" passfailResult="False"/>
          <testStep functionId="Step 7 REQUEST-RESPONSE-EC with the following parameters:   Dialog=dlCenterActiveVerificationRequest RequestMessage ErrorResponseExpected ErrorTypeExpected DataValid ">
               <REQUEST-RESPONSE-EC Dialog="dlCenterActiveVerificationRequest" functionId="dlCenterActiveVerificationRequest" RequestMessage="${RequestMessage}" ErrorResponseExpected="${ErrorResponseExpected}" ErrorTypeExpected="${ErrorTypeExpected}"/>
          </testStep>
          <testStep functionId="Step 8 IF ErrorResponseExpected is not equal to [TRUE] then CONTINUE, Otherwise SKIP the following substeps."/>
          <jl:if test="${!ErrorResponseExpected}">
               <testStep functionId="Step 8.1 IF TMDD_N1R9_Restrictions_Supported is equal to [TRUE] then CONTINUE; Otherwise SKIP the following substeps." passFailResult="True"/>
               <jl:if test="${TMDD_N1R9_Restrictions_Supported}">
                    <testStep functionId="Step 8.1.1 VERIFY that element restrictions exists within centerActiveVerificationResponseMsg" passfailResult="True">
                         <ri-MessageVerify msgType="RESPONSE" elementName="restrictions" instanceName="tmdd:centerActiveVerificationResponseMsg" functionId="Looking for centerActiveVerificationResponseMsg.restrictions"/>
                    </testStep>
               </jl:if>
   	       <AUTO-VERIFY-MESSAGE functionId="Automatically Verify message content" msgName="RESPONSE" verificationSpec="${VerificationSpec}" />
	       <USER-VERIFY-MESSAGE functionId="The User Verifies the message content" msgName="RESPONSE" />
          </jl:if>
     </C2CRI-session>
</testprocedure>