<?xml version="1.0" encoding="UTF-8"?>
<!--Title:  TPS-99-dlSectionControlRequest-EC
       Description:  This test procedure is called by a test case and is used to verify the SUTs support of the dlSectionControlRequest dialog as an EC using variables provided by the calling test case.  
This procedure supports verification of requirements related to user need 2.3.6.10.14 [Need to Control a Section] and is used for both valid and invalid test cases.
       Version/Date: 2012/02/14 23:24:25-->
<testprocedure xmlns="jelly:jameleon" xmlns:jl="jelly:core">
     <test-case-id>${C2CRITestCaseID}</test-case-id>
     <test-case-summary>This test procedure is called by a test case and is used to verify the SUTs support of the dlSectionControlRequest dialog as an EC using variables provided by the calling test case.  
This procedure supports verification of requirements related to user need 2.3.6.10.14 [Need to Control a Section] and is used for both valid and invalid test cases.</test-case-summary>
     <testStep functionId="Step 1 CONFIGURE: Determine the Application Layer Standard that will be used for this test.  RECORD this information as: ApplicationLayerStandard:  ${ApplicationLayerStandard}" passfailResult="False "/>
     <testStep functionId="Step 2 CONFIGURE: Determine whether Operator Identifier is required by the specification. (NRTM 3.3.6.11.9.2.2.1).  RECORD this information as: TMDD_N99R1022_Operator_Identifier_Supported = ${TMDD_N99R1022_Operator_Identifier_Supported}" passfailResult="False"/>
     <testStep functionId="Step 3 CONFIGURE: Determine whether Event Identifier is required by the specification. (NRTM 3.3.6.11.9.2.2.2).  RECORD this information as: TMDD_N99R1023_Event_Identifier_Supported = ${TMDD_N99R1023_Event_Identifier_Supported}" passfailResult="False"/>
     <testStep functionId="Step 4 CONFIGURE: Determine whether Event Response Plan is required by the specification. (NRTM 3.3.6.11.9.2.2.3).  RECORD this information as: TMDD_N99R1024_Event_Response_Plan_Supported = ${TMDD_N99R1024_Event_Response_Plan_Supported}" passfailResult="False"/>
     <testStep functionId="Step 5 CONFIGURE: Determine whether Request Priority is required by the specification. (NRTM 3.3.6.11.9.2.2.4).  RECORD this information as: TMDD_N99R1025_Request_Priority_Supported = ${TMDD_N99R1025_Request_Priority_Supported}" passfailResult="False"/>
     <testStep functionId="Step 6 CONFIGURE: Determine whether Command End Time is required by the specification. (NRTM 3.3.6.11.9.2.2.5).  RECORD this information as: TMDD_N99R1026_Command_End_Time_Supported = ${TMDD_N99R1026_Command_End_Time_Supported}" passfailResult="False"/>
     <testStep functionId="Step 7 CONFIGURE: Determine whether Request Date and Time Information is required by the specification. (NRTM 3.3.6.11.9.2.2.6).  RECORD this information as: TMDD_N99R1027_Request_Date_and_Time_Information_Supported = ${TMDD_N99R1027_Request_Date_and_Time_Information_Supported}" passfailResult="False"/>
     <C2CRI-session beginSession="true" infoStd="TMDDv3.01" appStd="${ApplicationLayerStandard}" useWSDL="true" testCaseIdentifier="${C2CRITestCaseID}" requestDialog="dlSectionControlRequest" riMode="OC">
          <testStep functionId="Step 8 CONFIGURE: Define the response message that will be sent to the SUT.  RECORD this information as: ResponseMessage:  ${ResponseMessage}" passfailResult="False"/>
          <testStep functionId="Step 9 CONFIGURE: Determine whether the Authentication parameters need to be verified within this test.  RECORD this information as: AuthenticationCheck:  ${AuthenticationCheck}" passfailResult="False"/>
          <testStep functionId="Step 10 CONFIGURE: Identify the Username expected for authentication during this test.  RECORD this information as: Username:  ${Username}" passfailResult="False"/>
          <testStep functionId="Step 11 CONFIGURE: Identify the Password expected for authentication during this test.  RECORD this information as: Password:  ${Password}" passfailResult="False"/>
          <testStep functionId="Step 12 CONFIGURE: Identify the Organization Identifier expected for authentication during this test.  RECORD this information as: OrganizationID:  ${OrganizationID}" passfailResult="False"/>
          <testStep functionId="Step 13 CONFIGURE: Determine whether the SUT will be allowed access to the information requested in this test.  RECORD this information as: AllowAccess:  ${AllowAccess}" passfailResult="False"/>
          <testStep functionId="Step 14 CONFIGURE: Determine whether an error response message is expected for this test.  RECORD this information as: ErrorResponseExpected:  ${ErrorResponseExpected}" passfailResult="False"/>
          <jl:if test="${ErrorResponseExpected}">
               <testStep functionId="Step 15 CONFIGURE: IF ErrorResponseExpected is true, determine the expected error code response for this test.  RECORD this information as:  ErrorTypeExpected:  ${ErrorTypeExpected}" passfailResult="False"/>
          </jl:if>
          <testStep functionId="Step 16 CONFIGURE: Determine whether the SUT is expected to have valid data available for a response message in this test.  RECORD this information as: DataValid:  ${DataValid}" passfailResult="False"/>
          <testStep functionId="Step 17 REQUEST-RESPONSE-OC-RECEIVE with the following parameters:   DIALOG=dlSectionControlRequest AUTHENTICATIONCHECK = AuthenticationCheck USERNAME = Username PASSWORD = Password ORGANIZATIONID = OrganizationID ALLOWACCESS = AllowAccess ERRORRESPONSEEXPECTED = ErrorResponseExpected ERRORTYPEEXPECTED = ErrorTypeExpected DATAVALID = DataValid ">
               <REQUEST-RESPONSE-OC-RECEIVE Dialog="dlSectionControlRequest" functionId="dlSectionControlRequest" AUTHENTICATIONCHECK="${AuthenticationCheck}" USERNAME="${Username}" PASSWORD="${Password}" ORGANIZATIONID="${OrganizationID}" ALLOWACCESS="${AllowAccess}" ERRORRESPONSEEXPECTED="${ErrorResponseExpected}" ERRORTYPEEXPECTED="${ErrorTypeExpected}" DATAVALID="${DataValid}"/>
          </testStep>
          <testStep functionId="Step 18 IF ErrorResponseExpected is not equal to TRUE THEN CONTINUE, OTHERWISE skip the following substeps." passfailResult="False"/>
          <jl:if test="${!ErrorResponseExpected}">
               <testStep functionId="Step 18.1 IF TMDD_N99R1022_Operator_Identifier_Supported is equal to TRUE THEN CONTINUE; OTHERWISE skip the following substeps." passFailResult="False"/>
               <jl:if test="${TMDD_N99R1022_Operator_Identifier_Supported}">
                    <testStep functionId="Step 18.1.1 VERIFY that element operator-id exists within each instance of sectionControlRequestMsg.authentication" passfailResult="True">
                         <ri-MessageVerify msgType="REQUEST" elementName="operator-id" instanceName="tmdd:sectionControlRequestMsg.authentication" functionId="Looking for sectionControlRequestMsg.authentication.operator-id"/>
                    </testStep>
                    <testStep functionId="Step 18.1.2 VERIFY that element operator-id exists within sectionControlRequestMsg" passfailResult="True">
                         <ri-MessageVerify msgType="REQUEST" elementName="operator-id" instanceName="tmdd:sectionControlRequestMsg" functionId="Looking for sectionControlRequestMsg.operator-id"/>
                    </testStep>
               </jl:if>
               <testStep functionId="Step 18.2 IF TMDD_N99R1023_Event_Identifier_Supported is equal to TRUE THEN CONTINUE; OTHERWISE skip the following substeps." passFailResult="False"/>
               <jl:if test="${TMDD_N99R1023_Event_Identifier_Supported}">
                    <testStep functionId="Step 18.2.1 VERIFY that element event-id exists within sectionControlRequestMsg" passfailResult="True">
                         <ri-MessageVerify msgType="REQUEST" elementName="event-id" instanceName="tmdd:sectionControlRequestMsg" functionId="Looking for sectionControlRequestMsg.event-id"/>
                    </testStep>
               </jl:if>
               <testStep functionId="Step 18.3 IF TMDD_N99R1024_Event_Response_Plan_Supported is equal to TRUE THEN CONTINUE; OTHERWISE skip the following substeps." passFailResult="False"/>
               <jl:if test="${TMDD_N99R1024_Event_Response_Plan_Supported}">
                    <testStep functionId="Step 18.3.1 VERIFY that element response-plan-id exists within sectionControlRequestMsg" passfailResult="True">
                         <ri-MessageVerify msgType="REQUEST" elementName="response-plan-id" instanceName="tmdd:sectionControlRequestMsg" functionId="Looking for sectionControlRequestMsg.response-plan-id"/>
                    </testStep>
               </jl:if>
               <testStep functionId="Step 18.4 IF TMDD_N99R1025_Request_Priority_Supported is equal to TRUE THEN CONTINUE; OTHERWISE skip the following substeps." passFailResult="False"/>
               <jl:if test="${TMDD_N99R1025_Request_Priority_Supported}">
                    <testStep functionId="Step 18.4.1 VERIFY that element command-request-priority exists within sectionControlRequestMsg" passfailResult="True">
                         <ri-MessageVerify msgType="REQUEST" elementName="command-request-priority" instanceName="tmdd:sectionControlRequestMsg" functionId="Looking for sectionControlRequestMsg.command-request-priority"/>
                    </testStep>
               </jl:if>
               <testStep functionId="Step 18.5 IF TMDD_N99R1026_Command_End_Time_Supported is equal to TRUE THEN CONTINUE; OTHERWISE skip the following substeps." passFailResult="False"/>
               <jl:if test="${TMDD_N99R1026_Command_End_Time_Supported}">
                    <testStep functionId="Step 18.5.1 VERIFY that element command-end-time exists within sectionControlRequestMsg" passfailResult="True">
                         <ri-MessageVerify msgType="REQUEST" elementName="command-end-time" instanceName="tmdd:sectionControlRequestMsg" functionId="Looking for sectionControlRequestMsg.command-end-time"/>
                    </testStep>
               </jl:if>
               <testStep functionId="Step 18.6 IF TMDD_N99R1027_Request_Date_and_Time_Information_Supported is equal to TRUE THEN CONTINUE; OTHERWISE skip the following substeps." passFailResult="False"/>
               <jl:if test="${TMDD_N99R1027_Request_Date_and_Time_Information_Supported}">
                    <testStep functionId="Step 18.6.1 VERIFY that element command-request-time exists within sectionControlRequestMsg" passfailResult="True">
                         <ri-MessageVerify msgType="REQUEST" elementName="command-request-time" instanceName="tmdd:sectionControlRequestMsg" functionId="Looking for sectionControlRequestMsg.command-request-time"/>
                    </testStep>
               </jl:if>
               <testStep functionId="Step 18.7 VERIFY that the values within the REQUEST message are correct per the TMDD standard and known operational conditions.">
                    <AUTO-VERIFY-MESSAGE functionId="Automatically Verify message content" msgName="REQUEST" verificationSpec="${VerificationSpec}"/>
                    <USER-VERIFY-MESSAGE functionId="The User Verifies the message content" msgName="REQUEST" optionList="TMDD_N99R1022_Operator_Identifier_Supported,operator-id,tmdd:sectionControlRequestMsg.authentication;TMDD_N99R1022_Operator_Identifier_Supported,operator-id,tmdd:sectionControlRequestMsg;TMDD_N99R1023_Event_Identifier_Supported,event-id,tmdd:sectionControlRequestMsg;TMDD_N99R1024_Event_Response_Plan_Supported,response-plan-id,tmdd:sectionControlRequestMsg;TMDD_N99R1025_Request_Priority_Supported,command-request-priority,tmdd:sectionControlRequestMsg;TMDD_N99R1026_Command_End_Time_Supported,command-end-time,tmdd:sectionControlRequestMsg;TMDD_N99R1027_Request_Date_and_Time_Information_Supported,command-request-time,tmdd:sectionControlRequestMsg;" userDataFile="${RI_USERTCDATAFILE}"/>
               </testStep>
               <testStep functionId=" Step 18.8 CONFIGURE: Set OptionalContentVerified to True" passfailResult="False">
                    <jl:set var="OptionalContentVerified" value="true"/>
               </testStep>
               <postcondition>
                    <testStep functionId="Step 18.9 POSTCONDITION: REQUEST-RESPONSE-OC-REPLY with the following parameters:   DIALOG=dlSectionControlRequest OPTIONALCONTENTVERIFIED = OptionalContentVerified RESPONSEMESSAGE = ResponseMessage ">
                         <REQUEST-RESPONSE-OC-REPLY Dialog="dlSectionControlRequest" functionId="dlSectionControlRequest" OPTIONALCONTENTVERIFIED="${OptionalContentVerified}" RESPONSEMESSAGE="${ResponseMessage}"/>
                    </testStep>
               </postcondition>
          </jl:if>
     </C2CRI-session>
</testprocedure>