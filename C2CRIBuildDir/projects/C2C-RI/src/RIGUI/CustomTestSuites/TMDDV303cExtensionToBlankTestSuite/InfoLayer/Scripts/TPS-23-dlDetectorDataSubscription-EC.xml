<?xml version="1.0" encoding="UTF-8"?>
<!--Title:  TPS-23-dlDetectorDataSubscription-EC
       Description:  This test procedure is called by a test case and is used to verify the SUTs support of the dlDetectorDataSubscription dialog as an EC using variables provided by the calling test case.  
This procedure supports verification of requirements related to user need 2.3.5.1.6 [Need for Detector Data Sharing] and is used for both valid and invalid test cases.
       Version/Date: 2013/11/28 11:44:03-->
<testprocedure xmlns="jelly:jameleon" xmlns:jl="jelly:core">
     <test-case-id>${C2CRITestCaseID}</test-case-id>
     <test-case-summary>This test procedure is called by a test case and is used to verify the SUTs support of the dlDetectorDataSubscription dialog as an EC using variables provided by the calling test case.  
This procedure supports verification of requirements related to user need 2.3.5.1.6 [Need for Detector Data Sharing] and is used for both valid and invalid test cases.</test-case-summary>
     <testStep functionId="Step 1 CONFIGURE: Determine the Application Layer Standard that will be used for this test.  RECORD this information as: ApplicationLayerStandard:  ${ApplicationLayerStandard}" passfailResult="False "/>
     <testStep functionId="Step 2 CONFIGURE: Determine the dialog performance requirement for Publish Detector Data (NTRM 3.3.5.2.3.2}.  RECORD this value as: TMDD_N23R467_Publish_Detector_Data_Parameter = ${TMDD_N23R467_Publish_Detector_Data_Parameter}" passfailResult="False"/>
     <testStep functionId="Step 3 CONFIGURE: Determine the dialog performance requirement for Subscribe to Detector Data Information (NTRM 3.3.5.2.3.3}.  RECORD this value as: TMDD_N23R468_Subscribe_to_Detector_Data_Information_Parameter = ${TMDD_N23R468_Subscribe_to_Detector_Data_Information_Parameter}" passfailResult="False"/>
     <testStep functionId="Step 4 CONFIGURE: Determine whether Authentication - Device Information (DeviceAuth) is required by the specification. (NRTM 3.3.5.1.1.1.2.1).  RECORD this information as: TMDD_N23R364_Authentication___Device_Information__DeviceAuth__Supported = ${TMDD_N23R364_Authentication___Device_Information__DeviceAuth__Supported}" passfailResult="False"/>
     <testStep functionId="Step 5 CONFIGURE: Determine whether Operator Identifier - Device Information is required by the specification. (NRTM 3.3.5.1.1.1.2.1.1).  RECORD this information as: TMDD_N23R365_Operator_Identifier___Device_Information_Supported = ${TMDD_N23R365_Operator_Identifier___Device_Information_Supported}" passfailResult="False"/>
     <testStep functionId="Step 6 CONFIGURE: Determine whether External Center Organization - Device Information is required by the specification. (NRTM 3.3.5.1.1.1.2.2).  RECORD this information as: TMDD_N23R366_External_Center_Organization___Device_Information_Supported = ${TMDD_N23R366_External_Center_Organization___Device_Information_Supported}" passfailResult="False"/>
     <testStep functionId="Step 7 CONFIGURE: Determine whether Device Identifier Filter is required by the specification. (NRTM 3.3.5.1.1.1.3.1).  RECORD this information as: TMDD_N23R367_Device_Identifier_Filter_Supported = ${TMDD_N23R367_Device_Identifier_Filter_Supported}" passfailResult="False"/>
     <testStep functionId="Step 8 CONFIGURE: Determine whether Roadway Network Identifier Filter is required by the specification. (NRTM 3.3.5.1.1.1.3.2).  RECORD this information as: TMDD_N23R368_Roadway_Network_Identifier_Filter_Supported = ${TMDD_N23R368_Roadway_Network_Identifier_Filter_Supported}" passfailResult="False"/>
     <testStep functionId="Step 9 CONFIGURE: Determine whether Link Identifier Filter is required by the specification. (NRTM 3.3.5.1.1.1.3.3).  RECORD this information as: TMDD_N23R369_Link_Identifier_Filter_Supported = ${TMDD_N23R369_Link_Identifier_Filter_Supported}" passfailResult="False"/>
     <testStep functionId="Step 10 CONFIGURE: Determine whether Route Designator Filter is required by the specification. (NRTM 3.3.5.1.1.1.3.4).  RECORD this information as: TMDD_N23R370_Route_Designator_Filter_Supported = ${TMDD_N23R370_Route_Designator_Filter_Supported}" passfailResult="False"/>
     <testStep functionId="Step 11 CONFIGURE: Determine whether Linear Reference Filter is required by the specification. (NRTM 3.3.5.1.1.1.3.5).  RECORD this information as: TMDD_N23R371_Linear_Reference_Filter_Supported = ${TMDD_N23R371_Linear_Reference_Filter_Supported}" passfailResult="False"/>
     <testStep functionId="Step 12 CONFIGURE: Determine whether Detector Station - Data Request is required by the specification. (NRTM 3.3.5.2.3.4.2.1).  RECORD this information as: TMDD_N23R471_Detector_Station___Data_Request_Supported = ${TMDD_N23R471_Detector_Station___Data_Request_Supported}" passfailResult="False"/>
     <testStep functionId="Step 13 CONFIGURE: Determine whether Data Type Request is required by the specification. (NRTM 3.3.5.2.3.4.2.2).  RECORD this information as: TMDD_N23R472_Data_Type_Request_Supported = ${TMDD_N23R472_Data_Type_Request_Supported}" passfailResult="False"/>
     <testStep functionId="Step 14 CONFIGURE: Determine whether Restrictions - Error Report is required by the specification. (NRTM 3.3.1.4.1.2.1).  RECORD this information as: TMDD_N23R14_Restrictions___Error_Report_Supported = ${TMDD_N23R14_Restrictions___Error_Report_Supported}" passfailResult="False"/>
     <C2CRI-session beginSession="true" infoStd="TMDDv3.03a" appStd="${ApplicationLayerStandard}" useWSDL="true" testCaseIdentifier="${C2CRITestCaseID}" riMode="OC">
          <testStep functionId="Step 15 CONFIGURE: Define the publication message that will be sent to the SUT.  RECORD this information as: PublicationMessage:  ${PublicationMessage}" passfailResult="False"/>
          <testStep functionId="Step 16 CONFIGURE: Determine the number of publication message transmissions that will be performed within this test.  RECORD this information as: PublicationCount:  ${PublicationCount}" passfailResult="False"/>
          <testStep functionId="Step 17 CONFIGURE: Determine whether an error response message is expected for this test.  RECORD this information as: PublicationErrorResponseExpected:  ${PublicationErrorResponseExpected}" passfailResult="False"/>
          <jl:if test="${PublicationErrorResponseExpected}">
               <testStep functionId="Step 18 CONFIGURE: IF PublicationErrorResponseExpected is true, determine the expected error code response for this test.  RECORD this information as:  PublicationErrorTypeExpected:  ${PublicationErrorTypeExpected}" passfailResult="False"/>
          </jl:if>
          <testStep functionId="Step 19 CONFIGURE: Determine whether the Authentication parameters need to be verified within this test.  RECORD this information as: AuthenticationCheck:  ${AuthenticationCheck}" passfailResult="False"/>
          <testStep functionId="Step 20 CONFIGURE: Identify the Username expected for authentication during this test.  RECORD this information as: Username:  ${Username}" passfailResult="False"/>
          <testStep functionId="Step 21 CONFIGURE: Identify the Password expected for authentication during this test.  RECORD this information as: Password:  ${Password}" passfailResult="False"/>
          <testStep functionId="Step 22 CONFIGURE: Identify the Operator Identifier expected for authentication during this test.  RECORD this information as: OperatorID:  ${OperatorID}" passfailResult="False"/>
          <testStep functionId="Step 23 CONFIGURE: Determine whether the SUT will be allowed access to the information requested in this test.  RECORD this information as: AllowAccess:  ${AllowAccess}" passfailResult="False"/>
          <testStep functionId="Step 24 CONFIGURE: Determine whether an error response message is expected for this test.  RECORD this information as: SubscriptionErrorResponseExpected:  ${SubscriptionErrorResponseExpected}" passfailResult="False"/>
          <jl:if test="${SubscriptionErrorResponseExpected}">
               <testStep functionId="Step 25 CONFIGURE: IF SubscriptionErrorResponseExpected is true, determine the expected error code response for this test.  RECORD this information as:  SubscriptionErrorTypeExpected:  ${SubscriptionErrorTypeExpected}" passfailResult="False"/>
          </jl:if>
          <testStep functionId="Step 26 CONFIGURE: Define the subscription response message that will be sent to the SUT.  RECORD this information as: SubscriptionResponseMessage:  ${SubscriptionResponseMessage}" passfailResult="False"/>
          <testStep functionId="Step 27 SUBSCRIPTION-OC-RECEIVE with the following parameters:   DIALOG=dlDetectorDataSubscription RESPONSETIMEREQUIRED=TMDD_N23R468_Subscribe_to_Detector_Data_Information_Parameter AUTHENTICATIONCHECK = AuthenticationCheck USERNAME = Username PASSWORD = Password OPERATORID = OperatorID ALLOWACCESS = AllowAccess SUBSCRIPTIONERRORRESPONSEEXPECTED = SubscriptionErrorResponseExpected SUBSCRIPTIONERRORTYPEEXPECTED = SubscriptionErrorTypeExpected  Returns: CONTINUEPUBLICATION ">
               <SUBSCRIPTION-OC-RECEIVE Dialog="dlDetectorDataSubscription" functionId="dlDetectorDataSubscription" RESPONSETIMEREQUIRED="${TMDD_N23R468_Subscribe_to_Detector_Data_Information_Parameter}" AUTHENTICATIONCHECK="${AuthenticationCheck}" USERNAME="${Username}" PASSWORD="${Password}" OPERATORID="${OperatorID}" ALLOWACCESS="${AllowAccess}" SUBSCRIPTIONERRORRESPONSEEXPECTED="${SubscriptionErrorResponseExpected}" SUBSCRIPTIONERRORTYPEEXPECTED="${SubscriptionErrorTypeExpected}"/>
          </testStep>
          <testStep functionId="Step 28 IF SubscriptionErrorResponseExpected is not equal to TRUE THEN CONTINUE, OTHERWISE skip the following substeps.  Note: If a verification step fails, then test execution will proceed at the next subsequent Post Condition step, if present.  Otherwise, test execution will proceed to the final Exit step." passfailResult="False"/>
          <jl:if test="${!SubscriptionErrorResponseExpected}">
               <testStep functionId="Step 28.1 VERIFY that a deviceInformationRequestMsg message was received." passfailResult="True">
                    <ri-MessageVerify msgType="REQUEST" elementName="deviceInformationRequestMsg" instanceName="tmdd:deviceInformationRequestMsg" elementType="message" functionId="Looking for deviceInformationRequestMsg"/>
               </testStep>
               <testStep functionId="Step 28.2 VERIFY that an organization-information data frame exists within message deviceInformationRequestMsg." passfailResult="True">
                    <ri-MessageVerify msgType="REQUEST" elementName="organization-information" instanceName="tmdd:deviceInformationRequestMsg" elementType="data-frame" functionId="Looking for deviceInformationRequestMsg"/>
               </testStep>
               <testStep functionId="Step 28.3 VERIFY that a device-type data element exists within message deviceInformationRequestMsg." passfailResult="True">
                    <ri-MessageVerify msgType="REQUEST" elementName="device-type" instanceName="tmdd:deviceInformationRequestMsg" elementType="data-element" functionId="Looking for deviceInformationRequestMsg"/>
               </testStep>
               <testStep functionId="Step 28.4 VERIFY that a device-information-type data element exists within message deviceInformationRequestMsg." passfailResult="True">
                    <ri-MessageVerify msgType="REQUEST" elementName="device-information-type" instanceName="tmdd:deviceInformationRequestMsg" elementType="data-element" functionId="Looking for deviceInformationRequestMsg"/>
               </testStep>
               <testStep functionId="Step 28.5 IF TMDD_N23R364_Authentication___Device_Information__DeviceAuth__Supported is equal to TRUE THEN CONTINUE; OTHERWISE skip the following substeps." passFailResult="False"/>
               <jl:if test="${TMDD_N23R364_Authentication___Device_Information__DeviceAuth__Supported}">
                    <testStep functionId="Step 28.5.1 VERIFY that an authentication data frame exists within message deviceInformationRequestMsg." passfailResult="True">
                         <ri-MessageVerify msgType="REQUEST" elementName="authentication" instanceName="tmdd:deviceInformationRequestMsg" elementType="data-frame" functionId="Looking for deviceInformationRequestMsg"/>
                    </testStep>
               </jl:if>
               <testStep functionId="Step 28.6 IF TMDD_N23R365_Operator_Identifier___Device_Information_Supported is equal to TRUE THEN CONTINUE; OTHERWISE skip the following substeps." passFailResult="False"/>
               <jl:if test="${TMDD_N23R365_Operator_Identifier___Device_Information_Supported}">
                    <testStep functionId="Step 28.6.1 VERIFY that an operator-id data element exists within each instance of data frame deviceInformationRequestMsg.authentication" passfailResult="True">
                         <ri-MessageVerify msgType="REQUEST" elementName="operator-id" instanceName="tmdd:deviceInformationRequestMsg.authentication" elementType="data-element" functionId="Looking for deviceInformationRequestMsg.authentication"/>
                    </testStep>
               </jl:if>
               <testStep functionId="Step 28.7 IF TMDD_N23R366_External_Center_Organization___Device_Information_Supported is equal to TRUE THEN CONTINUE; OTHERWISE skip the following substeps." passFailResult="False"/>
               <jl:if test="${TMDD_N23R366_External_Center_Organization___Device_Information_Supported}">
                    <testStep functionId="Step 28.7.1 VERIFY that an organization-requesting data frame exists within message deviceInformationRequestMsg." passfailResult="True">
                         <ri-MessageVerify msgType="REQUEST" elementName="organization-requesting" instanceName="tmdd:deviceInformationRequestMsg" elementType="data-frame" functionId="Looking for deviceInformationRequestMsg"/>
                    </testStep>
               </jl:if>
               <testStep functionId="Step 28.8 IF TMDD_N23R367_Device_Identifier_Filter_Supported is equal to TRUE THEN CONTINUE; OTHERWISE skip the following substeps." passFailResult="False"/>
               <jl:if test="${TMDD_N23R367_Device_Identifier_Filter_Supported}">
                    <testStep functionId="Step 28.8.1 VERIFY that a device-id-list data frame exists within each instance of data frame deviceInformationRequestMsg.device-filter" passfailResult="True">
                         <ri-MessageVerify msgType="REQUEST" elementName="device-id-list" instanceName="tmdd:deviceInformationRequestMsg.device-filter" elementType="data-element" functionId="Looking for deviceInformationRequestMsg.device-filter"/>
                    </testStep>
               </jl:if>
               <testStep functionId="Step 28.9 IF TMDD_N23R368_Roadway_Network_Identifier_Filter_Supported is equal to TRUE THEN CONTINUE; OTHERWISE skip the following substeps." passFailResult="False"/>
               <jl:if test="${TMDD_N23R368_Roadway_Network_Identifier_Filter_Supported}">
                    <testStep functionId="Step 28.9.1 VERIFY that a network-id-list data frame exists within each instance of data frame deviceInformationRequestMsg.device-filter" passfailResult="True">
                         <ri-MessageVerify msgType="REQUEST" elementName="network-id-list" instanceName="tmdd:deviceInformationRequestMsg.device-filter" elementType="data-element" functionId="Looking for deviceInformationRequestMsg.device-filter"/>
                    </testStep>
               </jl:if>
               <testStep functionId="Step 28.10 IF TMDD_N23R369_Link_Identifier_Filter_Supported is equal to TRUE THEN CONTINUE; OTHERWISE skip the following substeps." passFailResult="False"/>
               <jl:if test="${TMDD_N23R369_Link_Identifier_Filter_Supported}">
                    <testStep functionId="Step 28.10.1 VERIFY that a link-id-list data frame exists within each instance of data frame deviceInformationRequestMsg.device-filter" passfailResult="True">
                         <ri-MessageVerify msgType="REQUEST" elementName="link-id-list" instanceName="tmdd:deviceInformationRequestMsg.device-filter" elementType="data-element" functionId="Looking for deviceInformationRequestMsg.device-filter"/>
                    </testStep>
               </jl:if>
               <testStep functionId="Step 28.11 IF TMDD_N23R370_Route_Designator_Filter_Supported is equal to TRUE THEN CONTINUE; OTHERWISE skip the following substeps." passFailResult="False"/>
               <jl:if test="${TMDD_N23R370_Route_Designator_Filter_Supported}">
                    <testStep functionId="Step 28.11.1 VERIFY that a link-designator-list data frame exists within each instance of data frame deviceInformationRequestMsg.device-filter" passfailResult="True">
                         <ri-MessageVerify msgType="REQUEST" elementName="link-designator-list" instanceName="tmdd:deviceInformationRequestMsg.device-filter" elementType="data-element" functionId="Looking for deviceInformationRequestMsg.device-filter"/>
                    </testStep>
               </jl:if>
               <testStep functionId="Step 28.12 IF TMDD_N23R371_Linear_Reference_Filter_Supported is equal to TRUE THEN CONTINUE; OTHERWISE skip the following substeps." passFailResult="False"/>
               <jl:if test="${TMDD_N23R371_Linear_Reference_Filter_Supported}">
                    <testStep functionId="Step 28.12.1 VERIFY that a linear-reference data frame exists within each instance of data frame deviceInformationRequestMsg.device-filter" passfailResult="True">
                         <ri-MessageVerify msgType="REQUEST" elementName="linear-reference" instanceName="tmdd:deviceInformationRequestMsg.device-filter" elementType="data-frame" functionId="Looking for deviceInformationRequestMsg.device-filter"/>
                    </testStep>
               </jl:if>
               <testStep functionId="Step 28.13 IF TMDD_N23R471_Detector_Station___Data_Request_Supported is equal to TRUE THEN CONTINUE; OTHERWISE skip the following substeps." passFailResult="False"/>
               <jl:if test="${TMDD_N23R471_Detector_Station___Data_Request_Supported}"></jl:if>
               <testStep functionId="Step 28.14 IF TMDD_N23R472_Data_Type_Request_Supported is equal to TRUE THEN CONTINUE; OTHERWISE skip the following substeps." passFailResult="False"/>
               <jl:if test="${TMDD_N23R472_Data_Type_Request_Supported}"></jl:if>
               <testStep functionId="Step 28.15 VERIFY that the values within the REQUEST message are correct per the TMDD standard and known operational conditions.">
                    <AUTO-VERIFY-MESSAGE functionId="Automatically Verify message content" msgName="REQUEST" verificationSpec="${VerificationSpec}"/>
                    <USER-VERIFY-MESSAGE functionId="The User Verifies the message content" msgName="REQUEST" optionList="TMDD_N23R364_Authentication___Device_Information__DeviceAuth__Supported,authentication,tmdd:deviceInformationRequestMsg;TMDD_N23R365_Operator_Identifier___Device_Information_Supported,operator-id,tmdd:deviceInformationRequestMsg.authentication;TMDD_N23R366_External_Center_Organization___Device_Information_Supported,organization-requesting,tmdd:deviceInformationRequestMsg;TMDD_N23R367_Device_Identifier_Filter_Supported,device-id-list,tmdd:deviceInformationRequestMsg.device-filter;TMDD_N23R368_Roadway_Network_Identifier_Filter_Supported,network-id-list,tmdd:deviceInformationRequestMsg.device-filter;TMDD_N23R369_Link_Identifier_Filter_Supported,link-id-list,tmdd:deviceInformationRequestMsg.device-filter;TMDD_N23R370_Route_Designator_Filter_Supported,link-designator-list,tmdd:deviceInformationRequestMsg.device-filter;TMDD_N23R371_Linear_Reference_Filter_Supported,linear-reference,tmdd:deviceInformationRequestMsg.device-filter;TMDD_N23R14_Restrictions___Error_Report_Supported,restrictions,tmdd:errorReportMsg;" userDataFile="${RI_USERTCDATAFILE}"/>
               </testStep>
               <testStep functionId=" Step 28.16 CONFIGURE: Set CONTENTVERIFIED to True" passfailResult="False">
                    <jl:set var="CONTENTVERIFIED" value="true"/>
               </testStep>
               <postcondition>
                    <testStep functionId="Step 28.17 POSTCONDITION: SUBSCRIPTION-OC-REPLY with the following parameters:   DIALOG=dlDetectorDataSubscription RESPONSETIMEREQUIRED=TMDD_N23R468_Subscribe_to_Detector_Data_Information_Parameter CONTENTVERIFIED = CONTENTVERIFIED SUBSCRIPTIONRESPONSEMESSAGE = SubscriptionResponseMessage ">
                         <SUBSCRIPTION-OC-REPLY Dialog="dlDetectorDataSubscription" functionId="dlDetectorDataSubscription" RESPONSETIMEREQUIRED="${TMDD_N23R468_Subscribe_to_Detector_Data_Information_Parameter}" CONTENTVERIFIED="${CONTENTVERIFIED}" SUBSCRIPTIONRESPONSEMESSAGE="${SubscriptionResponseMessage}"/>
                    </testStep>
               </postcondition>
               <testStep functionId="Step 28.18 WHILE CONTINUEPUBLICATION is equal to TRUE then CONTINUE, OTHERWISE skip the following substeps.  Note:If a verification step fails, then test execution will proceed at the next subsequent Post Condition step, if present.  Otherwise, test execution will proceed to the final Exit step."/>
               <jl:while test="${CONTINUEPUBLICATION}">
                    <testStep functionId="Step 28.18.1 PUBLICATION-OC with the following parameters:   DIALOG=dlDetectorDataUpdate RESPONSETIMEREQUIRED=TMDD_N23R467_Publish_Detector_Data_Parameter PUBLICATIONMESSAGE = PublicationMessage PUBLICATIONCOUNT = PublicationCount PUBLICATIONERRORRESPONSEEXPECTED = PublicationErrorResponseExpected PUBLICATIONERRORTYPEEXPECTED = PublicationErrorTypeExpected  Returns: CONTINUEPUBLICATION ">
                         <PUBLICATION-OC Dialog="dlDetectorDataUpdate" functionId="dlDetectorDataUpdate" RESPONSETIMEREQUIRED="${TMDD_N23R467_Publish_Detector_Data_Parameter}" PUBLICATIONMESSAGE="${PublicationMessage}" PUBLICATIONCOUNT="${PublicationCount}" PUBLICATIONERRORRESPONSEEXPECTED="${PublicationErrorResponseExpected}" PUBLICATIONERRORTYPEEXPECTED="${PublicationErrorTypeExpected}"/>
                    </testStep>
                    <testStep functionId="Step 28.18.2 IF PublicationErrorResponseExpected is equal to TRUE THEN CONTINUE, OTHERWISE skip the following substeps.  If a verification step fails, then test execution will proceed at the next subsequent Post Condition step, if present.  Otherwise, test execution will proceed to the final Exit step." passfailResult="False"/>
                    <jl:if test="${PublicationErrorResponseExpected}">
                         <testStep functionId="Step 28.18.2.1 VERIFY that an errorReportMsg message was received." passfailResult="True">
                              <ri-MessageVerify msgType="REQUEST" elementName="errorReportMsg" instanceName="tmdd:errorReportMsg" elementType="message" functionId="Looking for errorReportMsg"/>
                         </testStep>
                         <testStep functionId="Step 28.18.2.2 VERIFY that an organization-information data frame exists within message errorReportMsg." passfailResult="True">
                              <ri-MessageVerify msgType="REQUEST" elementName="organization-information" instanceName="tmdd:errorReportMsg" elementType="data-frame" functionId="Looking for errorReportMsg"/>
                         </testStep>
                         <testStep functionId="Step 28.18.2.3 VERIFY that an organization-requesting data frame exists within message errorReportMsg." passfailResult="True">
                              <ri-MessageVerify msgType="REQUEST" elementName="organization-requesting" instanceName="tmdd:errorReportMsg" elementType="data-frame" functionId="Looking for errorReportMsg"/>
                         </testStep>
                         <testStep functionId="Step 28.18.2.4 VERIFY that an error-code data element exists within message errorReportMsg." passfailResult="True">
                              <ri-MessageVerify msgType="REQUEST" elementName="error-code" instanceName="tmdd:errorReportMsg" elementType="data-element" functionId="Looking for errorReportMsg"/>
                         </testStep>
                         <testStep functionId="Step 28.18.2.5 VERIFY that an error-text data element exists within message errorReportMsg." passfailResult="True">
                              <ri-MessageVerify msgType="REQUEST" elementName="error-text" instanceName="tmdd:errorReportMsg" elementType="data-element" functionId="Looking for errorReportMsg"/>
                         </testStep>
                         <testStep functionId="Step 28.18.2.6 VERIFY that data element error-code is set to PublicationErrorResponseTypeExpected." passfailResult="True">
                              <ri-MessageVerify msgType="REQUEST" elementName="error-code" instanceName="tmdd:errorReportMsg" instanceValue="${PublicationErrorResponseTypeExpected}" elementType="data-element" functionId="Looking for errorReportMsg"/>
                         </testStep>
                         <testStep functionId="Step 28.18.2.7 IF TMDD_N23R14_Restrictions___Error_Report_Supported is equal to TRUE THEN CONTINUE; OTHERWISE skip the following substeps." passFailResult="False"/>
                         <jl:if test="${TMDD_N23R14_Restrictions___Error_Report_Supported}">
                              <testStep functionId="Step 28.18.2.7.1 VERIFY that a restrictions data frame exists within message errorReportMsg." passfailResult="True">
                                   <ri-MessageVerify msgType="REQUEST" elementName="restrictions" instanceName="tmdd:errorReportMsg" elementType="data-frame" functionId="Looking for errorReportMsg"/>
                              </testStep>
                         </jl:if>
                    </jl:if>
               </jl:while>
          </jl:if>
          <testStep functionId=" Step 29 EXIT" passfailResult="False"/>
     </C2CRI-session>
</testprocedure>