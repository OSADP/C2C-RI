<?xml version="1.0" encoding="UTF-8"?>
<!--Title:  TPS-16-dlLinkStatusRequest-OC
       Description:  This test procedure is called by a test case and is used to verify the SUTs support of the dlLinkStatusRequest dialog as an OC using variables provided by the calling test case.  
This procedure supports verification of requirements related to user need 2.3.4.3 [Need to Share Link Data] and is used for both valid and invalid test cases.
       Version/Date: 2013/11/28 11:37:29-->
<testprocedure xmlns="jelly:jameleon" xmlns:jl="jelly:core">
     <test-case-id>${C2CRITestCaseID}</test-case-id>
     <test-case-summary>This test procedure is called by a test case and is used to verify the SUTs support of the dlLinkStatusRequest dialog as an OC using variables provided by the calling test case.  
This procedure supports verification of requirements related to user need 2.3.4.3 [Need to Share Link Data] and is used for both valid and invalid test cases.</test-case-summary>
     <testStep functionId="Step 1 CONFIGURE: Determine the Application Layer Standard that will be used for this test.  RECORD this information as: ApplicationLayerStandard:  ${ApplicationLayerStandard}" passfailResult="False "/>
     <testStep functionId="Step 2 CONFIGURE: Determine the dialog performance requirement for Send Link Status Information Upon Request (NTRM 3.3.4.3.2.1}.  RECORD this value as: TMDD_N16R275_Send_Link_Status_Information_Upon_Request_Parameter = ${TMDD_N16R275_Send_Link_Status_Information_Upon_Request_Parameter}" passfailResult="False"/>
     <testStep functionId="Step 3 CONFIGURE: Determine whether Restrictions - Link Status is required by the specification. (NRTM 3.3.4.3.2.5.2.1).  RECORD this information as: TMDD_N16R281_Restrictions___Link_Status_Supported = ${TMDD_N16R281_Restrictions___Link_Status_Supported}" passfailResult="False"/>
     <testStep functionId="Step 4 CONFIGURE: Determine whether Link Name - Link Status is required by the specification. (NRTM 3.3.4.3.2.5.2.2).  RECORD this information as: TMDD_N16R282_Link_Name___Link_Status_Supported = ${TMDD_N16R282_Link_Name___Link_Status_Supported}" passfailResult="False"/>
     <testStep functionId="Step 5 CONFIGURE: Determine whether Link Direction - Link Status is required by the specification. (NRTM 3.3.4.3.2.5.2.3).  RECORD this information as: TMDD_N16R283_Link_Direction___Link_Status_Supported = ${TMDD_N16R283_Link_Direction___Link_Status_Supported}" passfailResult="False"/>
     <testStep functionId="Step 6 CONFIGURE: Determine whether Lanes Open is required by the specification. (NRTM 3.3.4.3.2.5.2.4).  RECORD this information as: TMDD_N16R284_Lanes_Open_Supported = ${TMDD_N16R284_Lanes_Open_Supported}" passfailResult="False"/>
     <testStep functionId="Step 7 CONFIGURE: Determine whether Link Priority is required by the specification. (NRTM 3.3.4.3.2.5.2.5).  RECORD this information as: TMDD_N16R285_Link_Priority_Supported = ${TMDD_N16R285_Link_Priority_Supported}" passfailResult="False"/>
     <testStep functionId="Step 8 CONFIGURE: Determine whether Link Restrictions - Axles is required by the specification. (NRTM 3.3.4.3.2.5.2.6).  RECORD this information as: TMDD_N16R286_Link_Restrictions___Axles_Supported = ${TMDD_N16R286_Link_Restrictions___Axles_Supported}" passfailResult="False"/>
     <testStep functionId="Step 9 CONFIGURE: Determine whether Link Restrictions - Height is required by the specification. (NRTM 3.3.4.3.2.5.2.7).  RECORD this information as: TMDD_N16R287_Link_Restrictions___Height_Supported = ${TMDD_N16R287_Link_Restrictions___Height_Supported}" passfailResult="False"/>
     <testStep functionId="Step 10 CONFIGURE: Determine whether Link Restrictions - Length is required by the specification. (NRTM 3.3.4.3.2.5.2.8).  RECORD this information as: TMDD_N16R288_Link_Restrictions___Length_Supported = ${TMDD_N16R288_Link_Restrictions___Length_Supported}" passfailResult="False"/>
     <testStep functionId="Step 11 CONFIGURE: Determine whether Link Restrictions - Weight is required by the specification. (NRTM 3.3.4.3.2.5.2.9).  RECORD this information as: TMDD_N16R289_Link_Restrictions___Weight_Supported = ${TMDD_N16R289_Link_Restrictions___Weight_Supported}" passfailResult="False"/>
     <testStep functionId="Step 12 CONFIGURE: Determine whether Link Restrictions - Width is required by the specification. (NRTM 3.3.4.3.2.5.2.10).  RECORD this information as: TMDD_N16R290_Link_Restrictions___Width_Supported = ${TMDD_N16R290_Link_Restrictions___Width_Supported}" passfailResult="False"/>
     <testStep functionId="Step 13 CONFIGURE: Determine whether Link Restrictions - Axle Weight is required by the specification. (NRTM 3.3.4.3.2.5.2.11).  RECORD this information as: TMDD_N16R291_Link_Restrictions___Axle_Weight_Supported = ${TMDD_N16R291_Link_Restrictions___Axle_Weight_Supported}" passfailResult="False"/>
     <testStep functionId="Step 14 CONFIGURE: Determine whether Link Restrictions Units is required by the specification. (NRTM 3.3.4.3.2.5.2.12).  RECORD this information as: TMDD_N16R292_Link_Restrictions_Units_Supported = ${TMDD_N16R292_Link_Restrictions_Units_Supported}" passfailResult="False"/>
     <testStep functionId="Step 15 CONFIGURE: Determine whether Link Surface Conditions is required by the specification. (NRTM 3.3.4.3.2.5.2.13).  RECORD this information as: TMDD_N16R293_Link_Surface_Conditions_Supported = ${TMDD_N16R293_Link_Surface_Conditions_Supported}" passfailResult="False"/>
     <testStep functionId="Step 16 CONFIGURE: Determine whether Link Saturation is required by the specification. (NRTM 3.3.4.3.2.5.2.14).  RECORD this information as: TMDD_N16R294_Link_Saturation_Supported = ${TMDD_N16R294_Link_Saturation_Supported}" passfailResult="False"/>
     <testStep functionId="Step 17 CONFIGURE: Determine whether Link Saturation Threshold is required by the specification. (NRTM 3.3.4.3.2.5.2.15).  RECORD this information as: TMDD_N16R295_Link_Saturation_Threshold_Supported = ${TMDD_N16R295_Link_Saturation_Threshold_Supported}" passfailResult="False"/>
     <testStep functionId="Step 18 CONFIGURE: Determine whether Link Level of Service is required by the specification. (NRTM 3.3.4.3.2.5.2.16).  RECORD this information as: TMDD_N16R296_Link_Level_of_Service_Supported = ${TMDD_N16R296_Link_Level_of_Service_Supported}" passfailResult="False"/>
     <testStep functionId="Step 19 CONFIGURE: Determine whether Lane Numbers is required by the specification. (NRTM 3.3.4.3.2.5.2.17).  RECORD this information as: TMDD_N16R297_Lane_Numbers_Supported = ${TMDD_N16R297_Lane_Numbers_Supported}" passfailResult="False"/>
     <testStep functionId="Step 20 CONFIGURE: Determine whether Link Data Stored Type is required by the specification. (NRTM 3.3.4.3.2.5.2.18).  RECORD this information as: TMDD_N16R298_Link_Data_Stored_Type_Supported = ${TMDD_N16R298_Link_Data_Stored_Type_Supported}" passfailResult="False"/>
     <testStep functionId="Step 21 CONFIGURE: Determine whether Roadway Event Source is required by the specification. (NRTM 3.3.4.3.2.5.2.19).  RECORD this information as: TMDD_N16R299_Roadway_Event_Source_Supported = ${TMDD_N16R299_Roadway_Event_Source_Supported}" passfailResult="False"/>
     <testStep functionId="Step 22 CONFIGURE: Determine whether Traffic Data Type is required by the specification. (NRTM 3.3.4.3.2.5.2.20).  RECORD this information as: TMDD_N16R300_Traffic_Data_Type_Supported = ${TMDD_N16R300_Traffic_Data_Type_Supported}" passfailResult="False"/>
     <testStep functionId="Step 23 CONFIGURE: Determine whether Link Stops is required by the specification. (NRTM 3.3.4.3.2.5.2.21).  RECORD this information as: TMDD_N16R301_Link_Stops_Supported = ${TMDD_N16R301_Link_Stops_Supported}" passfailResult="False"/>
     <testStep functionId="Step 24 CONFIGURE: Determine whether Link Delay Time is required by the specification. (NRTM 3.3.4.3.2.5.2.22).  RECORD this information as: TMDD_N16R302_Link_Delay_Time_Supported = ${TMDD_N16R302_Link_Delay_Time_Supported}" passfailResult="False"/>
     <testStep functionId="Step 25 CONFIGURE: Determine whether Link Delay Time - Alternate Route is required by the specification. (NRTM 3.3.4.3.2.5.2.23).  RECORD this information as: TMDD_N16R303_Link_Delay_Time___Alternate_Route_Supported = ${TMDD_N16R303_Link_Delay_Time___Alternate_Route_Supported}" passfailResult="False"/>
     <testStep functionId="Step 26 CONFIGURE: Determine whether Link Headway is required by the specification. (NRTM 3.3.4.3.2.5.2.24).  RECORD this information as: TMDD_N16R304_Link_Headway_Supported = ${TMDD_N16R304_Link_Headway_Supported}" passfailResult="False"/>
     <testStep functionId="Step 27 CONFIGURE: Determine whether Link Travel Time is required by the specification. (NRTM 3.3.4.3.2.5.2.25).  RECORD this information as: TMDD_N16R305_Link_Travel_Time_Supported = ${TMDD_N16R305_Link_Travel_Time_Supported}" passfailResult="False"/>
     <testStep functionId="Step 28 CONFIGURE: Determine whether Link Existing Capacity is required by the specification. (NRTM 3.3.4.3.2.5.2.26).  RECORD this information as: TMDD_N16R306_Link_Existing_Capacity_Supported = ${TMDD_N16R306_Link_Existing_Capacity_Supported}" passfailResult="False"/>
     <testStep functionId="Step 29 CONFIGURE: Determine whether Link Travel Time Increase is required by the specification. (NRTM 3.3.4.3.2.5.2.27).  RECORD this information as: TMDD_N16R307_Link_Travel_Time_Increase_Supported = ${TMDD_N16R307_Link_Travel_Time_Increase_Supported}" passfailResult="False"/>
     <testStep functionId="Step 30 CONFIGURE: Determine whether Link Average Speed is required by the specification. (NRTM 3.3.4.3.2.5.2.28).  RECORD this information as: TMDD_N16R308_Link_Average_Speed_Supported = ${TMDD_N16R308_Link_Average_Speed_Supported}" passfailResult="False"/>
     <testStep functionId="Step 31 CONFIGURE: Determine whether Link Estimated Speed is required by the specification. (NRTM 3.3.4.3.2.5.2.29).  RECORD this information as: TMDD_N16R309_Link_Estimated_Speed_Supported = ${TMDD_N16R309_Link_Estimated_Speed_Supported}" passfailResult="False"/>
     <testStep functionId="Step 32 CONFIGURE: Determine whether Link Speed Limit - Link Status is required by the specification. (NRTM 3.3.4.3.2.5.2.30).  RECORD this information as: TMDD_N16R310_Link_Speed_Limit___Link_Status_Supported = ${TMDD_N16R310_Link_Speed_Limit___Link_Status_Supported}" passfailResult="False"/>
     <testStep functionId="Step 33 CONFIGURE: Determine whether Link Current Advisory Speed is required by the specification. (NRTM 3.3.4.3.2.5.2.31).  RECORD this information as: TMDD_N16R311_Link_Current_Advisory_Speed_Supported = ${TMDD_N16R311_Link_Current_Advisory_Speed_Supported}" passfailResult="False"/>
     <testStep functionId="Step 34 CONFIGURE: Determine whether Link Truck Speed Limit - Link Status is required by the specification. (NRTM 3.3.4.3.2.5.2.32).  RECORD this information as: TMDD_N16R312_Link_Truck_Speed_Limit___Link_Status_Supported = ${TMDD_N16R312_Link_Truck_Speed_Limit___Link_Status_Supported}" passfailResult="False"/>
     <testStep functionId="Step 35 CONFIGURE: Determine whether Speed Limit Units - Link Status is required by the specification. (NRTM 3.3.4.3.2.5.2.33).  RECORD this information as: TMDD_N16R313_Speed_Limit_Units___Link_Status_Supported = ${TMDD_N16R313_Speed_Limit_Units___Link_Status_Supported}" passfailResult="False"/>
     <testStep functionId="Step 36 CONFIGURE: Determine whether Link Density is required by the specification. (NRTM 3.3.4.3.2.5.2.34).  RECORD this information as: TMDD_N16R314_Link_Density_Supported = ${TMDD_N16R314_Link_Density_Supported}" passfailResult="False"/>
     <testStep functionId="Step 37 CONFIGURE: Determine whether Link Occupancy is required by the specification. (NRTM 3.3.4.3.2.5.2.35).  RECORD this information as: TMDD_N16R315_Link_Occupancy_Supported = ${TMDD_N16R315_Link_Occupancy_Supported}" passfailResult="False"/>
     <testStep functionId="Step 38 CONFIGURE: Determine whether Link Volume is required by the specification. (NRTM 3.3.4.3.2.5.2.36).  RECORD this information as: TMDD_N16R316_Link_Volume_Supported = ${TMDD_N16R316_Link_Volume_Supported}" passfailResult="False"/>
     <testStep functionId="Step 39 CONFIGURE: Determine whether Event Description Time - Link Status is required by the specification. (NRTM 3.3.4.3.2.5.2.37).  RECORD this information as: TMDD_N16R317_Event_Description_Time___Link_Status_Supported = ${TMDD_N16R317_Event_Description_Time___Link_Status_Supported}" passfailResult="False"/>
     <testStep functionId="Step 40 CONFIGURE: Determine whether Link Status Date and Time Change Information is required by the specification. (NRTM 3.3.4.3.2.5.2.38).  RECORD this information as: TMDD_N16R318_Link_Status_Date_and_Time_Change_Information_Supported = ${TMDD_N16R318_Link_Status_Date_and_Time_Change_Information_Supported}" passfailResult="False"/>
     <testStep functionId="Step 41 CONFIGURE: Determine whether Restrictions - Error Report is required by the specification. (NRTM 3.3.1.4.1.2.1).  RECORD this information as: TMDD_N16R14_Restrictions___Error_Report_Supported = ${TMDD_N16R14_Restrictions___Error_Report_Supported}" passfailResult="False"/>
     <C2CRI-session beginSession="true" infoStd="TMDDv3.03a" appStd="${ApplicationLayerStandard}" useWSDL="true" testCaseIdentifier="${C2CRITestCaseID}" riMode="EC">
          <testStep functionId="Step 42 CONFIGURE: Define the message that will be sent to the SUT.  RECORD this information as: RequestMessage:  ${RequestMessage}" passfailResult="False"/>
          <testStep functionId="Step 43 CONFIGURE: Determine whether an error response message is expected for this test.  RECORD this information as: ErrorResponseExpected:  ${ErrorResponseExpected}" passfailResult="False"/>
          <jl:if test="${ErrorResponseExpected}">
               <testStep functionId="Step 44 CONFIGURE: IF ErrorResponseExpected is true, determine the expected error code response for this test.  RECORD this information as:  ErrorTypeExpected:  ${ErrorTypeExpected}" passfailResult="False"/>
          </jl:if>
          <testStep functionId="Step 45 REQUEST-RESPONSE-EC with the following parameters:   DIALOG=dlLinkStatusRequest RESPONSETIMEREQUIRED=TMDD_N16R275_Send_Link_Status_Information_Upon_Request_Parameter REQUESTMESSAGE = RequestMessage ERRORRESPONSEEXPECTED = ErrorResponseExpected ERRORTYPEEXPECTED = ErrorTypeExpected ">
               <REQUEST-RESPONSE-EC Dialog="dlLinkStatusRequest" functionId="dlLinkStatusRequest" RESPONSETIMEREQUIRED="${TMDD_N16R275_Send_Link_Status_Information_Upon_Request_Parameter}" REQUESTMESSAGE="${RequestMessage}" ERRORRESPONSEEXPECTED="${ErrorResponseExpected}" ERRORTYPEEXPECTED="${ErrorTypeExpected}"/>
          </testStep>
          <testStep functionId="Step 46 IF ErrorResponseExpected is not equal to TRUE THEN CONTINUE, OTHERWISE skip the following substeps.  Note: If a verification step fails, then test execution will proceed at the next subsequent Post Condition step, if present.  Otherwise, test execution will proceed to the final Exit step." passfailResult="False"/>
          <jl:if test="${!ErrorResponseExpected}">
               <testStep functionId="Step 46.1 VERIFY that a linkStatusMsg message was received." passfailResult="True">
                    <ri-MessageVerify msgType="RESPONSE" elementName="linkStatusMsg" instanceName="tmdd:linkStatusMsg" elementType="message" functionId="Looking for linkStatusMsg"/>
               </testStep>
               <testStep functionId="Step 46.2 VERIFY that an organization-information data frame exists within each instance of data frame linkStatusMsg.link-status-item" passfailResult="True">
                    <ri-MessageVerify msgType="RESPONSE" elementName="organization-information" instanceName="tmdd:linkStatusMsg.link-status-item" elementType="data-frame" functionId="Looking for linkStatusMsg.link-status-item"/>
               </testStep>
               <testStep functionId="Step 46.3 VERIFY that a network-id data element exists within each instance of data frame linkStatusMsg.link-status-item.link-status-list.link" passfailResult="True">
                    <ri-MessageVerify msgType="RESPONSE" elementName="network-id" instanceName="tmdd:linkStatusMsg.link-status-item.link-status-list.link" elementType="data-element" functionId="Looking for linkStatusMsg.link-status-item.link-status-list.link"/>
               </testStep>
               <testStep functionId="Step 46.4 VERIFY that a link-id data element exists within each instance of data frame linkStatusMsg.link-status-item.link-status-list.link" passfailResult="True">
                    <ri-MessageVerify msgType="RESPONSE" elementName="link-id" instanceName="tmdd:linkStatusMsg.link-status-item.link-status-list.link" elementType="data-element" functionId="Looking for linkStatusMsg.link-status-item.link-status-list.link"/>
               </testStep>
               <testStep functionId="Step 46.5 VERIFY that a link-status data element exists within each instance of data frame linkStatusMsg.link-status-item.link-status-list.link" passfailResult="True">
                    <ri-MessageVerify msgType="RESPONSE" elementName="link-status" instanceName="tmdd:linkStatusMsg.link-status-item.link-status-list.link" elementType="data-element" functionId="Looking for linkStatusMsg.link-status-item.link-status-list.link"/>
               </testStep>
               <testStep functionId="Step 46.6 IF TMDD_N16R281_Restrictions___Link_Status_Supported is equal to TRUE THEN CONTINUE; OTHERWISE skip the following substeps." passFailResult="False"/>
               <jl:if test="${TMDD_N16R281_Restrictions___Link_Status_Supported}">
                    <testStep functionId="Step 46.6.1 VERIFY that a restrictions data frame exists within each instance of data frame linkStatusMsg.link-status-item" passfailResult="True">
                         <ri-MessageVerify msgType="RESPONSE" elementName="restrictions" instanceName="tmdd:linkStatusMsg.link-status-item" elementType="data-frame" functionId="Looking for linkStatusMsg.link-status-item"/>
                    </testStep>
               </jl:if>
               <testStep functionId="Step 46.7 IF TMDD_N16R282_Link_Name___Link_Status_Supported is equal to TRUE THEN CONTINUE; OTHERWISE skip the following substeps." passFailResult="False"/>
               <jl:if test="${TMDD_N16R282_Link_Name___Link_Status_Supported}">
                    <testStep functionId="Step 46.7.1 VERIFY that a link-name data element exists within each instance of data frame linkStatusMsg.link-status-item.link-status-list.link" passfailResult="True">
                         <ri-MessageVerify msgType="RESPONSE" elementName="link-name" instanceName="tmdd:linkStatusMsg.link-status-item.link-status-list.link" elementType="data-element" functionId="Looking for linkStatusMsg.link-status-item.link-status-list.link"/>
                    </testStep>
               </jl:if>
               <testStep functionId="Step 46.8 IF TMDD_N16R283_Link_Direction___Link_Status_Supported is equal to TRUE THEN CONTINUE; OTHERWISE skip the following substeps." passFailResult="False"/>
               <jl:if test="${TMDD_N16R283_Link_Direction___Link_Status_Supported}">
                    <testStep functionId="Step 46.8.1 VERIFY that a link-direction data element exists within each instance of data frame linkStatusMsg.link-status-item.link-status-list.link" passfailResult="True">
                         <ri-MessageVerify msgType="RESPONSE" elementName="link-direction" instanceName="tmdd:linkStatusMsg.link-status-item.link-status-list.link" elementType="data-element" functionId="Looking for linkStatusMsg.link-status-item.link-status-list.link"/>
                    </testStep>
               </jl:if>
               <testStep functionId="Step 46.9 IF TMDD_N16R284_Lanes_Open_Supported is equal to TRUE THEN CONTINUE; OTHERWISE skip the following substeps." passFailResult="False"/>
               <jl:if test="${TMDD_N16R284_Lanes_Open_Supported}">
                    <testStep functionId="Step 46.9.1 VERIFY that a lanes-number-open data element exists within each instance of data frame linkStatusMsg.link-status-item.link-status-list.link" passfailResult="True">
                         <ri-MessageVerify msgType="RESPONSE" elementName="lanes-number-open" instanceName="tmdd:linkStatusMsg.link-status-item.link-status-list.link" elementType="data-element" functionId="Looking for linkStatusMsg.link-status-item.link-status-list.link"/>
                    </testStep>
               </jl:if>
               <testStep functionId="Step 46.10 IF TMDD_N16R285_Link_Priority_Supported is equal to TRUE THEN CONTINUE; OTHERWISE skip the following substeps." passFailResult="False"/>
               <jl:if test="${TMDD_N16R285_Link_Priority_Supported}">
                    <testStep functionId="Step 46.10.1 VERIFY that a priority-type data element exists within each instance of data frame linkStatusMsg.link-status-item.link-status-list.link" passfailResult="True">
                         <ri-MessageVerify msgType="RESPONSE" elementName="priority-type" instanceName="tmdd:linkStatusMsg.link-status-item.link-status-list.link" elementType="data-element" functionId="Looking for linkStatusMsg.link-status-item.link-status-list.link"/>
                    </testStep>
               </jl:if>
               <testStep functionId="Step 46.11 IF TMDD_N16R286_Link_Restrictions___Axles_Supported is equal to TRUE THEN CONTINUE; OTHERWISE skip the following substeps." passFailResult="False"/>
               <jl:if test="${TMDD_N16R286_Link_Restrictions___Axles_Supported}">
                    <testStep functionId="Step 46.11.1 VERIFY that a restriction-axle-count data element exists within each instance of data frame linkStatusMsg.link-status-item.link-status-list.link" passfailResult="True">
                         <ri-MessageVerify msgType="RESPONSE" elementName="restriction-axle-count" instanceName="tmdd:linkStatusMsg.link-status-item.link-status-list.link" elementType="data-element" functionId="Looking for linkStatusMsg.link-status-item.link-status-list.link"/>
                    </testStep>
               </jl:if>
               <testStep functionId="Step 46.12 IF TMDD_N16R287_Link_Restrictions___Height_Supported is equal to TRUE THEN CONTINUE; OTHERWISE skip the following substeps." passFailResult="False"/>
               <jl:if test="${TMDD_N16R287_Link_Restrictions___Height_Supported}">
                    <testStep functionId="Step 46.12.1 VERIFY that a restriction-height data element exists within each instance of data frame linkStatusMsg.link-status-item.link-status-list.link" passfailResult="True">
                         <ri-MessageVerify msgType="RESPONSE" elementName="restriction-height" instanceName="tmdd:linkStatusMsg.link-status-item.link-status-list.link" elementType="data-element" functionId="Looking for linkStatusMsg.link-status-item.link-status-list.link"/>
                    </testStep>
               </jl:if>
               <testStep functionId="Step 46.13 IF TMDD_N16R288_Link_Restrictions___Length_Supported is equal to TRUE THEN CONTINUE; OTHERWISE skip the following substeps." passFailResult="False"/>
               <jl:if test="${TMDD_N16R288_Link_Restrictions___Length_Supported}">
                    <testStep functionId="Step 46.13.1 VERIFY that a restriction-length data element exists within each instance of data frame linkStatusMsg.link-status-item.link-status-list.link" passfailResult="True">
                         <ri-MessageVerify msgType="RESPONSE" elementName="restriction-length" instanceName="tmdd:linkStatusMsg.link-status-item.link-status-list.link" elementType="data-element" functionId="Looking for linkStatusMsg.link-status-item.link-status-list.link"/>
                    </testStep>
               </jl:if>
               <testStep functionId="Step 46.14 IF TMDD_N16R289_Link_Restrictions___Weight_Supported is equal to TRUE THEN CONTINUE; OTHERWISE skip the following substeps." passFailResult="False"/>
               <jl:if test="${TMDD_N16R289_Link_Restrictions___Weight_Supported}">
                    <testStep functionId="Step 46.14.1 VERIFY that a restriction-weight data element exists within each instance of data frame linkStatusMsg.link-status-item.link-status-list.link" passfailResult="True">
                         <ri-MessageVerify msgType="RESPONSE" elementName="restriction-weight" instanceName="tmdd:linkStatusMsg.link-status-item.link-status-list.link" elementType="data-element" functionId="Looking for linkStatusMsg.link-status-item.link-status-list.link"/>
                    </testStep>
               </jl:if>
               <testStep functionId="Step 46.15 IF TMDD_N16R290_Link_Restrictions___Width_Supported is equal to TRUE THEN CONTINUE; OTHERWISE skip the following substeps." passFailResult="False"/>
               <jl:if test="${TMDD_N16R290_Link_Restrictions___Width_Supported}">
                    <testStep functionId="Step 46.15.1 VERIFY that a restriction-width data element exists within each instance of data frame linkStatusMsg.link-status-item.link-status-list.link" passfailResult="True">
                         <ri-MessageVerify msgType="RESPONSE" elementName="restriction-width" instanceName="tmdd:linkStatusMsg.link-status-item.link-status-list.link" elementType="data-element" functionId="Looking for linkStatusMsg.link-status-item.link-status-list.link"/>
                    </testStep>
               </jl:if>
               <testStep functionId="Step 46.16 IF TMDD_N16R291_Link_Restrictions___Axle_Weight_Supported is equal to TRUE THEN CONTINUE; OTHERWISE skip the following substeps." passFailResult="False"/>
               <jl:if test="${TMDD_N16R291_Link_Restrictions___Axle_Weight_Supported}">
                    <testStep functionId="Step 46.16.1 VERIFY that a restriction-weight-axle data element exists within each instance of data frame linkStatusMsg.link-status-item.link-status-list.link" passfailResult="True">
                         <ri-MessageVerify msgType="RESPONSE" elementName="restriction-weight-axle" instanceName="tmdd:linkStatusMsg.link-status-item.link-status-list.link" elementType="data-element" functionId="Looking for linkStatusMsg.link-status-item.link-status-list.link"/>
                    </testStep>
               </jl:if>
               <testStep functionId="Step 46.17 IF TMDD_N16R292_Link_Restrictions_Units_Supported is equal to TRUE THEN CONTINUE; OTHERWISE skip the following substeps." passFailResult="False"/>
               <jl:if test="${TMDD_N16R292_Link_Restrictions_Units_Supported}">
                    <testStep functionId="Step 46.17.1 VERIFY that a restriction-units data element exists within each instance of data frame linkStatusMsg.link-status-item.link-status-list.link" passfailResult="True">
                         <ri-MessageVerify msgType="RESPONSE" elementName="restriction-units" instanceName="tmdd:linkStatusMsg.link-status-item.link-status-list.link" elementType="data-element" functionId="Looking for linkStatusMsg.link-status-item.link-status-list.link"/>
                    </testStep>
               </jl:if>
               <testStep functionId="Step 46.18 IF TMDD_N16R293_Link_Surface_Conditions_Supported is equal to TRUE THEN CONTINUE; OTHERWISE skip the following substeps." passFailResult="False"/>
               <jl:if test="${TMDD_N16R293_Link_Surface_Conditions_Supported}">
                    <testStep functionId="Step 46.18.1 VERIFY that a surface-condition data element exists within each instance of data frame linkStatusMsg.link-status-item.link-status-list.link" passfailResult="True">
                         <ri-MessageVerify msgType="RESPONSE" elementName="surface-condition" instanceName="tmdd:linkStatusMsg.link-status-item.link-status-list.link" elementType="data-element" functionId="Looking for linkStatusMsg.link-status-item.link-status-list.link"/>
                    </testStep>
               </jl:if>
               <testStep functionId="Step 46.19 IF TMDD_N16R294_Link_Saturation_Supported is equal to TRUE THEN CONTINUE; OTHERWISE skip the following substeps." passFailResult="False"/>
               <jl:if test="${TMDD_N16R294_Link_Saturation_Supported}">
                    <testStep functionId="Step 46.19.1 VERIFY that a saturation-flag data element exists within each instance of data frame linkStatusMsg.link-status-item.link-status-list.link" passfailResult="True">
                         <ri-MessageVerify msgType="RESPONSE" elementName="saturation-flag" instanceName="tmdd:linkStatusMsg.link-status-item.link-status-list.link" elementType="data-element" functionId="Looking for linkStatusMsg.link-status-item.link-status-list.link"/>
                    </testStep>
               </jl:if>
               <testStep functionId="Step 46.20 IF TMDD_N16R295_Link_Saturation_Threshold_Supported is equal to TRUE THEN CONTINUE; OTHERWISE skip the following substeps." passFailResult="False"/>
               <jl:if test="${TMDD_N16R295_Link_Saturation_Threshold_Supported}">
                    <testStep functionId="Step 46.20.1 VERIFY that an oversaturated-threshold data element exists within each instance of data frame linkStatusMsg.link-status-item.link-status-list.link" passfailResult="True">
                         <ri-MessageVerify msgType="RESPONSE" elementName="oversaturated-threshold" instanceName="tmdd:linkStatusMsg.link-status-item.link-status-list.link" elementType="data-element" functionId="Looking for linkStatusMsg.link-status-item.link-status-list.link"/>
                    </testStep>
               </jl:if>
               <testStep functionId="Step 46.21 IF TMDD_N16R296_Link_Level_of_Service_Supported is equal to TRUE THEN CONTINUE; OTHERWISE skip the following substeps." passFailResult="False"/>
               <jl:if test="${TMDD_N16R296_Link_Level_of_Service_Supported}">
                    <testStep functionId="Step 46.21.1 VERIFY that a level-of-service data element exists within each instance of data frame linkStatusMsg.link-status-item.link-status-list.link" passfailResult="True">
                         <ri-MessageVerify msgType="RESPONSE" elementName="level-of-service" instanceName="tmdd:linkStatusMsg.link-status-item.link-status-list.link" elementType="data-element" functionId="Looking for linkStatusMsg.link-status-item.link-status-list.link"/>
                    </testStep>
               </jl:if>
               <testStep functionId="Step 46.22 IF TMDD_N16R297_Lane_Numbers_Supported is equal to TRUE THEN CONTINUE; OTHERWISE skip the following substeps." passFailResult="False"/>
               <jl:if test="${TMDD_N16R297_Lane_Numbers_Supported}">
                    <testStep functionId="Step 46.22.1 VERIFY that a lane-numbers data frame exists within each instance of data frame linkStatusMsg.link-status-item.link-status-list.link" passfailResult="True">
                         <ri-MessageVerify msgType="RESPONSE" elementName="lane-numbers" instanceName="tmdd:linkStatusMsg.link-status-item.link-status-list.link" elementType="data-element" functionId="Looking for linkStatusMsg.link-status-item.link-status-list.link"/>
                    </testStep>
               </jl:if>
               <testStep functionId="Step 46.23 IF TMDD_N16R298_Link_Data_Stored_Type_Supported is equal to TRUE THEN CONTINUE; OTHERWISE skip the following substeps." passFailResult="False"/>
               <jl:if test="${TMDD_N16R298_Link_Data_Stored_Type_Supported}">
                    <testStep functionId="Step 46.23.1 VERIFY that a link-data-stored data element exists within each instance of data frame linkStatusMsg.link-status-item.link-status-list.link" passfailResult="True">
                         <ri-MessageVerify msgType="RESPONSE" elementName="link-data-stored" instanceName="tmdd:linkStatusMsg.link-status-item.link-status-list.link" elementType="data-element" functionId="Looking for linkStatusMsg.link-status-item.link-status-list.link"/>
                    </testStep>
               </jl:if>
               <testStep functionId="Step 46.24 IF TMDD_N16R299_Roadway_Event_Source_Supported is equal to TRUE THEN CONTINUE; OTHERWISE skip the following substeps." passFailResult="False"/>
               <jl:if test="${TMDD_N16R299_Roadway_Event_Source_Supported}">
                    <testStep functionId="Step 46.24.1 VERIFY that a detection-method data element exists within each instance of data frame linkStatusMsg.link-status-item.link-status-list.link" passfailResult="True">
                         <ri-MessageVerify msgType="RESPONSE" elementName="detection-method" instanceName="tmdd:linkStatusMsg.link-status-item.link-status-list.link" elementType="data-element" functionId="Looking for linkStatusMsg.link-status-item.link-status-list.link"/>
                    </testStep>
               </jl:if>
               <testStep functionId="Step 46.25 IF TMDD_N16R300_Traffic_Data_Type_Supported is equal to TRUE THEN CONTINUE; OTHERWISE skip the following substeps." passFailResult="False"/>
               <jl:if test="${TMDD_N16R300_Traffic_Data_Type_Supported}">
                    <testStep functionId="Step 46.25.1 VERIFY that a link-traffic-data-algorithm data element exists within each instance of data frame linkStatusMsg.link-status-item.link-status-list.link" passfailResult="True">
                         <ri-MessageVerify msgType="RESPONSE" elementName="link-traffic-data-algorithm" instanceName="tmdd:linkStatusMsg.link-status-item.link-status-list.link" elementType="data-element" functionId="Looking for linkStatusMsg.link-status-item.link-status-list.link"/>
                    </testStep>
               </jl:if>
               <testStep functionId="Step 46.26 IF TMDD_N16R301_Link_Stops_Supported is equal to TRUE THEN CONTINUE; OTHERWISE skip the following substeps." passFailResult="False"/>
               <jl:if test="${TMDD_N16R301_Link_Stops_Supported}">
                    <testStep functionId="Step 46.26.1 VERIFY that a stops data element exists within each instance of data frame linkStatusMsg.link-status-item.link-status-list.link" passfailResult="True">
                         <ri-MessageVerify msgType="RESPONSE" elementName="stops" instanceName="tmdd:linkStatusMsg.link-status-item.link-status-list.link" elementType="data-element" functionId="Looking for linkStatusMsg.link-status-item.link-status-list.link"/>
                    </testStep>
               </jl:if>
               <testStep functionId="Step 46.27 IF TMDD_N16R302_Link_Delay_Time_Supported is equal to TRUE THEN CONTINUE; OTHERWISE skip the following substeps." passFailResult="False"/>
               <jl:if test="${TMDD_N16R302_Link_Delay_Time_Supported}">
                    <testStep functionId="Step 46.27.1 VERIFY that a delay data element exists within each instance of data frame linkStatusMsg.link-status-item.link-status-list.link" passfailResult="True">
                         <ri-MessageVerify msgType="RESPONSE" elementName="delay" instanceName="tmdd:linkStatusMsg.link-status-item.link-status-list.link" elementType="data-element" functionId="Looking for linkStatusMsg.link-status-item.link-status-list.link"/>
                    </testStep>
               </jl:if>
               <testStep functionId="Step 46.28 IF TMDD_N16R303_Link_Delay_Time___Alternate_Route_Supported is equal to TRUE THEN CONTINUE; OTHERWISE skip the following substeps." passFailResult="False"/>
               <jl:if test="${TMDD_N16R303_Link_Delay_Time___Alternate_Route_Supported}">
                    <testStep functionId="Step 46.28.1 VERIFY that an alternate-route-delay data element exists within each instance of data frame linkStatusMsg.link-status-item.link-status-list.link" passfailResult="True">
                         <ri-MessageVerify msgType="RESPONSE" elementName="alternate-route-delay" instanceName="tmdd:linkStatusMsg.link-status-item.link-status-list.link" elementType="data-element" functionId="Looking for linkStatusMsg.link-status-item.link-status-list.link"/>
                    </testStep>
               </jl:if>
               <testStep functionId="Step 46.29 IF TMDD_N16R304_Link_Headway_Supported is equal to TRUE THEN CONTINUE; OTHERWISE skip the following substeps." passFailResult="False"/>
               <jl:if test="${TMDD_N16R304_Link_Headway_Supported}">
                    <testStep functionId="Step 46.29.1 VERIFY that a headway data element exists within each instance of data frame linkStatusMsg.link-status-item.link-status-list.link" passfailResult="True">
                         <ri-MessageVerify msgType="RESPONSE" elementName="headway" instanceName="tmdd:linkStatusMsg.link-status-item.link-status-list.link" elementType="data-element" functionId="Looking for linkStatusMsg.link-status-item.link-status-list.link"/>
                    </testStep>
               </jl:if>
               <testStep functionId="Step 46.30 IF TMDD_N16R305_Link_Travel_Time_Supported is equal to TRUE THEN CONTINUE; OTHERWISE skip the following substeps." passFailResult="False"/>
               <jl:if test="${TMDD_N16R305_Link_Travel_Time_Supported}">
                    <testStep functionId="Step 46.30.1 VERIFY that a travel-time data element exists within each instance of data frame linkStatusMsg.link-status-item.link-status-list.link" passfailResult="True">
                         <ri-MessageVerify msgType="RESPONSE" elementName="travel-time" instanceName="tmdd:linkStatusMsg.link-status-item.link-status-list.link" elementType="data-element" functionId="Looking for linkStatusMsg.link-status-item.link-status-list.link"/>
                    </testStep>
               </jl:if>
               <testStep functionId="Step 46.31 IF TMDD_N16R306_Link_Existing_Capacity_Supported is equal to TRUE THEN CONTINUE; OTHERWISE skip the following substeps." passFailResult="False"/>
               <jl:if test="${TMDD_N16R306_Link_Existing_Capacity_Supported}">
                    <testStep functionId="Step 46.31.1 VERIFY that a capacity-existing data element exists within each instance of data frame linkStatusMsg.link-status-item.link-status-list.link" passfailResult="True">
                         <ri-MessageVerify msgType="RESPONSE" elementName="capacity-existing" instanceName="tmdd:linkStatusMsg.link-status-item.link-status-list.link" elementType="data-element" functionId="Looking for linkStatusMsg.link-status-item.link-status-list.link"/>
                    </testStep>
               </jl:if>
               <testStep functionId="Step 46.32 IF TMDD_N16R307_Link_Travel_Time_Increase_Supported is equal to TRUE THEN CONTINUE; OTHERWISE skip the following substeps." passFailResult="False"/>
               <jl:if test="${TMDD_N16R307_Link_Travel_Time_Increase_Supported}">
                    <testStep functionId="Step 46.32.1 VERIFY that a travel-time-increase data element exists within each instance of data frame linkStatusMsg.link-status-item.link-status-list.link" passfailResult="True">
                         <ri-MessageVerify msgType="RESPONSE" elementName="travel-time-increase" instanceName="tmdd:linkStatusMsg.link-status-item.link-status-list.link" elementType="data-element" functionId="Looking for linkStatusMsg.link-status-item.link-status-list.link"/>
                    </testStep>
               </jl:if>
               <testStep functionId="Step 46.33 IF TMDD_N16R308_Link_Average_Speed_Supported is equal to TRUE THEN CONTINUE; OTHERWISE skip the following substeps." passFailResult="False"/>
               <jl:if test="${TMDD_N16R308_Link_Average_Speed_Supported}">
                    <testStep functionId="Step 46.33.1 VERIFY that a speed-average data element exists within each instance of data frame linkStatusMsg.link-status-item.link-status-list.link" passfailResult="True">
                         <ri-MessageVerify msgType="RESPONSE" elementName="speed-average" instanceName="tmdd:linkStatusMsg.link-status-item.link-status-list.link" elementType="data-element" functionId="Looking for linkStatusMsg.link-status-item.link-status-list.link"/>
                    </testStep>
               </jl:if>
               <testStep functionId="Step 46.34 IF TMDD_N16R309_Link_Estimated_Speed_Supported is equal to TRUE THEN CONTINUE; OTHERWISE skip the following substeps." passFailResult="False"/>
               <jl:if test="${TMDD_N16R309_Link_Estimated_Speed_Supported}">
                    <testStep functionId="Step 46.34.1 VERIFY that a speed-vehicle-estimated data element exists within each instance of data frame linkStatusMsg.link-status-item.link-status-list.link" passfailResult="True">
                         <ri-MessageVerify msgType="RESPONSE" elementName="speed-vehicle-estimated" instanceName="tmdd:linkStatusMsg.link-status-item.link-status-list.link" elementType="data-element" functionId="Looking for linkStatusMsg.link-status-item.link-status-list.link"/>
                    </testStep>
               </jl:if>
               <testStep functionId="Step 46.35 IF TMDD_N16R310_Link_Speed_Limit___Link_Status_Supported is equal to TRUE THEN CONTINUE; OTHERWISE skip the following substeps." passFailResult="False"/>
               <jl:if test="${TMDD_N16R310_Link_Speed_Limit___Link_Status_Supported}">
                    <testStep functionId="Step 46.35.1 VERIFY that a speed-limit data element exists within each instance of data frame linkStatusMsg.link-status-item.link-status-list.link" passfailResult="True">
                         <ri-MessageVerify msgType="RESPONSE" elementName="speed-limit" instanceName="tmdd:linkStatusMsg.link-status-item.link-status-list.link" elementType="data-element" functionId="Looking for linkStatusMsg.link-status-item.link-status-list.link"/>
                    </testStep>
               </jl:if>
               <testStep functionId="Step 46.36 IF TMDD_N16R311_Link_Current_Advisory_Speed_Supported is equal to TRUE THEN CONTINUE; OTHERWISE skip the following substeps." passFailResult="False"/>
               <jl:if test="${TMDD_N16R311_Link_Current_Advisory_Speed_Supported}">
                    <testStep functionId="Step 46.36.1 VERIFY that an advisory-speed-limit data element exists within each instance of data frame linkStatusMsg.link-status-item.link-status-list.link" passfailResult="True">
                         <ri-MessageVerify msgType="RESPONSE" elementName="advisory-speed-limit" instanceName="tmdd:linkStatusMsg.link-status-item.link-status-list.link" elementType="data-element" functionId="Looking for linkStatusMsg.link-status-item.link-status-list.link"/>
                    </testStep>
               </jl:if>
               <testStep functionId="Step 46.37 IF TMDD_N16R312_Link_Truck_Speed_Limit___Link_Status_Supported is equal to TRUE THEN CONTINUE; OTHERWISE skip the following substeps." passFailResult="False"/>
               <jl:if test="${TMDD_N16R312_Link_Truck_Speed_Limit___Link_Status_Supported}">
                    <testStep functionId="Step 46.37.1 VERIFY that a truck-speed-limit data element exists within each instance of data frame linkStatusMsg.link-status-item.link-status-list.link" passfailResult="True">
                         <ri-MessageVerify msgType="RESPONSE" elementName="truck-speed-limit" instanceName="tmdd:linkStatusMsg.link-status-item.link-status-list.link" elementType="data-element" functionId="Looking for linkStatusMsg.link-status-item.link-status-list.link"/>
                    </testStep>
               </jl:if>
               <testStep functionId="Step 46.38 IF TMDD_N16R313_Speed_Limit_Units___Link_Status_Supported is equal to TRUE THEN CONTINUE; OTHERWISE skip the following substeps." passFailResult="False"/>
               <jl:if test="${TMDD_N16R313_Speed_Limit_Units___Link_Status_Supported}">
                    <testStep functionId="Step 46.38.1 VERIFY that a speed-limit-units data element exists within each instance of data frame linkStatusMsg.link-status-item.link-status-list.link" passfailResult="True">
                         <ri-MessageVerify msgType="RESPONSE" elementName="speed-limit-units" instanceName="tmdd:linkStatusMsg.link-status-item.link-status-list.link" elementType="data-element" functionId="Looking for linkStatusMsg.link-status-item.link-status-list.link"/>
                    </testStep>
               </jl:if>
               <testStep functionId="Step 46.39 IF TMDD_N16R314_Link_Density_Supported is equal to TRUE THEN CONTINUE; OTHERWISE skip the following substeps." passFailResult="False"/>
               <jl:if test="${TMDD_N16R314_Link_Density_Supported}">
                    <testStep functionId="Step 46.39.1 VERIFY that a density data element exists within each instance of data frame linkStatusMsg.link-status-item.link-status-list.link" passfailResult="True">
                         <ri-MessageVerify msgType="RESPONSE" elementName="density" instanceName="tmdd:linkStatusMsg.link-status-item.link-status-list.link" elementType="data-element" functionId="Looking for linkStatusMsg.link-status-item.link-status-list.link"/>
                    </testStep>
               </jl:if>
               <testStep functionId="Step 46.40 IF TMDD_N16R315_Link_Occupancy_Supported is equal to TRUE THEN CONTINUE; OTHERWISE skip the following substeps." passFailResult="False"/>
               <jl:if test="${TMDD_N16R315_Link_Occupancy_Supported}">
                    <testStep functionId="Step 46.40.1 VERIFY that an occupancy data element exists within each instance of data frame linkStatusMsg.link-status-item.link-status-list.link" passfailResult="True">
                         <ri-MessageVerify msgType="RESPONSE" elementName="occupancy" instanceName="tmdd:linkStatusMsg.link-status-item.link-status-list.link" elementType="data-element" functionId="Looking for linkStatusMsg.link-status-item.link-status-list.link"/>
                    </testStep>
               </jl:if>
               <testStep functionId="Step 46.41 IF TMDD_N16R316_Link_Volume_Supported is equal to TRUE THEN CONTINUE; OTHERWISE skip the following substeps." passFailResult="False"/>
               <jl:if test="${TMDD_N16R316_Link_Volume_Supported}">
                    <testStep functionId="Step 46.41.1 VERIFY that a volume data element exists within each instance of data frame linkStatusMsg.link-status-item.link-status-list.link" passfailResult="True">
                         <ri-MessageVerify msgType="RESPONSE" elementName="volume" instanceName="tmdd:linkStatusMsg.link-status-item.link-status-list.link" elementType="data-element" functionId="Looking for linkStatusMsg.link-status-item.link-status-list.link"/>
                    </testStep>
               </jl:if>
               <testStep functionId="Step 46.42 IF TMDD_N16R317_Event_Description_Time___Link_Status_Supported is equal to TRUE THEN CONTINUE; OTHERWISE skip the following substeps." passFailResult="False"/>
               <jl:if test="${TMDD_N16R317_Event_Description_Time___Link_Status_Supported}">
                    <testStep functionId="Step 46.42.1 VERIFY that an event-description-time data element exists within each instance of data frame linkStatusMsg.link-status-item.link-status-list.link" passfailResult="True">
                         <ri-MessageVerify msgType="RESPONSE" elementName="event-description-time" instanceName="tmdd:linkStatusMsg.link-status-item.link-status-list.link" elementType="data-element" functionId="Looking for linkStatusMsg.link-status-item.link-status-list.link"/>
                    </testStep>
               </jl:if>
               <testStep functionId="Step 46.43 IF TMDD_N16R318_Link_Status_Date_and_Time_Change_Information_Supported is equal to TRUE THEN CONTINUE; OTHERWISE skip the following substeps." passFailResult="False"/>
               <jl:if test="${TMDD_N16R318_Link_Status_Date_and_Time_Change_Information_Supported}">
                    <testStep functionId="Step 46.43.1 VERIFY that a last-update-time data frame exists within each instance of data frame linkStatusMsg.link-status-item.link-status-list.link" passfailResult="True">
                         <ri-MessageVerify msgType="RESPONSE" elementName="last-update-time" instanceName="tmdd:linkStatusMsg.link-status-item.link-status-list.link" elementType="data-frame" functionId="Looking for linkStatusMsg.link-status-item.link-status-list.link"/>
                    </testStep>
               </jl:if>
               <testStep functionId="Step 46.44 VERIFY that the values within the RESPONSE message are correct per the TMDD standard and known operational conditions.">
                    <AUTO-VERIFY-MESSAGE functionId="Automatically Verify message content" msgName="RESPONSE" verificationSpec="${VerificationSpec}"/>
                    <USER-VERIFY-MESSAGE functionId="The User Verifies the message content" msgName="RESPONSE" optionList="TMDD_N16R281_Restrictions___Link_Status_Supported,restrictions,tmdd:linkStatusMsg.link-status-item;TMDD_N16R282_Link_Name___Link_Status_Supported,link-name,tmdd:linkStatusMsg.link-status-item.link-status-list.link;TMDD_N16R283_Link_Direction___Link_Status_Supported,link-direction,tmdd:linkStatusMsg.link-status-item.link-status-list.link;TMDD_N16R284_Lanes_Open_Supported,lanes-number-open,tmdd:linkStatusMsg.link-status-item.link-status-list.link;TMDD_N16R285_Link_Priority_Supported,priority-type,tmdd:linkStatusMsg.link-status-item.link-status-list.link;TMDD_N16R286_Link_Restrictions___Axles_Supported,restriction-axle-count,tmdd:linkStatusMsg.link-status-item.link-status-list.link;TMDD_N16R287_Link_Restrictions___Height_Supported,restriction-height,tmdd:linkStatusMsg.link-status-item.link-status-list.link;TMDD_N16R288_Link_Restrictions___Length_Supported,restriction-length,tmdd:linkStatusMsg.link-status-item.link-status-list.link;TMDD_N16R289_Link_Restrictions___Weight_Supported,restriction-weight,tmdd:linkStatusMsg.link-status-item.link-status-list.link;TMDD_N16R290_Link_Restrictions___Width_Supported,restriction-width,tmdd:linkStatusMsg.link-status-item.link-status-list.link;TMDD_N16R291_Link_Restrictions___Axle_Weight_Supported,restriction-weight-axle,tmdd:linkStatusMsg.link-status-item.link-status-list.link;TMDD_N16R292_Link_Restrictions_Units_Supported,restriction-units,tmdd:linkStatusMsg.link-status-item.link-status-list.link;TMDD_N16R293_Link_Surface_Conditions_Supported,surface-condition,tmdd:linkStatusMsg.link-status-item.link-status-list.link;TMDD_N16R294_Link_Saturation_Supported,saturation-flag,tmdd:linkStatusMsg.link-status-item.link-status-list.link;TMDD_N16R295_Link_Saturation_Threshold_Supported,oversaturated-threshold,tmdd:linkStatusMsg.link-status-item.link-status-list.link;TMDD_N16R296_Link_Level_of_Service_Supported,level-of-service,tmdd:linkStatusMsg.link-status-item.link-status-list.link;TMDD_N16R297_Lane_Numbers_Supported,lane-numbers,tmdd:linkStatusMsg.link-status-item.link-status-list.link;TMDD_N16R298_Link_Data_Stored_Type_Supported,link-data-stored,tmdd:linkStatusMsg.link-status-item.link-status-list.link;TMDD_N16R299_Roadway_Event_Source_Supported,detection-method,tmdd:linkStatusMsg.link-status-item.link-status-list.link;TMDD_N16R300_Traffic_Data_Type_Supported,link-traffic-data-algorithm,tmdd:linkStatusMsg.link-status-item.link-status-list.link;TMDD_N16R301_Link_Stops_Supported,stops,tmdd:linkStatusMsg.link-status-item.link-status-list.link;TMDD_N16R302_Link_Delay_Time_Supported,delay,tmdd:linkStatusMsg.link-status-item.link-status-list.link;TMDD_N16R303_Link_Delay_Time___Alternate_Route_Supported,alternate-route-delay,tmdd:linkStatusMsg.link-status-item.link-status-list.link;TMDD_N16R304_Link_Headway_Supported,headway,tmdd:linkStatusMsg.link-status-item.link-status-list.link;TMDD_N16R305_Link_Travel_Time_Supported,travel-time,tmdd:linkStatusMsg.link-status-item.link-status-list.link;TMDD_N16R306_Link_Existing_Capacity_Supported,capacity-existing,tmdd:linkStatusMsg.link-status-item.link-status-list.link;TMDD_N16R307_Link_Travel_Time_Increase_Supported,travel-time-increase,tmdd:linkStatusMsg.link-status-item.link-status-list.link;TMDD_N16R308_Link_Average_Speed_Supported,speed-average,tmdd:linkStatusMsg.link-status-item.link-status-list.link;TMDD_N16R309_Link_Estimated_Speed_Supported,speed-vehicle-estimated,tmdd:linkStatusMsg.link-status-item.link-status-list.link;TMDD_N16R310_Link_Speed_Limit___Link_Status_Supported,speed-limit,tmdd:linkStatusMsg.link-status-item.link-status-list.link;TMDD_N16R311_Link_Current_Advisory_Speed_Supported,advisory-speed-limit,tmdd:linkStatusMsg.link-status-item.link-status-list.link;TMDD_N16R312_Link_Truck_Speed_Limit___Link_Status_Supported,truck-speed-limit,tmdd:linkStatusMsg.link-status-item.link-status-list.link;TMDD_N16R313_Speed_Limit_Units___Link_Status_Supported,speed-limit-units,tmdd:linkStatusMsg.link-status-item.link-status-list.link;TMDD_N16R314_Link_Density_Supported,density,tmdd:linkStatusMsg.link-status-item.link-status-list.link;TMDD_N16R315_Link_Occupancy_Supported,occupancy,tmdd:linkStatusMsg.link-status-item.link-status-list.link;TMDD_N16R316_Link_Volume_Supported,volume,tmdd:linkStatusMsg.link-status-item.link-status-list.link;TMDD_N16R317_Event_Description_Time___Link_Status_Supported,event-description-time,tmdd:linkStatusMsg.link-status-item.link-status-list.link;TMDD_N16R318_Link_Status_Date_and_Time_Change_Information_Supported,last-update-time,tmdd:linkStatusMsg.link-status-item.link-status-list.link;TMDD_N16R14_Restrictions___Error_Report_Supported,restrictions,tmdd:errorReportMsg;" userDataFile="${RI_USERTCDATAFILE}"/>
               </testStep>
          </jl:if>
          <testStep functionId="Step 47 IF ErrorResponseExpected is equal to TRUE THEN CONTINUE, OTHERWISE skip the following substeps.  If a verification step fails, then test execution will proceed at the next subsequent Post Condition step, if present.  Otherwise, test execution will proceed to the final Exit step." passfailResult="False"/>
          <jl:if test="${ErrorResponseExpected}">
               <testStep functionId="Step 47.1 VERIFY that an errorReportMsg message was received." passfailResult="True">
                    <ri-MessageVerify msgType="RESPONSE" elementName="errorReportMsg" instanceName="tmdd:errorReportMsg" elementType="message" functionId="Looking for errorReportMsg"/>
               </testStep>
               <testStep functionId="Step 47.2 VERIFY that an organization-information data frame exists within message errorReportMsg." passfailResult="True">
                    <ri-MessageVerify msgType="RESPONSE" elementName="organization-information" instanceName="tmdd:errorReportMsg" elementType="data-frame" functionId="Looking for errorReportMsg"/>
               </testStep>
               <testStep functionId="Step 47.3 VERIFY that an organization-requesting data frame exists within message errorReportMsg." passfailResult="True">
                    <ri-MessageVerify msgType="RESPONSE" elementName="organization-requesting" instanceName="tmdd:errorReportMsg" elementType="data-frame" functionId="Looking for errorReportMsg"/>
               </testStep>
               <testStep functionId="Step 47.4 VERIFY that an error-code data element exists within message errorReportMsg." passfailResult="True">
                    <ri-MessageVerify msgType="RESPONSE" elementName="error-code" instanceName="tmdd:errorReportMsg" elementType="data-element" functionId="Looking for errorReportMsg"/>
               </testStep>
               <testStep functionId="Step 47.5 VERIFY that an error-text data element exists within message errorReportMsg." passfailResult="True">
                    <ri-MessageVerify msgType="RESPONSE" elementName="error-text" instanceName="tmdd:errorReportMsg" elementType="data-element" functionId="Looking for errorReportMsg"/>
               </testStep>
               <testStep functionId="Step 47.6 VERIFY that data element error-code is set to ErrorResponseTypeExpected." passfailResult="True">
                    <ri-MessageVerify msgType="RESPONSE" elementName="error-code" instanceName="tmdd:errorReportMsg" instanceValue="${ErrorResponseTypeExpected}" elementType="data-element" functionId="Looking for errorReportMsg"/>
               </testStep>
               <testStep functionId="Step 47.7 IF TMDD_N16R14_Restrictions___Error_Report_Supported is equal to TRUE THEN CONTINUE; OTHERWISE skip the following substeps." passFailResult="False"/>
               <jl:if test="${TMDD_N16R14_Restrictions___Error_Report_Supported}">
                    <testStep functionId="Step 47.7.1 VERIFY that a restrictions data frame exists within message errorReportMsg." passfailResult="True">
                         <ri-MessageVerify msgType="RESPONSE" elementName="restrictions" instanceName="tmdd:errorReportMsg" elementType="data-frame" functionId="Looking for errorReportMsg"/>
                    </testStep>
               </jl:if>
          </jl:if>
          <testStep functionId=" Step 48 EXIT" passfailResult="False"/>
     </C2CRI-session>
</testprocedure>