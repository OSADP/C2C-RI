<?xml version="1.0" encoding="UTF-8"?>
<!--Title:  TPS-17-dlTrafficNetworkInformationSubscription-EC
       Description:  This test procedure is called by a test case and is used to verify the SUTs support of the dlTrafficNetworkInformationSubscription dialog as an EC using variables provided by the calling test case.  
This procedure supports verification of requirements related to user need 2.3.4.4 [Need to Share Route Data] and is used for both valid and invalid test cases.
       Version/Date: 2013/11/28 11:39:31-->
<testprocedure xmlns="jelly:jameleon" xmlns:jl="jelly:core">
     <test-case-id>${C2CRITestCaseID}</test-case-id>
     <test-case-summary>This test procedure is called by a test case and is used to verify the SUTs support of the dlTrafficNetworkInformationSubscription dialog as an EC using variables provided by the calling test case.  
This procedure supports verification of requirements related to user need 2.3.4.4 [Need to Share Route Data] and is used for both valid and invalid test cases.</test-case-summary>
     <testStep functionId="Step 1 CONFIGURE: Determine the Application Layer Standard that will be used for this test.  RECORD this information as: ApplicationLayerStandard:  ${ApplicationLayerStandard}" passfailResult="False "/>
     <testStep functionId="Step 2 CONFIGURE: Determine the dialog performance requirement for Publish Route Status Information (NTRM 3.3.4.4.2.2}.  RECORD this value as: TMDD_N17R335_Publish_Route_Status_Information_Parameter = ${TMDD_N17R335_Publish_Route_Status_Information_Parameter}" passfailResult="False"/>
     <testStep functionId="Step 3 CONFIGURE: Determine the dialog performance requirement for Subscribe to Route Status Information (NTRM 3.3.4.4.2.3}.  RECORD this value as: TMDD_N17R336_Subscribe_to_Route_Status_Information_Parameter = ${TMDD_N17R336_Subscribe_to_Route_Status_Information_Parameter}" passfailResult="False"/>
     <testStep functionId="Step 4 CONFIGURE: Determine whether Authentication - Network (AuthNetwork) is required by the specification. (NRTM 3.3.4.1.1.2.1).  RECORD this information as: TMDD_N17R221_Authentication___Network__AuthNetwork__Supported = ${TMDD_N17R221_Authentication___Network__AuthNetwork__Supported}" passfailResult="False"/>
     <testStep functionId="Step 5 CONFIGURE: Determine whether Operator Identifier - Network is required by the specification. (NRTM 3.3.4.1.1.2.1.1).  RECORD this information as: TMDD_N17R222_Operator_Identifier___Network_Supported = ${TMDD_N17R222_Operator_Identifier___Network_Supported}" passfailResult="False"/>
     <testStep functionId="Step 6 CONFIGURE: Determine whether Roadway Network Identifier is required by the specification. (NRTM 3.3.4.1.1.2.2).  RECORD this information as: TMDD_N17R223_Roadway_Network_Identifier_Supported = ${TMDD_N17R223_Roadway_Network_Identifier_Supported}" passfailResult="False"/>
     <testStep functionId="Step 7 CONFIGURE: Determine whether Traffic Network Identifier is required by the specification. (NRTM 3.3.4.1.1.2.3).  RECORD this information as: TMDD_N17R224_Traffic_Network_Identifier_Supported = ${TMDD_N17R224_Traffic_Network_Identifier_Supported}" passfailResult="False"/>
     <testStep functionId="Step 8 CONFIGURE: Determine whether Restrictions - Error Report is required by the specification. (NRTM 3.3.1.4.1.2.1).  RECORD this information as: TMDD_N17R14_Restrictions___Error_Report_Supported = ${TMDD_N17R14_Restrictions___Error_Report_Supported}" passfailResult="False"/>
     <C2CRI-session beginSession="true" infoStd="TMDDv3.03a" appStd="${ApplicationLayerStandard}" useWSDL="true" testCaseIdentifier="${C2CRITestCaseID}" riMode="OC">
          <testStep functionId="Step 9 CONFIGURE: Define the publication message that will be sent to the SUT.  RECORD this information as: PublicationMessage:  ${PublicationMessage}" passfailResult="False"/>
          <testStep functionId="Step 10 CONFIGURE: Determine the number of publication message transmissions that will be performed within this test.  RECORD this information as: PublicationCount:  ${PublicationCount}" passfailResult="False"/>
          <testStep functionId="Step 11 CONFIGURE: Determine whether an error response message is expected for this test.  RECORD this information as: PublicationErrorResponseExpected:  ${PublicationErrorResponseExpected}" passfailResult="False"/>
          <jl:if test="${PublicationErrorResponseExpected}">
               <testStep functionId="Step 12 CONFIGURE: IF PublicationErrorResponseExpected is true, determine the expected error code response for this test.  RECORD this information as:  PublicationErrorTypeExpected:  ${PublicationErrorTypeExpected}" passfailResult="False"/>
          </jl:if>
          <testStep functionId="Step 13 CONFIGURE: Determine whether the Authentication parameters need to be verified within this test.  RECORD this information as: AuthenticationCheck:  ${AuthenticationCheck}" passfailResult="False"/>
          <testStep functionId="Step 14 CONFIGURE: Identify the Username expected for authentication during this test.  RECORD this information as: Username:  ${Username}" passfailResult="False"/>
          <testStep functionId="Step 15 CONFIGURE: Identify the Password expected for authentication during this test.  RECORD this information as: Password:  ${Password}" passfailResult="False"/>
          <testStep functionId="Step 16 CONFIGURE: Identify the Operator Identifier expected for authentication during this test.  RECORD this information as: OperatorID:  ${OperatorID}" passfailResult="False"/>
          <testStep functionId="Step 17 CONFIGURE: Determine whether the SUT will be allowed access to the information requested in this test.  RECORD this information as: AllowAccess:  ${AllowAccess}" passfailResult="False"/>
          <testStep functionId="Step 18 CONFIGURE: Determine whether an error response message is expected for this test.  RECORD this information as: SubscriptionErrorResponseExpected:  ${SubscriptionErrorResponseExpected}" passfailResult="False"/>
          <jl:if test="${SubscriptionErrorResponseExpected}">
               <testStep functionId="Step 19 CONFIGURE: IF SubscriptionErrorResponseExpected is true, determine the expected error code response for this test.  RECORD this information as:  SubscriptionErrorTypeExpected:  ${SubscriptionErrorTypeExpected}" passfailResult="False"/>
          </jl:if>
          <testStep functionId="Step 20 CONFIGURE: Define the subscription response message that will be sent to the SUT.  RECORD this information as: SubscriptionResponseMessage:  ${SubscriptionResponseMessage}" passfailResult="False"/>
          <testStep functionId="Step 21 SUBSCRIPTION-OC-RECEIVE with the following parameters:   DIALOG=dlTrafficNetworkInformationSubscription RESPONSETIMEREQUIRED=TMDD_N17R336_Subscribe_to_Route_Status_Information_Parameter AUTHENTICATIONCHECK = AuthenticationCheck USERNAME = Username PASSWORD = Password OPERATORID = OperatorID ALLOWACCESS = AllowAccess SUBSCRIPTIONERRORRESPONSEEXPECTED = SubscriptionErrorResponseExpected SUBSCRIPTIONERRORTYPEEXPECTED = SubscriptionErrorTypeExpected  Returns: CONTINUEPUBLICATION ">
               <SUBSCRIPTION-OC-RECEIVE Dialog="dlTrafficNetworkInformationSubscription" functionId="dlTrafficNetworkInformationSubscription" RESPONSETIMEREQUIRED="${TMDD_N17R336_Subscribe_to_Route_Status_Information_Parameter}" AUTHENTICATIONCHECK="${AuthenticationCheck}" USERNAME="${Username}" PASSWORD="${Password}" OPERATORID="${OperatorID}" ALLOWACCESS="${AllowAccess}" SUBSCRIPTIONERRORRESPONSEEXPECTED="${SubscriptionErrorResponseExpected}" SUBSCRIPTIONERRORTYPEEXPECTED="${SubscriptionErrorTypeExpected}"/>
          </testStep>
          <testStep functionId="Step 22 IF SubscriptionErrorResponseExpected is not equal to TRUE THEN CONTINUE, OTHERWISE skip the following substeps.  Note: If a verification step fails, then test execution will proceed at the next subsequent Post Condition step, if present.  Otherwise, test execution will proceed to the final Exit step." passfailResult="False"/>
          <jl:if test="${!SubscriptionErrorResponseExpected}">
               <testStep functionId="Step 22.1 VERIFY that a trafficNetworkInformationRequestMsg message was received." passfailResult="True">
                    <ri-MessageVerify msgType="REQUEST" elementName="trafficNetworkInformationRequestMsg" instanceName="tmdd:trafficNetworkInformationRequestMsg" elementType="message" functionId="Looking for trafficNetworkInformationRequestMsg"/>
               </testStep>
               <testStep functionId="Step 22.2 VERIFY that an organization-requesting data frame exists within message trafficNetworkInformationRequestMsg." passfailResult="True">
                    <ri-MessageVerify msgType="REQUEST" elementName="organization-requesting" instanceName="tmdd:trafficNetworkInformationRequestMsg" elementType="data-frame" functionId="Looking for trafficNetworkInformationRequestMsg"/>
               </testStep>
               <testStep functionId="Step 22.3 VERIFY that a network-information-type data element exists within message trafficNetworkInformationRequestMsg." passfailResult="True">
                    <ri-MessageVerify msgType="REQUEST" elementName="network-information-type" instanceName="tmdd:trafficNetworkInformationRequestMsg" elementType="data-element" functionId="Looking for trafficNetworkInformationRequestMsg"/>
               </testStep>
               <testStep functionId="Step 22.4 VERIFY that a trafficNetworkInformationRequestMsg message was received." passfailResult="True">
                    <ri-MessageVerify msgType="REQUEST" elementName="trafficNetworkInformationRequestMsg" instanceName="tmdd:trafficNetworkInformationRequestMsg" elementType="message" functionId="Looking for trafficNetworkInformationRequestMsg"/>
               </testStep>
               <testStep functionId="Step 22.5 VERIFY that data element network-information-type is set to route status." passfailResult="True">
                    <ri-MessageVerify msgType="REQUEST" elementName="network-information-type" instanceName="tmdd:trafficNetworkInformationRequestMsg" instanceValue="route status" elementType="data-element" functionId="Looking for trafficNetworkInformationRequestMsg"/>
               </testStep>
               <testStep functionId="Step 22.6 IF TMDD_N17R221_Authentication___Network__AuthNetwork__Supported is equal to TRUE THEN CONTINUE; OTHERWISE skip the following substeps." passFailResult="False"/>
               <jl:if test="${TMDD_N17R221_Authentication___Network__AuthNetwork__Supported}">
                    <testStep functionId="Step 22.6.1 VERIFY that an authentication data frame exists within message trafficNetworkInformationRequestMsg." passfailResult="True">
                         <ri-MessageVerify msgType="REQUEST" elementName="authentication" instanceName="tmdd:trafficNetworkInformationRequestMsg" elementType="data-frame" functionId="Looking for trafficNetworkInformationRequestMsg"/>
                    </testStep>
               </jl:if>
               <testStep functionId="Step 22.7 IF TMDD_N17R222_Operator_Identifier___Network_Supported is equal to TRUE THEN CONTINUE; OTHERWISE skip the following substeps." passFailResult="False"/>
               <jl:if test="${TMDD_N17R222_Operator_Identifier___Network_Supported}">
                    <testStep functionId="Step 22.7.1 VERIFY that an operator-id data element exists within each instance of data frame trafficNetworkInformationRequestMsg.authentication" passfailResult="True">
                         <ri-MessageVerify msgType="REQUEST" elementName="operator-id" instanceName="tmdd:trafficNetworkInformationRequestMsg.authentication" elementType="data-element" functionId="Looking for trafficNetworkInformationRequestMsg.authentication"/>
                    </testStep>
               </jl:if>
               <testStep functionId="Step 22.8 IF TMDD_N17R223_Roadway_Network_Identifier_Supported is equal to TRUE THEN CONTINUE; OTHERWISE skip the following substeps." passFailResult="False"/>
               <jl:if test="${TMDD_N17R223_Roadway_Network_Identifier_Supported}">
                    <testStep functionId="Step 22.8.1 VERIFY that a network-identifiers data frame exists within message trafficNetworkInformationRequestMsg." passfailResult="True">
                         <ri-MessageVerify msgType="REQUEST" elementName="network-identifiers" instanceName="tmdd:trafficNetworkInformationRequestMsg" elementType="data-element" functionId="Looking for trafficNetworkInformationRequestMsg"/>
                    </testStep>
               </jl:if>
               <testStep functionId="Step 22.9 IF TMDD_N17R224_Traffic_Network_Identifier_Supported is equal to TRUE THEN CONTINUE; OTHERWISE skip the following substeps." passFailResult="False"/>
               <jl:if test="${TMDD_N17R224_Traffic_Network_Identifier_Supported}">
                    <testStep functionId="Step 22.9.1 VERIFY that a roadway-network-id-list data frame exists within message trafficNetworkInformationRequestMsg." passfailResult="True">
                         <ri-MessageVerify msgType="REQUEST" elementName="roadway-network-id-list" instanceName="tmdd:trafficNetworkInformationRequestMsg" elementType="data-element" functionId="Looking for trafficNetworkInformationRequestMsg"/>
                    </testStep>
               </jl:if>
               <testStep functionId="Step 22.10 VERIFY that the values within the REQUEST message are correct per the TMDD standard and known operational conditions.">
                    <AUTO-VERIFY-MESSAGE functionId="Automatically Verify message content" msgName="REQUEST" verificationSpec="${VerificationSpec}"/>
                    <USER-VERIFY-MESSAGE functionId="The User Verifies the message content" msgName="REQUEST" optionList="TMDD_N17R221_Authentication___Network__AuthNetwork__Supported,authentication,tmdd:trafficNetworkInformationRequestMsg;TMDD_N17R222_Operator_Identifier___Network_Supported,operator-id,tmdd:trafficNetworkInformationRequestMsg.authentication;TMDD_N17R223_Roadway_Network_Identifier_Supported,network-identifiers,tmdd:trafficNetworkInformationRequestMsg;TMDD_N17R224_Traffic_Network_Identifier_Supported,roadway-network-id-list,tmdd:trafficNetworkInformationRequestMsg;TMDD_N17R14_Restrictions___Error_Report_Supported,restrictions,tmdd:errorReportMsg;" userDataFile="${RI_USERTCDATAFILE}"/>
               </testStep>
               <testStep functionId=" Step 22.11 CONFIGURE: Set CONTENTVERIFIED to True" passfailResult="False">
                    <jl:set var="CONTENTVERIFIED" value="true"/>
               </testStep>
               <postcondition>
                    <testStep functionId="Step 22.12 POSTCONDITION: SUBSCRIPTION-OC-REPLY with the following parameters:   DIALOG=dlTrafficNetworkInformationSubscription RESPONSETIMEREQUIRED=TMDD_N17R336_Subscribe_to_Route_Status_Information_Parameter CONTENTVERIFIED = CONTENTVERIFIED SUBSCRIPTIONRESPONSEMESSAGE = SubscriptionResponseMessage ">
                         <SUBSCRIPTION-OC-REPLY Dialog="dlTrafficNetworkInformationSubscription" functionId="dlTrafficNetworkInformationSubscription" RESPONSETIMEREQUIRED="${TMDD_N17R336_Subscribe_to_Route_Status_Information_Parameter}" CONTENTVERIFIED="${CONTENTVERIFIED}" SUBSCRIPTIONRESPONSEMESSAGE="${SubscriptionResponseMessage}"/>
                    </testStep>
               </postcondition>
               <testStep functionId="Step 22.13 WHILE CONTINUEPUBLICATION is equal to TRUE then CONTINUE, OTHERWISE skip the following substeps.  Note:If a verification step fails, then test execution will proceed at the next subsequent Post Condition step, if present.  Otherwise, test execution will proceed to the final Exit step."/>
               <jl:while test="${CONTINUEPUBLICATION}">
                    <testStep functionId="Step 22.13.1 PUBLICATION-OC with the following parameters:   DIALOG=dlRouteStatusUpdate RESPONSETIMEREQUIRED=TMDD_N17R335_Publish_Route_Status_Information_Parameter PUBLICATIONMESSAGE = PublicationMessage PUBLICATIONCOUNT = PublicationCount PUBLICATIONERRORRESPONSEEXPECTED = PublicationErrorResponseExpected PUBLICATIONERRORTYPEEXPECTED = PublicationErrorTypeExpected  Returns: CONTINUEPUBLICATION ">
                         <PUBLICATION-OC Dialog="dlRouteStatusUpdate" functionId="dlRouteStatusUpdate" RESPONSETIMEREQUIRED="${TMDD_N17R335_Publish_Route_Status_Information_Parameter}" PUBLICATIONMESSAGE="${PublicationMessage}" PUBLICATIONCOUNT="${PublicationCount}" PUBLICATIONERRORRESPONSEEXPECTED="${PublicationErrorResponseExpected}" PUBLICATIONERRORTYPEEXPECTED="${PublicationErrorTypeExpected}"/>
                    </testStep>
                    <testStep functionId="Step 22.13.2 IF PublicationErrorResponseExpected is not equal to TRUE THEN CONTINUE, OTHERWISE skip the following substeps.  Note: If a verification step fails, then test execution will proceed at the next subsequent Post Condition step, if present.  Otherwise, test execution will proceed to the final Exit step." passfailResult="False"/>
                    <jl:if test="${!PublicationErrorResponseExpected}">
                         <testStep functionId="Step 22.13.2.1 VERIFY that data element network-information-type is set to route status." passfailResult="True">
                              <ri-MessageVerify msgType="REQUEST" elementName="network-information-type" instanceName="tmdd:trafficNetworkInformationRequestMsg" instanceValue="route status" elementType="data-element" functionId="Looking for trafficNetworkInformationRequestMsg"/>
                         </testStep>
                    </jl:if>
                    <testStep functionId="Step 22.13.3 IF PublicationErrorResponseExpected is equal to TRUE THEN CONTINUE, OTHERWISE skip the following substeps.  If a verification step fails, then test execution will proceed at the next subsequent Post Condition step, if present.  Otherwise, test execution will proceed to the final Exit step." passfailResult="False"/>
                    <jl:if test="${PublicationErrorResponseExpected}">
                         <testStep functionId="Step 22.13.3.1 VERIFY that an errorReportMsg message was received." passfailResult="True">
                              <ri-MessageVerify msgType="REQUEST" elementName="errorReportMsg" instanceName="tmdd:errorReportMsg" elementType="message" functionId="Looking for errorReportMsg"/>
                         </testStep>
                         <testStep functionId="Step 22.13.3.2 VERIFY that an organization-information data frame exists within message errorReportMsg." passfailResult="True">
                              <ri-MessageVerify msgType="REQUEST" elementName="organization-information" instanceName="tmdd:errorReportMsg" elementType="data-frame" functionId="Looking for errorReportMsg"/>
                         </testStep>
                         <testStep functionId="Step 22.13.3.3 VERIFY that an organization-requesting data frame exists within message errorReportMsg." passfailResult="True">
                              <ri-MessageVerify msgType="REQUEST" elementName="organization-requesting" instanceName="tmdd:errorReportMsg" elementType="data-frame" functionId="Looking for errorReportMsg"/>
                         </testStep>
                         <testStep functionId="Step 22.13.3.4 VERIFY that an error-code data element exists within message errorReportMsg." passfailResult="True">
                              <ri-MessageVerify msgType="REQUEST" elementName="error-code" instanceName="tmdd:errorReportMsg" elementType="data-element" functionId="Looking for errorReportMsg"/>
                         </testStep>
                         <testStep functionId="Step 22.13.3.5 VERIFY that an error-text data element exists within message errorReportMsg." passfailResult="True">
                              <ri-MessageVerify msgType="REQUEST" elementName="error-text" instanceName="tmdd:errorReportMsg" elementType="data-element" functionId="Looking for errorReportMsg"/>
                         </testStep>
                         <testStep functionId="Step 22.13.3.6 VERIFY that data element error-code is set to PublicationErrorResponseTypeExpected." passfailResult="True">
                              <ri-MessageVerify msgType="REQUEST" elementName="error-code" instanceName="tmdd:errorReportMsg" instanceValue="${PublicationErrorResponseTypeExpected}" elementType="data-element" functionId="Looking for errorReportMsg"/>
                         </testStep>
                         <testStep functionId="Step 22.13.3.7 IF TMDD_N17R14_Restrictions___Error_Report_Supported is equal to TRUE THEN CONTINUE; OTHERWISE skip the following substeps." passFailResult="False"/>
                         <jl:if test="${TMDD_N17R14_Restrictions___Error_Report_Supported}">
                              <testStep functionId="Step 22.13.3.7.1 VERIFY that a restrictions data frame exists within message errorReportMsg." passfailResult="True">
                                   <ri-MessageVerify msgType="REQUEST" elementName="restrictions" instanceName="tmdd:errorReportMsg" elementType="data-frame" functionId="Looking for errorReportMsg"/>
                              </testStep>
                         </jl:if>
                    </jl:if>
               </jl:while>
          </jl:if>
          <testStep functionId=" Step 23 EXIT" passfailResult="False"/>
     </C2CRI-session>
</testprocedure>