<?xml version="1.0" encoding="UTF-8"?>
<!--Title:  TPS-111-dlFullEventUpdateRequest-EC
       Description:  This test procedure is called by a test case and is used to verify the SUTs support of the dlFullEventUpdateRequest dialog as an EC using variables provided by the calling test case.  
This procedure supports verification of requirements related to user need 2.3.6.1.7 [Need for Event Data] and is used for both valid and invalid test cases.
       Version/Date: 2013/11/28 12:38:26-->
<testprocedure xmlns="jelly:jameleon" xmlns:jl="jelly:core">
     <test-case-id>${C2CRITestCaseID}</test-case-id>
     <test-case-summary>This test procedure is called by a test case and is used to verify the SUTs support of the dlFullEventUpdateRequest dialog as an EC using variables provided by the calling test case.  
This procedure supports verification of requirements related to user need 2.3.6.1.7 [Need for Event Data] and is used for both valid and invalid test cases.</test-case-summary>
     <testStep functionId="Step 1 CONFIGURE: Determine the Application Layer Standard that will be used for this test.  RECORD this information as: ApplicationLayerStandard:  ${ApplicationLayerStandard}" passfailResult="False "/>
     <testStep functionId="Step 2 CONFIGURE: Determine the dialog performance requirement for Send Event Information Upon Request (NTRM 3.3.3.1}.  RECORD this value as: TMDD_N111R56_Send_Event_Information_Upon_Request_Parameter = ${TMDD_N111R56_Send_Event_Information_Upon_Request_Parameter}" passfailResult="False"/>
     <C2CRI-session beginSession="true" infoStd="TMDDv3.03a" appStd="${ApplicationLayerStandard}" useWSDL="true" testCaseIdentifier="${C2CRITestCaseID}" riMode="OC">
          <testStep functionId="Step 3 CONFIGURE: Define the response message that will be sent to the SUT.  RECORD this information as: ResponseMessage:  ${ResponseMessage}" passfailResult="False"/>
          <testStep functionId="Step 4 CONFIGURE: Determine whether the Authentication parameters need to be verified within this test.  RECORD this information as: AuthenticationCheck:  ${AuthenticationCheck}" passfailResult="False"/>
          <testStep functionId="Step 5 CONFIGURE: Identify the Username expected for authentication during this test.  RECORD this information as: Username:  ${Username}" passfailResult="False"/>
          <testStep functionId="Step 6 CONFIGURE: Identify the Password expected for authentication during this test.  RECORD this information as: Password:  ${Password}" passfailResult="False"/>
          <testStep functionId="Step 7 CONFIGURE: Identify the Operator Identifier expected for authentication during this test.  RECORD this information as: OperatorID:  ${OperatorID}" passfailResult="False"/>
          <testStep functionId="Step 8 CONFIGURE: Determine whether the SUT will be allowed access to the information requested in this test.  RECORD this information as: AllowAccess:  ${AllowAccess}" passfailResult="False"/>
          <testStep functionId="Step 9 CONFIGURE: Determine whether an error response message is expected for this test.  RECORD this information as: ErrorResponseExpected:  ${ErrorResponseExpected}" passfailResult="False"/>
          <jl:if test="${ErrorResponseExpected}">
               <testStep functionId="Step 10 CONFIGURE: IF ErrorResponseExpected is true, determine the expected error code response for this test.  RECORD this information as:  ErrorTypeExpected:  ${ErrorTypeExpected}" passfailResult="False"/>
          </jl:if>
          <testStep functionId="Step 11 CONFIGURE: Determine whether the SUT is expected to have valid data available for a response message in this test.  RECORD this information as: DataValid:  ${DataValid}" passfailResult="False"/>
          <testStep functionId="Step 12 REQUEST-RESPONSE-OC-RECEIVE with the following parameters:   DIALOG=dlFullEventUpdateRequest RESPONSETIMEREQUIRED=TMDD_N111R56_Send_Event_Information_Upon_Request_Parameter AUTHENTICATIONCHECK = AuthenticationCheck USERNAME = Username PASSWORD = Password OPERATORID = OperatorID ALLOWACCESS = AllowAccess ERRORRESPONSEEXPECTED = ErrorResponseExpected ERRORTYPEEXPECTED = ErrorTypeExpected DATAVALID = DataValid ">
               <REQUEST-RESPONSE-OC-RECEIVE Dialog="dlFullEventUpdateRequest" functionId="dlFullEventUpdateRequest" RESPONSETIMEREQUIRED="${TMDD_N111R56_Send_Event_Information_Upon_Request_Parameter}" AUTHENTICATIONCHECK="${AuthenticationCheck}" USERNAME="${Username}" PASSWORD="${Password}" OPERATORID="${OperatorID}" ALLOWACCESS="${AllowAccess}" ERRORRESPONSEEXPECTED="${ErrorResponseExpected}" ERRORTYPEEXPECTED="${ErrorTypeExpected}" DATAVALID="${DataValid}"/>
          </testStep>
          <testStep functionId="Step 13 IF ErrorResponseExpected is not equal to TRUE THEN CONTINUE, OTHERWISE skip the following substeps.  Note: If a verification step fails, then test execution will proceed at the next subsequent Post Condition step, if present.  Otherwise, test execution will proceed to the final Exit step." passfailResult="False"/>
          <jl:if test="${!ErrorResponseExpected}">
               <testStep functionId="Step 13.1 VERIFY that an eventRequestMsg message was received." passfailResult="True">
                    <ri-MessageVerify msgType="REQUEST" elementName="eventRequestMsg" instanceName="tmdd:eventRequestMsg" elementType="message" functionId="Looking for eventRequestMsg"/>
               </testStep>
               <testStep functionId="Step 13.2 VERIFY that a request-header data frame exists within message eventRequestMsg." passfailResult="True">
                    <ri-MessageVerify msgType="REQUEST" elementName="request-header" instanceName="tmdd:eventRequestMsg" elementType="data-frame" functionId="Looking for eventRequestMsg"/>
               </testStep>
               <testStep functionId="Step 13.3 VERIFY that a request-type data frame exists within message eventRequestMsg." passfailResult="True">
                    <ri-MessageVerify msgType="REQUEST" elementName="request-type" instanceName="tmdd:eventRequestMsg" elementType="data-frame" functionId="Looking for eventRequestMsg"/>
               </testStep>
               <testStep functionId="Step 13.4 VERIFY that the values within the REQUEST message are correct per the TMDD standard and known operational conditions.">
                    <AUTO-VERIFY-MESSAGE functionId="Automatically Verify message content" msgName="REQUEST" verificationSpec="${VerificationSpec}"/>
                    <USER-VERIFY-MESSAGE functionId="The User Verifies the message content" msgName="REQUEST" optionList="" userDataFile="${RI_USERTCDATAFILE}"/>
               </testStep>
               <testStep functionId=" Step 13.5 CONFIGURE: Set CONTENTVERIFIED to True" passfailResult="False">
                    <jl:set var="CONTENTVERIFIED" value="true"/>
               </testStep>
               <postcondition>
                    <testStep functionId="Step 13.6 POSTCONDITION: REQUEST-RESPONSE-OC-REPLY with the following parameters:   DIALOG=dlFullEventUpdateRequest RESPONSETIMEREQUIRED=TMDD_N111R56_Send_Event_Information_Upon_Request_Parameter CONTENTVERIFIED = CONTENTVERIFIED RESPONSEMESSAGE = ResponseMessage ">
                         <REQUEST-RESPONSE-OC-REPLY Dialog="dlFullEventUpdateRequest" functionId="dlFullEventUpdateRequest" RESPONSETIMEREQUIRED="${TMDD_N111R56_Send_Event_Information_Upon_Request_Parameter}" CONTENTVERIFIED="${CONTENTVERIFIED}" RESPONSEMESSAGE="${ResponseMessage}"/>
                    </testStep>
               </postcondition>
          </jl:if>
          <testStep functionId=" Step 14 EXIT" passfailResult="False"/>
     </C2CRI-session>
</testprocedure>