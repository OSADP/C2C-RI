<?xml version="1.0" encoding="UTF-8"?>
<!--Title:  TPS-89-dlIntersectionSignalControlRequest-OC
       Description:  This test procedure is called by a test case and is used to verify the SUTs support of the dlIntersectionSignalControlRequest dialog as an OC using variables provided by the calling test case.  
This procedure supports verification of requirements related to user need 2.3.5.10.4 [Need to Control a Remote Traffic Signal Controller] and is used for both valid and invalid test cases.
       Version/Date: 2013/11/28 12:22:12-->
<testprocedure xmlns="jelly:jameleon" xmlns:jl="jelly:core">
     <test-case-id>${C2CRITestCaseID}</test-case-id>
     <test-case-summary>This test procedure is called by a test case and is used to verify the SUTs support of the dlIntersectionSignalControlRequest dialog as an OC using variables provided by the calling test case.  
This procedure supports verification of requirements related to user need 2.3.5.10.4 [Need to Control a Remote Traffic Signal Controller] and is used for both valid and invalid test cases.</test-case-summary>
     <testStep functionId="Step 1 CONFIGURE: Determine the Application Layer Standard that will be used for this test.  RECORD this information as: ApplicationLayerStandard:  ${ApplicationLayerStandard}" passfailResult="False "/>
     <testStep functionId="Step 2 CONFIGURE: Determine the dialog performance requirement for Send Signal Control Response Upon Request (NTRM 3.3.5.11.3.1}.  RECORD this value as: TMDD_N89R1002_Send_Signal_Control_Response_Upon_Request_Parameter = ${TMDD_N89R1002_Send_Signal_Control_Response_Upon_Request_Parameter}" passfailResult="False"/>
     <testStep functionId="Step 3 CONFIGURE: Determine whether Operator Identifier - Device Control Acknowledge is required by the specification. (NRTM 3.3.5.1.4.2.2.1).  RECORD this information as: TMDD_N89R412_Operator_Identifier___Device_Control_Acknowledge_Supported = ${TMDD_N89R412_Operator_Identifier___Device_Control_Acknowledge_Supported}" passfailResult="False"/>
     <testStep functionId="Step 4 CONFIGURE: Determine whether Operator Lock Identifier is required by the specification. (NRTM 3.3.5.1.4.2.2.2).  RECORD this information as: TMDD_N89R413_Operator_Lock_Identifier_Supported = ${TMDD_N89R413_Operator_Lock_Identifier_Supported}" passfailResult="False"/>
     <testStep functionId="Step 5 CONFIGURE: Determine whether Operator Last Revised Date and Time - Device Control is required by the specification. (NRTM 3.3.5.1.4.2.2.3).  RECORD this information as: TMDD_N89R414_Operator_Last_Revised_Date_and_Time___Device_Control_Supported = ${TMDD_N89R414_Operator_Last_Revised_Date_and_Time___Device_Control_Supported}" passfailResult="False"/>
     <testStep functionId="Step 6 CONFIGURE: Determine whether Section Identifier - Signal Control is required by the specification. (NRTM 3.3.5.11.3.3.2.1).  RECORD this information as: TMDD_N89R1010_Section_Identifier___Signal_Control_Supported = ${TMDD_N89R1010_Section_Identifier___Signal_Control_Supported}" passfailResult="False"/>
     <testStep functionId="Step 7 CONFIGURE: Determine whether Timing Mode - Signal Control is required by the specification. (NRTM 3.3.5.11.3.3.2.2).  RECORD this information as: TMDD_N89R1011_Timing_Mode___Signal_Control_Supported = ${TMDD_N89R1011_Timing_Mode___Signal_Control_Supported}" passfailResult="False"/>
     <testStep functionId="Step 8 CONFIGURE: Determine whether Timing Pattern Identifier - Signal Control is required by the specification. (NRTM 3.3.5.11.3.3.2.3).  RECORD this information as: TMDD_N89R1012_Timing_Pattern_Identifier___Signal_Control_Supported = ${TMDD_N89R1012_Timing_Pattern_Identifier___Signal_Control_Supported}" passfailResult="False"/>
     <testStep functionId="Step 9 CONFIGURE: Determine whether Offset Adjustment - Signal Control Response is required by the specification. (NRTM 3.3.5.11.3.3.2.4).  RECORD this information as: TMDD_N89R1013_Offset_Adjustment___Signal_Control_Response_Supported = ${TMDD_N89R1013_Offset_Adjustment___Signal_Control_Response_Supported}" passfailResult="False"/>
     <testStep functionId="Step 10 CONFIGURE: Determine whether Restrictions - Error Report is required by the specification. (NRTM 3.3.1.4.1.2.1).  RECORD this information as: TMDD_N89R14_Restrictions___Error_Report_Supported = ${TMDD_N89R14_Restrictions___Error_Report_Supported}" passfailResult="False"/>
     <C2CRI-session beginSession="true" infoStd="TMDDv3.03a" appStd="${ApplicationLayerStandard}" useWSDL="true" testCaseIdentifier="${C2CRITestCaseID}" riMode="EC">
          <testStep functionId="Step 11 CONFIGURE: Define the message that will be sent to the SUT.  RECORD this information as: RequestMessage:  ${RequestMessage}" passfailResult="False"/>
          <testStep functionId="Step 12 CONFIGURE: Determine whether an error response message is expected for this test.  RECORD this information as: ErrorResponseExpected:  ${ErrorResponseExpected}" passfailResult="False"/>
          <jl:if test="${ErrorResponseExpected}">
               <testStep functionId="Step 13 CONFIGURE: IF ErrorResponseExpected is true, determine the expected error code response for this test.  RECORD this information as:  ErrorTypeExpected:  ${ErrorTypeExpected}" passfailResult="False"/>
          </jl:if>
          <testStep functionId="Step 14 REQUEST-RESPONSE-EC with the following parameters:   DIALOG=dlIntersectionSignalControlRequest RESPONSETIMEREQUIRED=TMDD_N89R1002_Send_Signal_Control_Response_Upon_Request_Parameter REQUESTMESSAGE = RequestMessage ERRORRESPONSEEXPECTED = ErrorResponseExpected ERRORTYPEEXPECTED = ErrorTypeExpected ">
               <REQUEST-RESPONSE-EC Dialog="dlIntersectionSignalControlRequest" functionId="dlIntersectionSignalControlRequest" RESPONSETIMEREQUIRED="${TMDD_N89R1002_Send_Signal_Control_Response_Upon_Request_Parameter}" REQUESTMESSAGE="${RequestMessage}" ERRORRESPONSEEXPECTED="${ErrorResponseExpected}" ERRORTYPEEXPECTED="${ErrorTypeExpected}"/>
          </testStep>
          <testStep functionId="Step 15 IF ErrorResponseExpected is not equal to TRUE THEN CONTINUE, OTHERWISE skip the following substeps.  Note: If a verification step fails, then test execution will proceed at the next subsequent Post Condition step, if present.  Otherwise, test execution will proceed to the final Exit step." passfailResult="False"/>
          <jl:if test="${!ErrorResponseExpected}">
               <testStep functionId="Step 15.1 VERIFY that an organization-information data frame exists within each instance of data frame intersectionSignalControlResponseMsg.device-control-response-header" passfailResult="True">
                    <ri-MessageVerify msgType="RESPONSE" elementName="organization-information" instanceName="tmdd:intersectionSignalControlResponseMsg.device-control-response-header" elementType="data-frame" functionId="Looking for intersectionSignalControlResponseMsg.device-control-response-header"/>
               </testStep>
               <testStep functionId="Step 15.2 VERIFY that a device-id data element exists within each instance of data frame intersectionSignalControlResponseMsg.device-control-response-header" passfailResult="True">
                    <ri-MessageVerify msgType="RESPONSE" elementName="device-id" instanceName="tmdd:intersectionSignalControlResponseMsg.device-control-response-header" elementType="data-element" functionId="Looking for intersectionSignalControlResponseMsg.device-control-response-header"/>
               </testStep>
               <testStep functionId="Step 15.3 VERIFY that a request-id data element exists within each instance of data frame intersectionSignalControlResponseMsg.device-control-response-header" passfailResult="True">
                    <ri-MessageVerify msgType="RESPONSE" elementName="request-id" instanceName="tmdd:intersectionSignalControlResponseMsg.device-control-response-header" elementType="data-element" functionId="Looking for intersectionSignalControlResponseMsg.device-control-response-header"/>
               </testStep>
               <testStep functionId="Step 15.4 VERIFY that a request-status data element exists within each instance of data frame intersectionSignalControlResponseMsg.device-control-response-header" passfailResult="True">
                    <ri-MessageVerify msgType="RESPONSE" elementName="request-status" instanceName="tmdd:intersectionSignalControlResponseMsg.device-control-response-header" elementType="data-element" functionId="Looking for intersectionSignalControlResponseMsg.device-control-response-header"/>
               </testStep>
               <testStep functionId="Step 15.5 VERIFY that an intersectionSignalControlResponseMsg message was received." passfailResult="True">
                    <ri-MessageVerify msgType="RESPONSE" elementName="intersectionSignalControlResponseMsg" instanceName="tmdd:intersectionSignalControlResponseMsg" elementType="message" functionId="Looking for intersectionSignalControlResponseMsg"/>
               </testStep>
               <testStep functionId="Step 15.6 VERIFY that a device-control-response-header data frame exists within message intersectionSignalControlResponseMsg." passfailResult="True">
                    <ri-MessageVerify msgType="RESPONSE" elementName="device-control-response-header" instanceName="tmdd:intersectionSignalControlResponseMsg" elementType="data-frame" functionId="Looking for intersectionSignalControlResponseMsg"/>
               </testStep>
               <testStep functionId="Step 15.7 IF TMDD_N89R412_Operator_Identifier___Device_Control_Acknowledge_Supported is equal to TRUE THEN CONTINUE; OTHERWISE skip the following substeps." passFailResult="False"/>
               <jl:if test="${TMDD_N89R412_Operator_Identifier___Device_Control_Acknowledge_Supported}">
                    <testStep functionId="Step 15.7.1 VERIFY that an operator-id data element exists within each instance of data frame intersectionSignalControlResponseMsg.device-control-response-header" passfailResult="True">
                         <ri-MessageVerify msgType="RESPONSE" elementName="operator-id" instanceName="tmdd:intersectionSignalControlResponseMsg.device-control-response-header" elementType="data-element" functionId="Looking for intersectionSignalControlResponseMsg.device-control-response-header"/>
                    </testStep>
               </jl:if>
               <testStep functionId="Step 15.8 IF TMDD_N89R413_Operator_Lock_Identifier_Supported is equal to TRUE THEN CONTINUE; OTHERWISE skip the following substeps." passFailResult="False"/>
               <jl:if test="${TMDD_N89R413_Operator_Lock_Identifier_Supported}">
                    <testStep functionId="Step 15.8.1 VERIFY that an operator-lock-id data element exists within each instance of data frame intersectionSignalControlResponseMsg.device-control-response-header" passfailResult="True">
                         <ri-MessageVerify msgType="RESPONSE" elementName="operator-lock-id" instanceName="tmdd:intersectionSignalControlResponseMsg.device-control-response-header" elementType="data-element" functionId="Looking for intersectionSignalControlResponseMsg.device-control-response-header"/>
                    </testStep>
               </jl:if>
               <testStep functionId="Step 15.9 IF TMDD_N89R414_Operator_Last_Revised_Date_and_Time___Device_Control_Supported is equal to TRUE THEN CONTINUE; OTHERWISE skip the following substeps." passFailResult="False"/>
               <jl:if test="${TMDD_N89R414_Operator_Last_Revised_Date_and_Time___Device_Control_Supported}">
                    <testStep functionId="Step 15.9.1 VERIFY that an operator-last-revised data frame exists within each instance of data frame intersectionSignalControlResponseMsg.device-control-response-header" passfailResult="True">
                         <ri-MessageVerify msgType="RESPONSE" elementName="operator-last-revised" instanceName="tmdd:intersectionSignalControlResponseMsg.device-control-response-header" elementType="data-frame" functionId="Looking for intersectionSignalControlResponseMsg.device-control-response-header"/>
                    </testStep>
               </jl:if>
               <testStep functionId="Step 15.10 IF TMDD_N89R1010_Section_Identifier___Signal_Control_Supported is equal to TRUE THEN CONTINUE; OTHERWISE skip the following substeps." passFailResult="False"/>
               <jl:if test="${TMDD_N89R1010_Section_Identifier___Signal_Control_Supported}">
                    <testStep functionId="Step 15.10.1 VERIFY that a section-id data element exists within message intersectionSignalControlResponseMsg." passfailResult="True">
                         <ri-MessageVerify msgType="RESPONSE" elementName="section-id" instanceName="tmdd:intersectionSignalControlResponseMsg" elementType="data-element" functionId="Looking for intersectionSignalControlResponseMsg"/>
                    </testStep>
               </jl:if>
               <testStep functionId="Step 15.11 IF TMDD_N89R1011_Timing_Mode___Signal_Control_Supported is equal to TRUE THEN CONTINUE; OTHERWISE skip the following substeps." passFailResult="False"/>
               <jl:if test="${TMDD_N89R1011_Timing_Mode___Signal_Control_Supported}">
                    <testStep functionId="Step 15.11.1 VERIFY that a request-control-mode data element exists within message intersectionSignalControlResponseMsg." passfailResult="True">
                         <ri-MessageVerify msgType="RESPONSE" elementName="request-control-mode" instanceName="tmdd:intersectionSignalControlResponseMsg" elementType="data-element" functionId="Looking for intersectionSignalControlResponseMsg"/>
                    </testStep>
               </jl:if>
               <testStep functionId="Step 15.12 IF TMDD_N89R1012_Timing_Pattern_Identifier___Signal_Control_Supported is equal to TRUE THEN CONTINUE; OTHERWISE skip the following substeps." passFailResult="False"/>
               <jl:if test="${TMDD_N89R1012_Timing_Pattern_Identifier___Signal_Control_Supported}">
                    <testStep functionId="Step 15.12.1 VERIFY that a timing-pattern-id data element exists within message intersectionSignalControlResponseMsg." passfailResult="True">
                         <ri-MessageVerify msgType="RESPONSE" elementName="timing-pattern-id" instanceName="tmdd:intersectionSignalControlResponseMsg" elementType="data-element" functionId="Looking for intersectionSignalControlResponseMsg"/>
                    </testStep>
               </jl:if>
               <testStep functionId="Step 15.13 IF TMDD_N89R1013_Offset_Adjustment___Signal_Control_Response_Supported is equal to TRUE THEN CONTINUE; OTHERWISE skip the following substeps." passFailResult="False"/>
               <jl:if test="${TMDD_N89R1013_Offset_Adjustment___Signal_Control_Response_Supported}">
                    <testStep functionId="Step 15.13.1 VERIFY that an offset-adjustment data element exists within message intersectionSignalControlResponseMsg." passfailResult="True">
                         <ri-MessageVerify msgType="RESPONSE" elementName="offset-adjustment" instanceName="tmdd:intersectionSignalControlResponseMsg" elementType="data-element" functionId="Looking for intersectionSignalControlResponseMsg"/>
                    </testStep>
               </jl:if>
               <testStep functionId="Step 15.14 VERIFY that the values within the RESPONSE message are correct per the TMDD standard and known operational conditions.">
                    <AUTO-VERIFY-MESSAGE functionId="Automatically Verify message content" msgName="RESPONSE" verificationSpec="${VerificationSpec}"/>
                    <USER-VERIFY-MESSAGE functionId="The User Verifies the message content" msgName="RESPONSE" optionList="TMDD_N89R412_Operator_Identifier___Device_Control_Acknowledge_Supported,operator-id,tmdd:intersectionSignalControlResponseMsg.device-control-response-header;TMDD_N89R413_Operator_Lock_Identifier_Supported,operator-lock-id,tmdd:intersectionSignalControlResponseMsg.device-control-response-header;TMDD_N89R414_Operator_Last_Revised_Date_and_Time___Device_Control_Supported,operator-last-revised,tmdd:intersectionSignalControlResponseMsg.device-control-response-header;TMDD_N89R1010_Section_Identifier___Signal_Control_Supported,section-id,tmdd:intersectionSignalControlResponseMsg;TMDD_N89R1011_Timing_Mode___Signal_Control_Supported,request-control-mode,tmdd:intersectionSignalControlResponseMsg;TMDD_N89R1012_Timing_Pattern_Identifier___Signal_Control_Supported,timing-pattern-id,tmdd:intersectionSignalControlResponseMsg;TMDD_N89R1013_Offset_Adjustment___Signal_Control_Response_Supported,offset-adjustment,tmdd:intersectionSignalControlResponseMsg;TMDD_N89R14_Restrictions___Error_Report_Supported,restrictions,tmdd:errorReportMsg;" userDataFile="${RI_USERTCDATAFILE}"/>
               </testStep>
          </jl:if>
          <testStep functionId="Step 16 IF ErrorResponseExpected is equal to TRUE THEN CONTINUE, OTHERWISE skip the following substeps.  If a verification step fails, then test execution will proceed at the next subsequent Post Condition step, if present.  Otherwise, test execution will proceed to the final Exit step." passfailResult="False"/>
          <jl:if test="${ErrorResponseExpected}">
               <testStep functionId="Step 16.1 VERIFY that an errorReportMsg message was received." passfailResult="True">
                    <ri-MessageVerify msgType="RESPONSE" elementName="errorReportMsg" instanceName="tmdd:errorReportMsg" elementType="message" functionId="Looking for errorReportMsg"/>
               </testStep>
               <testStep functionId="Step 16.2 VERIFY that an organization-information data frame exists within message errorReportMsg." passfailResult="True">
                    <ri-MessageVerify msgType="RESPONSE" elementName="organization-information" instanceName="tmdd:errorReportMsg" elementType="data-frame" functionId="Looking for errorReportMsg"/>
               </testStep>
               <testStep functionId="Step 16.3 VERIFY that an organization-requesting data frame exists within message errorReportMsg." passfailResult="True">
                    <ri-MessageVerify msgType="RESPONSE" elementName="organization-requesting" instanceName="tmdd:errorReportMsg" elementType="data-frame" functionId="Looking for errorReportMsg"/>
               </testStep>
               <testStep functionId="Step 16.4 VERIFY that an error-code data element exists within message errorReportMsg." passfailResult="True">
                    <ri-MessageVerify msgType="RESPONSE" elementName="error-code" instanceName="tmdd:errorReportMsg" elementType="data-element" functionId="Looking for errorReportMsg"/>
               </testStep>
               <testStep functionId="Step 16.5 VERIFY that an error-text data element exists within message errorReportMsg." passfailResult="True">
                    <ri-MessageVerify msgType="RESPONSE" elementName="error-text" instanceName="tmdd:errorReportMsg" elementType="data-element" functionId="Looking for errorReportMsg"/>
               </testStep>
               <testStep functionId="Step 16.6 VERIFY that data element error-code is set to ErrorResponseTypeExpected." passfailResult="True">
                    <ri-MessageVerify msgType="RESPONSE" elementName="error-code" instanceName="tmdd:errorReportMsg" instanceValue="${ErrorResponseTypeExpected}" elementType="data-element" functionId="Looking for errorReportMsg"/>
               </testStep>
               <testStep functionId="Step 16.7 IF TMDD_N89R14_Restrictions___Error_Report_Supported is equal to TRUE THEN CONTINUE; OTHERWISE skip the following substeps." passFailResult="False"/>
               <jl:if test="${TMDD_N89R14_Restrictions___Error_Report_Supported}">
                    <testStep functionId="Step 16.7.1 VERIFY that a restrictions data frame exists within message errorReportMsg." passfailResult="True">
                         <ri-MessageVerify msgType="RESPONSE" elementName="restrictions" instanceName="tmdd:errorReportMsg" elementType="data-frame" functionId="Looking for errorReportMsg"/>
                    </testStep>
               </jl:if>
          </jl:if>
          <testStep functionId=" Step 17 EXIT" passfailResult="False"/>
     </C2CRI-session>
</testprocedure>