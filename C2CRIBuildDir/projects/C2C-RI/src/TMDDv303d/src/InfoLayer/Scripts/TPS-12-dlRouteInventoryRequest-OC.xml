<?xml version="1.0" encoding="UTF-8"?>
<!--Title:  TPS-12-dlRouteInventoryRequest-OC
       Description:  This test procedure is called by a test case and is used to verify the SUTs support of the dlRouteInventoryRequest dialog as an OC using variables provided by the calling test case.  
This procedure supports verification of requirements related to user need 2.3.4.1.3 [Need for Route Inventory] and is used for both valid and invalid test cases.
       Version/Date: 2014/01/17 23:46:55-->
<testprocedure xmlns="jelly:jameleon" xmlns:jl="jelly:core">
     <test-case-id>${C2CRITestCaseID}</test-case-id>
     <test-case-summary>This test procedure is called by a test case and is used to verify the SUTs support of the dlRouteInventoryRequest dialog as an OC using variables provided by the calling test case.  
This procedure supports verification of requirements related to user need 2.3.4.1.3 [Need for Route Inventory] and is used for both valid and invalid test cases.</test-case-summary>
     <testStep functionId="Step 1 CONFIGURE: Determine the Application Layer Standard that will be used for this test.  RECORD this information as: ApplicationLayerStandard:  ${ApplicationLayerStandard}" passfailResult="False "/>
     <testStep functionId="Step 2 CONFIGURE: Determine the dialog performance requirement for Send Route Inventory Information Upon Request (NTRM 3.3.4.4.1.1}.  RECORD this value as: TMDD_N12R319_Send_Route_Inventory_Information_Upon_Request_Parameter = ${TMDD_N12R319_Send_Route_Inventory_Information_Upon_Request_Parameter}" passfailResult="False"/>
     <testStep functionId="Step 3 CONFIGURE: Determine whether Restrictions - Route Inventory is required by the specification. (NRTM 3.3.4.4.1.5.2.1).  RECORD this information as: TMDD_N12R325_Restrictions___Route_Inventory_Supported = ${TMDD_N12R325_Restrictions___Route_Inventory_Supported}" passfailResult="False"/>
     <testStep functionId="Step 4 CONFIGURE: Determine whether Roadway Network Name - Route Inventory is required by the specification. (NRTM 3.3.4.4.1.5.2.2).  RECORD this information as: TMDD_N12R326_Roadway_Network_Name___Route_Inventory_Supported = ${TMDD_N12R326_Roadway_Network_Name___Route_Inventory_Supported}" passfailResult="False"/>
     <testStep functionId="Step 5 CONFIGURE: Determine whether Route Name - Route Inventory is required by the specification. (NRTM 3.3.4.4.1.5.2.3).  RECORD this information as: TMDD_N12R327_Route_Name___Route_Inventory_Supported = ${TMDD_N12R327_Route_Name___Route_Inventory_Supported}" passfailResult="False"/>
     <testStep functionId="Step 6 CONFIGURE: Determine whether Alternate Route Names - Route Inventory is required by the specification. (NRTM 3.3.4.4.1.5.2.4).  RECORD this information as: TMDD_N12R328_Alternate_Route_Names___Route_Inventory_Supported = ${TMDD_N12R328_Alternate_Route_Names___Route_Inventory_Supported}" passfailResult="False"/>
     <testStep functionId="Step 7 CONFIGURE: Determine whether Route Length is required by the specification. (NRTM 3.3.4.4.1.5.2.5).  RECORD this information as: TMDD_N12R329_Route_Length_Supported = ${TMDD_N12R329_Route_Length_Supported}" passfailResult="False"/>
     <testStep functionId="Step 8 CONFIGURE: Determine whether Node List is required by the specification. (NRTM 3.3.4.4.1.5.2.6).  RECORD this information as: TMDD_N12R330_Node_List_Supported = ${TMDD_N12R330_Node_List_Supported}" passfailResult="False"/>
     <testStep functionId="Step 9 CONFIGURE: Determine whether Route Image URL (RouteURL) is required by the specification. (NRTM 3.3.4.4.1.5.2.7).  RECORD this information as: TMDD_N12R331_Route_Image_URL__RouteURL__Supported = ${TMDD_N12R331_Route_Image_URL__RouteURL__Supported}" passfailResult="False"/>
     <testStep functionId="Step 10 CONFIGURE: Determine whether Route Image URL Reference Medium is required by the specification. (NRTM 3.3.4.4.1.5.2.8).  RECORD this information as: TMDD_N12R332_Route_Image_URL_Reference_Medium_Supported = ${TMDD_N12R332_Route_Image_URL_Reference_Medium_Supported}" passfailResult="False"/>
     <testStep functionId="Step 11 CONFIGURE: Determine whether Route Inventory Date and Time Change Information is required by the specification. (NRTM 3.3.4.4.1.5.2.9).  RECORD this information as: TMDD_N12R333_Route_Inventory_Date_and_Time_Change_Information_Supported = ${TMDD_N12R333_Route_Inventory_Date_and_Time_Change_Information_Supported}" passfailResult="False"/>
     <testStep functionId="Step 12 CONFIGURE: Determine whether Restrictions - Error Report is required by the specification. (NRTM 3.3.1.4.1.2.1).  RECORD this information as: TMDD_N12R14_Restrictions___Error_Report_Supported = ${TMDD_N12R14_Restrictions___Error_Report_Supported}" passfailResult="False"/>
     <C2CRI-session beginSession="true" infoStd="TMDDv3.03d" appStd="${ApplicationLayerStandard}" useWSDL="true" testCaseIdentifier="${C2CRITestCaseID}" riMode="EC">
          <testStep functionId="Step 13 CONFIGURE: Define the message that will be sent to the SUT.  RECORD this information as: RequestMessage:  ${RequestMessage}" passfailResult="False"/>
          <testStep functionId="Step 14 CONFIGURE: Determine whether an error response message is expected for this test.  RECORD this information as: ErrorResponseExpected:  ${ErrorResponseExpected}" passfailResult="False"/>
          <jl:if test="${ErrorResponseExpected}">
               <testStep functionId="Step 15 CONFIGURE: IF ErrorResponseExpected is true, determine the expected error code response for this test.  RECORD this information as:  ErrorTypeExpected:  ${ErrorTypeExpected}" passfailResult="False"/>
          </jl:if>
          <testStep functionId="Step 16 REQUEST-RESPONSE-EC with the following parameters:   DIALOG=dlRouteInventoryRequest RESPONSETIMEREQUIRED=TMDD_N12R319_Send_Route_Inventory_Information_Upon_Request_Parameter REQUESTMESSAGE = RequestMessage ERRORRESPONSEEXPECTED = ErrorResponseExpected ERRORTYPEEXPECTED = ErrorTypeExpected ">
               <REQUEST-RESPONSE-EC Dialog="dlRouteInventoryRequest" functionId="dlRouteInventoryRequest" RESPONSETIMEREQUIRED="${TMDD_N12R319_Send_Route_Inventory_Information_Upon_Request_Parameter}" REQUESTMESSAGE="${RequestMessage}" ERRORRESPONSEEXPECTED="${ErrorResponseExpected}" ERRORTYPEEXPECTED="${ErrorTypeExpected}"/>
          </testStep>
          <testStep functionId="Step 17 IF ErrorResponseExpected is not equal to TRUE THEN CONTINUE, OTHERWISE skip the following substeps.  Note: If a verification step fails, then test execution will proceed at the next subsequent Post Condition step, if present.  Otherwise, test execution will proceed to the final Exit step." passfailResult="False"/>
          <jl:if test="${!ErrorResponseExpected}">
               <testStep functionId="Step 17.1 VERIFY that a routeInventoryMsg message was received." passfailResult="True">
                    <ri-MessageVerify msgType="RESPONSE" elementName="routeInventoryMsg" instanceName="tmdd:routeInventoryMsg" elementType="message" functionId="Looking for routeInventoryMsg"/>
               </testStep>
               <testStep functionId="Step 17.2 VERIFY that an organization-information data frame exists within each instance of data frame routeInventoryMsg.route-inventory-item" passfailResult="True">
                    <ri-MessageVerify msgType="RESPONSE" elementName="organization-information" instanceName="tmdd:routeInventoryMsg.route-inventory-item" elementType="data-frame" functionId="Looking for routeInventoryMsg.route-inventory-item"/>
               </testStep>
               <testStep functionId="Step 17.3 VERIFY that a network-id data element exists within each instance of data frame routeInventoryMsg.route-inventory-item.route-inventory-list.route" passfailResult="True">
                    <ri-MessageVerify msgType="RESPONSE" elementName="network-id" instanceName="tmdd:routeInventoryMsg.route-inventory-item.route-inventory-list.route" elementType="data-element" functionId="Looking for routeInventoryMsg.route-inventory-item.route-inventory-list.route"/>
               </testStep>
               <testStep functionId="Step 17.4 VERIFY that a route-id data element exists within each instance of data frame routeInventoryMsg.route-inventory-item.route-inventory-list.route" passfailResult="True">
                    <ri-MessageVerify msgType="RESPONSE" elementName="route-id" instanceName="tmdd:routeInventoryMsg.route-inventory-item.route-inventory-list.route" elementType="data-element" functionId="Looking for routeInventoryMsg.route-inventory-item.route-inventory-list.route"/>
               </testStep>
               <testStep functionId="Step 17.5 VERIFY that a route-link-id-list data frame exists within each instance of data frame routeInventoryMsg.route-inventory-item.route-inventory-list.route" passfailResult="True">
                    <ri-MessageVerify msgType="RESPONSE" elementName="route-link-id-list" instanceName="tmdd:routeInventoryMsg.route-inventory-item.route-inventory-list.route" elementType="data-element" functionId="Looking for routeInventoryMsg.route-inventory-item.route-inventory-list.route"/>
               </testStep>
               <testStep functionId="Step 17.6 VERIFY that a route-type data element exists within each instance of data frame routeInventoryMsg.route-inventory-item.route-inventory-list.route" passfailResult="True">
                    <ri-MessageVerify msgType="RESPONSE" elementName="route-type" instanceName="tmdd:routeInventoryMsg.route-inventory-item.route-inventory-list.route" elementType="data-element" functionId="Looking for routeInventoryMsg.route-inventory-item.route-inventory-list.route"/>
               </testStep>
               <testStep functionId="Step 17.7 IF TMDD_N12R325_Restrictions___Route_Inventory_Supported is equal to TRUE THEN CONTINUE; OTHERWISE skip the following substeps." passFailResult="False"/>
               <jl:if test="${TMDD_N12R325_Restrictions___Route_Inventory_Supported}">
                    <testStep functionId="Step 17.7.1 VERIFY that a restrictions data frame exists within each instance of data frame routeInventoryMsg.route-inventory-item" passfailResult="True">
                         <ri-MessageVerify msgType="RESPONSE" elementName="restrictions" instanceName="tmdd:routeInventoryMsg.route-inventory-item" elementType="data-frame" functionId="Looking for routeInventoryMsg.route-inventory-item"/>
                    </testStep>
               </jl:if>
               <testStep functionId="Step 17.8 IF TMDD_N12R326_Roadway_Network_Name___Route_Inventory_Supported is equal to TRUE THEN CONTINUE; OTHERWISE skip the following substeps." passFailResult="False"/>
               <jl:if test="${TMDD_N12R326_Roadway_Network_Name___Route_Inventory_Supported}">
                    <testStep functionId="Step 17.8.1 VERIFY that a network-name data element exists within each instance of data frame routeInventoryMsg.route-inventory-item.route-inventory-list.route" passfailResult="True">
                         <ri-MessageVerify msgType="RESPONSE" elementName="network-name" instanceName="tmdd:routeInventoryMsg.route-inventory-item.route-inventory-list.route" elementType="data-element" functionId="Looking for routeInventoryMsg.route-inventory-item.route-inventory-list.route"/>
                    </testStep>
               </jl:if>
               <testStep functionId="Step 17.9 IF TMDD_N12R327_Route_Name___Route_Inventory_Supported is equal to TRUE THEN CONTINUE; OTHERWISE skip the following substeps." passFailResult="False"/>
               <jl:if test="${TMDD_N12R327_Route_Name___Route_Inventory_Supported}">
                    <testStep functionId="Step 17.9.1 VERIFY that a route-name data element exists within each instance of data frame routeInventoryMsg.route-inventory-item.route-inventory-list.route" passfailResult="True">
                         <ri-MessageVerify msgType="RESPONSE" elementName="route-name" instanceName="tmdd:routeInventoryMsg.route-inventory-item.route-inventory-list.route" elementType="data-element" functionId="Looking for routeInventoryMsg.route-inventory-item.route-inventory-list.route"/>
                    </testStep>
               </jl:if>
               <testStep functionId="Step 17.10 IF TMDD_N12R328_Alternate_Route_Names___Route_Inventory_Supported is equal to TRUE THEN CONTINUE; OTHERWISE skip the following substeps." passFailResult="False"/>
               <jl:if test="${TMDD_N12R328_Alternate_Route_Names___Route_Inventory_Supported}">
                    <testStep functionId="Step 17.10.1 VERIFY that an alternate-route-name-list data frame exists within each instance of data frame routeInventoryMsg.route-inventory-item.route-inventory-list.route" passfailResult="True">
                         <ri-MessageVerify msgType="RESPONSE" elementName="alternate-route-name-list" instanceName="tmdd:routeInventoryMsg.route-inventory-item.route-inventory-list.route" elementType="data-element" functionId="Looking for routeInventoryMsg.route-inventory-item.route-inventory-list.route"/>
                    </testStep>
               </jl:if>
               <testStep functionId="Step 17.11 IF TMDD_N12R329_Route_Length_Supported is equal to TRUE THEN CONTINUE; OTHERWISE skip the following substeps." passFailResult="False"/>
               <jl:if test="${TMDD_N12R329_Route_Length_Supported}">
                    <testStep functionId="Step 17.11.1 VERIFY that a route-length data element exists within each instance of data frame routeInventoryMsg.route-inventory-item.route-inventory-list.route" passfailResult="True">
                         <ri-MessageVerify msgType="RESPONSE" elementName="route-length" instanceName="tmdd:routeInventoryMsg.route-inventory-item.route-inventory-list.route" elementType="data-element" functionId="Looking for routeInventoryMsg.route-inventory-item.route-inventory-list.route"/>
                    </testStep>
               </jl:if>
               <testStep functionId="Step 17.12 IF TMDD_N12R330_Node_List_Supported is equal to TRUE THEN CONTINUE; OTHERWISE skip the following substeps." passFailResult="False"/>
               <jl:if test="${TMDD_N12R330_Node_List_Supported}">
                    <testStep functionId="Step 17.12.1 VERIFY that a route-node-id-list data frame exists within each instance of data frame routeInventoryMsg.route-inventory-item.route-inventory-list.route" passfailResult="True">
                         <ri-MessageVerify msgType="RESPONSE" elementName="route-node-id-list" instanceName="tmdd:routeInventoryMsg.route-inventory-item.route-inventory-list.route" elementType="data-element" functionId="Looking for routeInventoryMsg.route-inventory-item.route-inventory-list.route"/>
                    </testStep>
               </jl:if>
               <testStep functionId="Step 17.13 IF TMDD_N12R331_Route_Image_URL__RouteURL__Supported is equal to TRUE THEN CONTINUE; OTHERWISE skip the following substeps." passFailResult="False"/>
               <jl:if test="${TMDD_N12R331_Route_Image_URL__RouteURL__Supported}">
                    <testStep functionId="Step 17.13.1 VERIFY that a route-url data frame exists within each instance of data frame routeInventoryMsg.route-inventory-item.route-inventory-list.route" passfailResult="True">
                         <ri-MessageVerify msgType="RESPONSE" elementName="route-url" instanceName="tmdd:routeInventoryMsg.route-inventory-item.route-inventory-list.route" elementType="data-frame" functionId="Looking for routeInventoryMsg.route-inventory-item.route-inventory-list.route"/>
                    </testStep>
               </jl:if>
               <testStep functionId="Step 17.14 IF TMDD_N12R332_Route_Image_URL_Reference_Medium_Supported is equal to TRUE THEN CONTINUE; OTHERWISE skip the following substeps." passFailResult="False"/>
               <jl:if test="${TMDD_N12R332_Route_Image_URL_Reference_Medium_Supported}">
                    <testStep functionId="Step 17.14.1 VERIFY that an url-reference-medium data element exists within each instance of data frame routeInventoryMsg.route-inventory-item.route-inventory-list.route.route-url" passfailResult="True">
                         <ri-MessageVerify msgType="RESPONSE" elementName="url-reference-medium" instanceName="tmdd:routeInventoryMsg.route-inventory-item.route-inventory-list.route.route-url" elementType="data-element" functionId="Looking for routeInventoryMsg.route-inventory-item.route-inventory-list.route.route-url"/>
                    </testStep>
               </jl:if>
               <testStep functionId="Step 17.15 IF TMDD_N12R333_Route_Inventory_Date_and_Time_Change_Information_Supported is equal to TRUE THEN CONTINUE; OTHERWISE skip the following substeps." passFailResult="False"/>
               <jl:if test="${TMDD_N12R333_Route_Inventory_Date_and_Time_Change_Information_Supported}">
                    <testStep functionId="Step 17.15.1 VERIFY that a last-update-time data frame exists within each instance of data frame routeInventoryMsg.route-inventory-item.route-inventory-list.route" passfailResult="True">
                         <ri-MessageVerify msgType="RESPONSE" elementName="last-update-time" instanceName="tmdd:routeInventoryMsg.route-inventory-item.route-inventory-list.route" elementType="data-frame" functionId="Looking for routeInventoryMsg.route-inventory-item.route-inventory-list.route"/>
                    </testStep>
               </jl:if>
               <testStep functionId="Step 17.16 VERIFY that the values within the RESPONSE message are correct per the TMDD standard and known operational conditions.">
                    <AUTO-VERIFY-MESSAGE functionId="Automatically Verify message content" msgName="RESPONSE" verificationSpec="${VerificationSpec}"/>
                    <USER-VERIFY-MESSAGE functionId="The User Verifies the message content" msgName="RESPONSE" optionList="TMDD_N12R325_Restrictions___Route_Inventory_Supported,restrictions,tmdd:routeInventoryMsg.route-inventory-item;TMDD_N12R326_Roadway_Network_Name___Route_Inventory_Supported,network-name,tmdd:routeInventoryMsg.route-inventory-item.route-inventory-list.route;TMDD_N12R327_Route_Name___Route_Inventory_Supported,route-name,tmdd:routeInventoryMsg.route-inventory-item.route-inventory-list.route;TMDD_N12R328_Alternate_Route_Names___Route_Inventory_Supported,alternate-route-name-list,tmdd:routeInventoryMsg.route-inventory-item.route-inventory-list.route;TMDD_N12R329_Route_Length_Supported,route-length,tmdd:routeInventoryMsg.route-inventory-item.route-inventory-list.route;TMDD_N12R330_Node_List_Supported,route-node-id-list,tmdd:routeInventoryMsg.route-inventory-item.route-inventory-list.route;TMDD_N12R331_Route_Image_URL__RouteURL__Supported,route-url,tmdd:routeInventoryMsg.route-inventory-item.route-inventory-list.route;TMDD_N12R332_Route_Image_URL_Reference_Medium_Supported,url-reference-medium,tmdd:routeInventoryMsg.route-inventory-item.route-inventory-list.route.route-url;TMDD_N12R333_Route_Inventory_Date_and_Time_Change_Information_Supported,last-update-time,tmdd:routeInventoryMsg.route-inventory-item.route-inventory-list.route;TMDD_N12R14_Restrictions___Error_Report_Supported,restrictions,tmdd:errorReportMsg;" userDataFile="${RI_USERTCDATAFILE}"/>
               </testStep>
          </jl:if>
          <testStep functionId="Step 18 IF ErrorResponseExpected is equal to TRUE THEN CONTINUE, OTHERWISE skip the following substeps.  If a verification step fails, then test execution will proceed at the next subsequent Post Condition step, if present.  Otherwise, test execution will proceed to the final Exit step." passfailResult="False"/>
          <jl:if test="${ErrorResponseExpected}">
               <testStep functionId="Step 18.1 VERIFY that an errorReportMsg message was received." passfailResult="True">
                    <ri-MessageVerify msgType="RESPONSE" elementName="errorReportMsg" instanceName="tmdd:errorReportMsg" elementType="message" functionId="Looking for errorReportMsg"/>
               </testStep>
               <testStep functionId="Step 18.2 VERIFY that an organization-information data frame exists within message errorReportMsg." passfailResult="True">
                    <ri-MessageVerify msgType="RESPONSE" elementName="organization-information" instanceName="tmdd:errorReportMsg" elementType="data-frame" functionId="Looking for errorReportMsg"/>
               </testStep>
               <testStep functionId="Step 18.3 VERIFY that an organization-requesting data frame exists within message errorReportMsg." passfailResult="True">
                    <ri-MessageVerify msgType="RESPONSE" elementName="organization-requesting" instanceName="tmdd:errorReportMsg" elementType="data-frame" functionId="Looking for errorReportMsg"/>
               </testStep>
               <testStep functionId="Step 18.4 VERIFY that an error-code data element exists within message errorReportMsg." passfailResult="True">
                    <ri-MessageVerify msgType="RESPONSE" elementName="error-code" instanceName="tmdd:errorReportMsg" elementType="data-element" functionId="Looking for errorReportMsg"/>
               </testStep>
               <testStep functionId="Step 18.5 VERIFY that an error-text data element exists within message errorReportMsg." passfailResult="True">
                    <ri-MessageVerify msgType="RESPONSE" elementName="error-text" instanceName="tmdd:errorReportMsg" elementType="data-element" functionId="Looking for errorReportMsg"/>
               </testStep>
               <testStep functionId="Step 18.6 VERIFY that data element error-code is set to ErrorResponseTypeExpected." passfailResult="True">
                    <ri-MessageVerify msgType="RESPONSE" elementName="error-code" instanceName="tmdd:errorReportMsg" instanceValue="${ErrorResponseTypeExpected}" elementType="data-element" functionId="Looking for errorReportMsg"/>
               </testStep>
               <testStep functionId="Step 18.7 IF TMDD_N12R14_Restrictions___Error_Report_Supported is equal to TRUE THEN CONTINUE; OTHERWISE skip the following substeps." passFailResult="False"/>
               <jl:if test="${TMDD_N12R14_Restrictions___Error_Report_Supported}">
                    <testStep functionId="Step 18.7.1 VERIFY that a restrictions data frame exists within message errorReportMsg." passfailResult="True">
                         <ri-MessageVerify msgType="RESPONSE" elementName="restrictions" instanceName="tmdd:errorReportMsg" elementType="data-frame" functionId="Looking for errorReportMsg"/>
                    </testStep>
               </jl:if>
          </jl:if>
          <postcondition>
               <testStep functionId=" Step 19 EXIT" passfailResult="False"/>
          </postcondition>
     </C2CRI-session>
</testprocedure>