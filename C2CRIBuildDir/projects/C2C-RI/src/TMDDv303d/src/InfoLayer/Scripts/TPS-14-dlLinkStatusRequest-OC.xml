<?xml version="1.0" encoding="UTF-8"?>
<!--Title:  TPS-14-dlLinkStatusRequest-OC
       Description:  This test procedure is called by a test case and is used to verify the SUTs support of the dlLinkStatusRequest dialog as an OC using variables provided by the calling test case.  
This procedure supports verification of requirements related to user need 2.3.4.2.2 [Need to Share Link State] and is used for both valid and invalid test cases.
       Version/Date: 2014/01/17 23:48:33-->
<testprocedure xmlns="jelly:jameleon" xmlns:jl="jelly:core">
     <test-case-id>${C2CRITestCaseID}</test-case-id>
     <test-case-summary>This test procedure is called by a test case and is used to verify the SUTs support of the dlLinkStatusRequest dialog as an OC using variables provided by the calling test case.  
This procedure supports verification of requirements related to user need 2.3.4.2.2 [Need to Share Link State] and is used for both valid and invalid test cases.</test-case-summary>
     <testStep functionId="Step 1 CONFIGURE: Determine the Application Layer Standard that will be used for this test.  RECORD this information as: ApplicationLayerStandard:  ${ApplicationLayerStandard}" passfailResult="False "/>
     <testStep functionId="Step 2 CONFIGURE: Determine the dialog performance requirement for Send Link Status Information Upon Request (NTRM 3.3.4.3.2.1}.  RECORD this value as: TMDD_N14R275_Send_Link_Status_Information_Upon_Request_Parameter = ${TMDD_N14R275_Send_Link_Status_Information_Upon_Request_Parameter}" passfailResult="False"/>
     <testStep functionId="Step 3 CONFIGURE: Determine whether Restrictions - Link Status is required by the specification. (NRTM 3.3.4.3.2.5.2.1).  RECORD this information as: TMDD_N14R281_Restrictions___Link_Status_Supported = ${TMDD_N14R281_Restrictions___Link_Status_Supported}" passfailResult="False"/>
     <testStep functionId="Step 4 CONFIGURE: Determine whether Link Name - Link Status is required by the specification. (NRTM 3.3.4.3.2.5.2.2).  RECORD this information as: TMDD_N14R282_Link_Name___Link_Status_Supported = ${TMDD_N14R282_Link_Name___Link_Status_Supported}" passfailResult="False"/>
     <testStep functionId="Step 5 CONFIGURE: Determine whether Link Direction - Link Status is required by the specification. (NRTM 3.3.4.3.2.5.2.3).  RECORD this information as: TMDD_N14R283_Link_Direction___Link_Status_Supported = ${TMDD_N14R283_Link_Direction___Link_Status_Supported}" passfailResult="False"/>
     <testStep functionId="Step 6 CONFIGURE: Determine whether Lanes Open is required by the specification. (NRTM 3.3.4.3.2.5.2.4).  RECORD this information as: TMDD_N14R284_Lanes_Open_Supported = ${TMDD_N14R284_Lanes_Open_Supported}" passfailResult="False"/>
     <testStep functionId="Step 7 CONFIGURE: Determine whether Roadway Event Source is required by the specification. (NRTM 3.3.4.3.2.5.2.19).  RECORD this information as: TMDD_N14R299_Roadway_Event_Source_Supported = ${TMDD_N14R299_Roadway_Event_Source_Supported}" passfailResult="False"/>
     <testStep functionId="Step 8 CONFIGURE: Determine whether Event Description Time - Link Status is required by the specification. (NRTM 3.3.4.3.2.5.2.37).  RECORD this information as: TMDD_N14R317_Event_Description_Time___Link_Status_Supported = ${TMDD_N14R317_Event_Description_Time___Link_Status_Supported}" passfailResult="False"/>
     <testStep functionId="Step 9 CONFIGURE: Determine whether Link Status Date and Time Change Information is required by the specification. (NRTM 3.3.4.3.2.5.2.38).  RECORD this information as: TMDD_N14R318_Link_Status_Date_and_Time_Change_Information_Supported = ${TMDD_N14R318_Link_Status_Date_and_Time_Change_Information_Supported}" passfailResult="False"/>
     <testStep functionId="Step 10 CONFIGURE: Determine whether Restrictions - Error Report is required by the specification. (NRTM 3.3.1.4.1.2.1).  RECORD this information as: TMDD_N14R14_Restrictions___Error_Report_Supported = ${TMDD_N14R14_Restrictions___Error_Report_Supported}" passfailResult="False"/>
     <C2CRI-session beginSession="true" infoStd="TMDDv3.03d" appStd="${ApplicationLayerStandard}" useWSDL="true" testCaseIdentifier="${C2CRITestCaseID}" riMode="EC">
          <testStep functionId="Step 11 CONFIGURE: Define the message that will be sent to the SUT.  RECORD this information as: RequestMessage:  ${RequestMessage}" passfailResult="False"/>
          <testStep functionId="Step 12 CONFIGURE: Determine whether an error response message is expected for this test.  RECORD this information as: ErrorResponseExpected:  ${ErrorResponseExpected}" passfailResult="False"/>
          <jl:if test="${ErrorResponseExpected}">
               <testStep functionId="Step 13 CONFIGURE: IF ErrorResponseExpected is true, determine the expected error code response for this test.  RECORD this information as:  ErrorTypeExpected:  ${ErrorTypeExpected}" passfailResult="False"/>
          </jl:if>
          <testStep functionId="Step 14 REQUEST-RESPONSE-EC with the following parameters:   DIALOG=dlLinkStatusRequest RESPONSETIMEREQUIRED=TMDD_N14R275_Send_Link_Status_Information_Upon_Request_Parameter REQUESTMESSAGE = RequestMessage ERRORRESPONSEEXPECTED = ErrorResponseExpected ERRORTYPEEXPECTED = ErrorTypeExpected ">
               <REQUEST-RESPONSE-EC Dialog="dlLinkStatusRequest" functionId="dlLinkStatusRequest" RESPONSETIMEREQUIRED="${TMDD_N14R275_Send_Link_Status_Information_Upon_Request_Parameter}" REQUESTMESSAGE="${RequestMessage}" ERRORRESPONSEEXPECTED="${ErrorResponseExpected}" ERRORTYPEEXPECTED="${ErrorTypeExpected}"/>
          </testStep>
          <testStep functionId="Step 15 IF ErrorResponseExpected is not equal to TRUE THEN CONTINUE, OTHERWISE skip the following substeps.  Note: If a verification step fails, then test execution will proceed at the next subsequent Post Condition step, if present.  Otherwise, test execution will proceed to the final Exit step." passfailResult="False"/>
          <jl:if test="${!ErrorResponseExpected}">
               <testStep functionId="Step 15.1 VERIFY that a linkStatusMsg message was received." passfailResult="True">
                    <ri-MessageVerify msgType="RESPONSE" elementName="linkStatusMsg" instanceName="tmdd:linkStatusMsg" elementType="message" functionId="Looking for linkStatusMsg"/>
               </testStep>
               <testStep functionId="Step 15.2 VERIFY that an organization-information data frame exists within each instance of data frame linkStatusMsg.link-status-item" passfailResult="True">
                    <ri-MessageVerify msgType="RESPONSE" elementName="organization-information" instanceName="tmdd:linkStatusMsg.link-status-item" elementType="data-frame" functionId="Looking for linkStatusMsg.link-status-item"/>
               </testStep>
               <testStep functionId="Step 15.3 VERIFY that a network-id data element exists within each instance of data frame linkStatusMsg.link-status-item.link-status-list.link" passfailResult="True">
                    <ri-MessageVerify msgType="RESPONSE" elementName="network-id" instanceName="tmdd:linkStatusMsg.link-status-item.link-status-list.link" elementType="data-element" functionId="Looking for linkStatusMsg.link-status-item.link-status-list.link"/>
               </testStep>
               <testStep functionId="Step 15.4 VERIFY that a link-id data element exists within each instance of data frame linkStatusMsg.link-status-item.link-status-list.link" passfailResult="True">
                    <ri-MessageVerify msgType="RESPONSE" elementName="link-id" instanceName="tmdd:linkStatusMsg.link-status-item.link-status-list.link" elementType="data-element" functionId="Looking for linkStatusMsg.link-status-item.link-status-list.link"/>
               </testStep>
               <testStep functionId="Step 15.5 VERIFY that a link-status data element exists within each instance of data frame linkStatusMsg.link-status-item.link-status-list.link" passfailResult="True">
                    <ri-MessageVerify msgType="RESPONSE" elementName="link-status" instanceName="tmdd:linkStatusMsg.link-status-item.link-status-list.link" elementType="data-element" functionId="Looking for linkStatusMsg.link-status-item.link-status-list.link"/>
               </testStep>
               <testStep functionId="Step 15.6 IF TMDD_N14R281_Restrictions___Link_Status_Supported is equal to TRUE THEN CONTINUE; OTHERWISE skip the following substeps." passFailResult="False"/>
               <jl:if test="${TMDD_N14R281_Restrictions___Link_Status_Supported}">
                    <testStep functionId="Step 15.6.1 VERIFY that a restrictions data frame exists within each instance of data frame linkStatusMsg.link-status-item" passfailResult="True">
                         <ri-MessageVerify msgType="RESPONSE" elementName="restrictions" instanceName="tmdd:linkStatusMsg.link-status-item" elementType="data-frame" functionId="Looking for linkStatusMsg.link-status-item"/>
                    </testStep>
               </jl:if>
               <testStep functionId="Step 15.7 IF TMDD_N14R282_Link_Name___Link_Status_Supported is equal to TRUE THEN CONTINUE; OTHERWISE skip the following substeps." passFailResult="False"/>
               <jl:if test="${TMDD_N14R282_Link_Name___Link_Status_Supported}">
                    <testStep functionId="Step 15.7.1 VERIFY that a link-name data element exists within each instance of data frame linkStatusMsg.link-status-item.link-status-list.link" passfailResult="True">
                         <ri-MessageVerify msgType="RESPONSE" elementName="link-name" instanceName="tmdd:linkStatusMsg.link-status-item.link-status-list.link" elementType="data-element" functionId="Looking for linkStatusMsg.link-status-item.link-status-list.link"/>
                    </testStep>
               </jl:if>
               <testStep functionId="Step 15.8 IF TMDD_N14R283_Link_Direction___Link_Status_Supported is equal to TRUE THEN CONTINUE; OTHERWISE skip the following substeps." passFailResult="False"/>
               <jl:if test="${TMDD_N14R283_Link_Direction___Link_Status_Supported}">
                    <testStep functionId="Step 15.8.1 VERIFY that a link-direction data element exists within each instance of data frame linkStatusMsg.link-status-item.link-status-list.link" passfailResult="True">
                         <ri-MessageVerify msgType="RESPONSE" elementName="link-direction" instanceName="tmdd:linkStatusMsg.link-status-item.link-status-list.link" elementType="data-element" functionId="Looking for linkStatusMsg.link-status-item.link-status-list.link"/>
                    </testStep>
               </jl:if>
               <testStep functionId="Step 15.9 IF TMDD_N14R284_Lanes_Open_Supported is equal to TRUE THEN CONTINUE; OTHERWISE skip the following substeps." passFailResult="False"/>
               <jl:if test="${TMDD_N14R284_Lanes_Open_Supported}">
                    <testStep functionId="Step 15.9.1 VERIFY that a lanes-number-open data element exists within each instance of data frame linkStatusMsg.link-status-item.link-status-list.link" passfailResult="True">
                         <ri-MessageVerify msgType="RESPONSE" elementName="lanes-number-open" instanceName="tmdd:linkStatusMsg.link-status-item.link-status-list.link" elementType="data-element" functionId="Looking for linkStatusMsg.link-status-item.link-status-list.link"/>
                    </testStep>
               </jl:if>
               <testStep functionId="Step 15.10 IF TMDD_N14R299_Roadway_Event_Source_Supported is equal to TRUE THEN CONTINUE; OTHERWISE skip the following substeps." passFailResult="False"/>
               <jl:if test="${TMDD_N14R299_Roadway_Event_Source_Supported}">
                    <testStep functionId="Step 15.10.1 VERIFY that a detection-method data element exists within each instance of data frame linkStatusMsg.link-status-item.link-status-list.link" passfailResult="True">
                         <ri-MessageVerify msgType="RESPONSE" elementName="detection-method" instanceName="tmdd:linkStatusMsg.link-status-item.link-status-list.link" elementType="data-element" functionId="Looking for linkStatusMsg.link-status-item.link-status-list.link"/>
                    </testStep>
               </jl:if>
               <testStep functionId="Step 15.11 IF TMDD_N14R317_Event_Description_Time___Link_Status_Supported is equal to TRUE THEN CONTINUE; OTHERWISE skip the following substeps." passFailResult="False"/>
               <jl:if test="${TMDD_N14R317_Event_Description_Time___Link_Status_Supported}">
                    <testStep functionId="Step 15.11.1 VERIFY that an event-description-time data element exists within each instance of data frame linkStatusMsg.link-status-item.link-status-list.link" passfailResult="True">
                         <ri-MessageVerify msgType="RESPONSE" elementName="event-description-time" instanceName="tmdd:linkStatusMsg.link-status-item.link-status-list.link" elementType="data-element" functionId="Looking for linkStatusMsg.link-status-item.link-status-list.link"/>
                    </testStep>
               </jl:if>
               <testStep functionId="Step 15.12 IF TMDD_N14R318_Link_Status_Date_and_Time_Change_Information_Supported is equal to TRUE THEN CONTINUE; OTHERWISE skip the following substeps." passFailResult="False"/>
               <jl:if test="${TMDD_N14R318_Link_Status_Date_and_Time_Change_Information_Supported}">
                    <testStep functionId="Step 15.12.1 VERIFY that a last-update-time data frame exists within each instance of data frame linkStatusMsg.link-status-item.link-status-list.link" passfailResult="True">
                         <ri-MessageVerify msgType="RESPONSE" elementName="last-update-time" instanceName="tmdd:linkStatusMsg.link-status-item.link-status-list.link" elementType="data-frame" functionId="Looking for linkStatusMsg.link-status-item.link-status-list.link"/>
                    </testStep>
               </jl:if>
               <testStep functionId="Step 15.13 VERIFY that the values within the RESPONSE message are correct per the TMDD standard and known operational conditions.">
                    <AUTO-VERIFY-MESSAGE functionId="Automatically Verify message content" msgName="RESPONSE" verificationSpec="${VerificationSpec}"/>
                    <USER-VERIFY-MESSAGE functionId="The User Verifies the message content" msgName="RESPONSE" optionList="TMDD_N14R281_Restrictions___Link_Status_Supported,restrictions,tmdd:linkStatusMsg.link-status-item;TMDD_N14R282_Link_Name___Link_Status_Supported,link-name,tmdd:linkStatusMsg.link-status-item.link-status-list.link;TMDD_N14R283_Link_Direction___Link_Status_Supported,link-direction,tmdd:linkStatusMsg.link-status-item.link-status-list.link;TMDD_N14R284_Lanes_Open_Supported,lanes-number-open,tmdd:linkStatusMsg.link-status-item.link-status-list.link;TMDD_N14R299_Roadway_Event_Source_Supported,detection-method,tmdd:linkStatusMsg.link-status-item.link-status-list.link;TMDD_N14R317_Event_Description_Time___Link_Status_Supported,event-description-time,tmdd:linkStatusMsg.link-status-item.link-status-list.link;TMDD_N14R318_Link_Status_Date_and_Time_Change_Information_Supported,last-update-time,tmdd:linkStatusMsg.link-status-item.link-status-list.link;TMDD_N14R14_Restrictions___Error_Report_Supported,restrictions,tmdd:errorReportMsg;" userDataFile="${RI_USERTCDATAFILE}"/>
               </testStep>
          </jl:if>
          <testStep functionId="Step 16 IF ErrorResponseExpected is equal to TRUE THEN CONTINUE, OTHERWISE skip the following substeps.  If a verification step fails, then test execution will proceed at the next subsequent Post Condition step, if present.  Otherwise, test execution will proceed to the final Exit step." passfailResult="False"/>
          <jl:if test="${ErrorResponseExpected}">
               <testStep functionId="Step 16.1 VERIFY that an errorReportMsg message was received." passfailResult="True">
                    <ri-MessageVerify msgType="RESPONSE" elementName="errorReportMsg" instanceName="tmdd:errorReportMsg" elementType="message" functionId="Looking for errorReportMsg"/>
               </testStep>
               <testStep functionId="Step 16.2 VERIFY that an organization-information data frame exists within message errorReportMsg." passfailResult="True">
                    <ri-MessageVerify msgType="RESPONSE" elementName="organization-information" instanceName="tmdd:errorReportMsg" elementType="data-frame" functionId="Looking for errorReportMsg"/>
               </testStep>
               <testStep functionId="Step 16.3 VERIFY that an organization-requesting data frame exists within message errorReportMsg." passfailResult="True">
                    <ri-MessageVerify msgType="RESPONSE" elementName="organization-requesting" instanceName="tmdd:errorReportMsg" elementType="data-frame" functionId="Looking for errorReportMsg"/>
               </testStep>
               <testStep functionId="Step 16.4 VERIFY that an error-code data element exists within message errorReportMsg." passfailResult="True">
                    <ri-MessageVerify msgType="RESPONSE" elementName="error-code" instanceName="tmdd:errorReportMsg" elementType="data-element" functionId="Looking for errorReportMsg"/>
               </testStep>
               <testStep functionId="Step 16.5 VERIFY that an error-text data element exists within message errorReportMsg." passfailResult="True">
                    <ri-MessageVerify msgType="RESPONSE" elementName="error-text" instanceName="tmdd:errorReportMsg" elementType="data-element" functionId="Looking for errorReportMsg"/>
               </testStep>
               <testStep functionId="Step 16.6 VERIFY that data element error-code is set to ErrorResponseTypeExpected." passfailResult="True">
                    <ri-MessageVerify msgType="RESPONSE" elementName="error-code" instanceName="tmdd:errorReportMsg" instanceValue="${ErrorResponseTypeExpected}" elementType="data-element" functionId="Looking for errorReportMsg"/>
               </testStep>
               <testStep functionId="Step 16.7 IF TMDD_N14R14_Restrictions___Error_Report_Supported is equal to TRUE THEN CONTINUE; OTHERWISE skip the following substeps." passFailResult="False"/>
               <jl:if test="${TMDD_N14R14_Restrictions___Error_Report_Supported}">
                    <testStep functionId="Step 16.7.1 VERIFY that a restrictions data frame exists within message errorReportMsg." passfailResult="True">
                         <ri-MessageVerify msgType="RESPONSE" elementName="restrictions" instanceName="tmdd:errorReportMsg" elementType="data-frame" functionId="Looking for errorReportMsg"/>
                    </testStep>
               </jl:if>
          </jl:if>
          <postcondition>
               <testStep functionId=" Step 17 EXIT" passfailResult="False"/>
          </postcondition>
     </C2CRI-session>
</testprocedure>