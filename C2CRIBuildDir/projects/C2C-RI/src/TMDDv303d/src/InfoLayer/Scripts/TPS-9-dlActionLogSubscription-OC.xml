<?xml version="1.0" encoding="UTF-8"?>
<!--Title:  TPS-9-dlActionLogSubscription-OC
       Description:  This test procedure is called by a test case and is used to verify the SUTs support of the dlActionLogSubscription dialog as an OC using variables provided by the calling test case.  
This procedure supports verification of requirements related to user need 2.3.3.5 [Need to Share the Log of a Current Event] and is used for both valid and invalid test cases.
       Version/Date: 2014/01/17 23:44:26-->
<testprocedure xmlns="jelly:jameleon" xmlns:jl="jelly:core">
     <test-case-id>${C2CRITestCaseID}</test-case-id>
     <test-case-summary>This test procedure is called by a test case and is used to verify the SUTs support of the dlActionLogSubscription dialog as an OC using variables provided by the calling test case.  
This procedure supports verification of requirements related to user need 2.3.3.5 [Need to Share the Log of a Current Event] and is used for both valid and invalid test cases.</test-case-summary>
     <testStep functionId="Step 1 CONFIGURE: Determine the Application Layer Standard that will be used for this test.  RECORD this information as: ApplicationLayerStandard:  ${ApplicationLayerStandard}" passfailResult="False "/>
     <testStep functionId="Step 2 CONFIGURE: Determine the dialog performance requirement for Publish Action Log Information (NTRM 3.3.3.8.2}.  RECORD this value as: TMDD_N9R202_Publish_Action_Log_Information_Parameter = ${TMDD_N9R202_Publish_Action_Log_Information_Parameter}" passfailResult="False"/>
     <testStep functionId="Step 3 CONFIGURE: Determine the dialog performance requirement for Subscribe to Action Log Information (NTRM 3.3.3.8.3}.  RECORD this value as: TMDD_N9R203_Subscribe_to_Action_Log_Information_Parameter = ${TMDD_N9R203_Subscribe_to_Action_Log_Information_Parameter}" passfailResult="False"/>
     <testStep functionId="Step 4 CONFIGURE: Determine whether Restrictions - Error Report is required by the specification. (NRTM 3.3.1.4.1.2.1).  RECORD this information as: TMDD_N9R14_Restrictions___Error_Report_Supported = ${TMDD_N9R14_Restrictions___Error_Report_Supported}" passfailResult="False"/>
     <testStep functionId="Step 5 CONFIGURE: Determine whether Restrictions - Action Logs is required by the specification. (NRTM 3.3.3.8.4.2.1).  RECORD this information as: TMDD_N9R206_Restrictions___Action_Logs_Supported = ${TMDD_N9R206_Restrictions___Action_Logs_Supported}" passfailResult="False"/>
     <C2CRI-session beginSession="true" infoStd="TMDDv3.03d" appStd="${ApplicationLayerStandard}" useWSDL="true" testCaseIdentifier="${C2CRITestCaseID}" riMode="EC">
          <testStep functionId="Step 6 CONFIGURE: Determine the number of publication message transmissions that will be received within this test.  RECORD this information as: PublicationsToReceive:  ${PublicationsToReceive}" passfailResult="False"/>
          <testStep functionId="Step 7 CONFIGURE: Determine whether an error response message is expected for this test.  RECORD this information as: PublicationErrorResponseExpected:  ${PublicationErrorResponseExpected}" passfailResult="False"/>
          <jl:if test="${PublicationErrorResponseExpected}">
               <testStep functionId="Step 8 CONFIGURE: IF PublicationErrorResponseExpected is true, determine the expected error code response for this test.  RECORD this information as:  PublicationErrorTypeExpected:  ${PublicationErrorTypeExpected}" passfailResult="False"/>
          </jl:if>
          <testStep functionId="Step 9 CONFIGURE: Define the publication response message that will be sent to the SUT.  RECORD this information as: PublicationResponseMessage:  ${PublicationResponseMessage}" passfailResult="False"/>
          <testStep functionId="Step 10 CONFIGURE: Determine whether the Authentication parameters need to be verified within this test.  RECORD this information as: AuthenticationCheck:  ${AuthenticationCheck}" passfailResult="False"/>
          <testStep functionId="Step 11 CONFIGURE: Determine whether the SUT will be allowed access to the information requested in this test.  RECORD this information as: AllowAccess:  ${AllowAccess}" passfailResult="False"/>
          <testStep functionId="Step 12 CONFIGURE: Define the subscription message that will be sent to the SUT.  RECORD this information as: SubscriptionMessage:  ${SubscriptionMessage}" passfailResult="False"/>
          <testStep functionId="Step 13 CONFIGURE: Determine whether an error response message is expected for this test.  RECORD this information as: SubscriptionErrorResponseExpected:  ${SubscriptionErrorResponseExpected}" passfailResult="False"/>
          <jl:if test="${SubscriptionErrorResponseExpected}">
               <testStep functionId="Step 14 CONFIGURE: IF SubscriptionErrorResponseExpected is true, determine the expected error code response for this test.  RECORD this information as:  SubscriptionErrorTypeExpected:  ${SubscriptionErrorTypeExpected}" passfailResult="False"/>
          </jl:if>
          <testStep functionId="Step 15 SUBSCRIPTION-EC with the following parameters:   DIALOG=dlActionLogSubscription RESPONSETIMEREQUIRED= SUBSCRIPTIONMESSAGE = SubscriptionMessage SUBSCRIPTIONERRORRESPONSEEXPECTED = SubscriptionErrorResponseExpected SUBSCRIPTIONERRORTYPEEXPECTED = SubscriptionErrorTypeExpected  Returns: CONTINUEPUBLICATION ">
               <SUBSCRIPTION-EC Dialog="dlActionLogSubscription" functionId="dlActionLogSubscription" RESPONSETIMEREQUIRED="60000" SUBSCRIPTIONMESSAGE="${SubscriptionMessage}" SUBSCRIPTIONERRORRESPONSEEXPECTED="${SubscriptionErrorResponseExpected}" SUBSCRIPTIONERRORTYPEEXPECTED="${SubscriptionErrorTypeExpected}"/>
          </testStep>
          <testStep functionId="Step 16 IF SubscriptionErrorResponseExpected is not equal to TRUE THEN CONTINUE, OTHERWISE skip the following substeps.  Note: If a verification step fails, then test execution will proceed at the next subsequent Post Condition step, if present.  Otherwise, test execution will proceed to the final Exit step." passfailResult="False"/>
          <jl:if test="${!SubscriptionErrorResponseExpected}">
               <testStep functionId="Step 16.1 WHILE CONTINUEPUBLICATION is equal to TRUE then CONTINUE, OTHERWISE skip the following substeps.  Note:If a verification step fails, then test execution will proceed at the next subsequent Post Condition step, if present.  Otherwise, test execution will proceed to the final Exit step."/>
               <jl:while test="${CONTINUEPUBLICATION}">
                    <testStep functionId="Step 16.1.1 PUBLICATION-EC-RECEIVE with the following parameters:   DIALOG=dlActionLogUpdate RESPONSETIMEREQUIRED=TMDD_N9R202_Publish_Action_Log_Information_Parameter PUBLICATIONSTORECEIVE = PublicationsToReceive PUBLICATIONERRORRESPONSEEXPECTED = PublicationErrorResponseExpected PUBLICATIONERRORTYPEEXPECTED = PublicationErrorTypeExpected AUTHENTICATIONCHECK = AuthenticationCheck ALLOWACCESS = AllowAccess  Returns: CONTINUEPUBLICATION ">
                         <PUBLICATION-EC-RECEIVE Dialog="dlActionLogUpdate" functionId="dlActionLogUpdate" RESPONSETIMEREQUIRED="${TMDD_N9R202_Publish_Action_Log_Information_Parameter}" PUBLICATIONSTORECEIVE="${PublicationsToReceive}" PUBLICATIONERRORRESPONSEEXPECTED="${PublicationErrorResponseExpected}" PUBLICATIONERRORTYPEEXPECTED="${PublicationErrorTypeExpected}" AUTHENTICATIONCHECK="${AuthenticationCheck}" ALLOWACCESS="${AllowAccess}"/>
                    </testStep>
                    <testStep functionId="Step 16.1.2 IF PublicationErrorResponseExpected is not equal to TRUE THEN CONTINUE, OTHERWISE skip the following substeps.  Note: If a verification step fails, then test execution will proceed at the next subsequent Post Condition step, if present.  Otherwise, test execution will proceed to the final Exit step." passfailResult="False"/>
                    <jl:if test="${!PublicationErrorResponseExpected}">
                         <testStep functionId="Step 16.1.2.1 VERIFY that an actionLogMsg message was received." passfailResult="True">
                              <ri-MessageVerify msgType="REQUEST" elementName="actionLogMsg" instanceName="tmdd:actionLogMsg" elementType="message" functionId="Looking for actionLogMsg"/>
                         </testStep>
                         <testStep functionId="Step 16.1.2.2 VERIFY that an event-id data element exists within each instance of data frame actionLogMsg.log-entry" passfailResult="True">
                              <ri-MessageVerify msgType="REQUEST" elementName="event-id" instanceName="tmdd:actionLogMsg.log-entry" elementType="data-element" functionId="Looking for actionLogMsg.log-entry"/>
                         </testStep>
                         <testStep functionId="Step 16.1.2.3 VERIFY that an action-log-element-id data element exists within each instance of data frame actionLogMsg.log-entry" passfailResult="True">
                              <ri-MessageVerify msgType="REQUEST" elementName="action-log-element-id" instanceName="tmdd:actionLogMsg.log-entry" elementType="data-element" functionId="Looking for actionLogMsg.log-entry"/>
                         </testStep>
                         <testStep functionId="Step 16.1.2.4 VERIFY that an action-time data frame exists within each instance of data frame actionLogMsg.log-entry" passfailResult="True">
                              <ri-MessageVerify msgType="REQUEST" elementName="action-time" instanceName="tmdd:actionLogMsg.log-entry" elementType="data-frame" functionId="Looking for actionLogMsg.log-entry"/>
                         </testStep>
                         <testStep functionId="Step 16.1.2.5 VERIFY that an action-description data element exists within each instance of data frame actionLogMsg.log-entry" passfailResult="True">
                              <ri-MessageVerify msgType="REQUEST" elementName="action-description" instanceName="tmdd:actionLogMsg.log-entry" elementType="data-element" functionId="Looking for actionLogMsg.log-entry"/>
                         </testStep>
                         <testStep functionId="Step 16.1.2.6 VERIFY that an action-type data element exists within each instance of data frame actionLogMsg.log-entry" passfailResult="True">
                              <ri-MessageVerify msgType="REQUEST" elementName="action-type" instanceName="tmdd:actionLogMsg.log-entry" elementType="data-element" functionId="Looking for actionLogMsg.log-entry"/>
                         </testStep>
                         <testStep functionId="Step 16.1.2.7 IF TMDD_N9R206_Restrictions___Action_Logs_Supported is equal to TRUE THEN CONTINUE; OTHERWISE skip the following substeps." passFailResult="False"/>
                         <jl:if test="${TMDD_N9R206_Restrictions___Action_Logs_Supported}">
                              <testStep functionId="Step 16.1.2.7.1 VERIFY that a restrictions data frame exists within each instance of data frame actionLogMsg.log-entry" passfailResult="True">
                                   <ri-MessageVerify msgType="REQUEST" elementName="restrictions" instanceName="tmdd:actionLogMsg.log-entry" elementType="data-frame" functionId="Looking for actionLogMsg.log-entry"/>
                              </testStep>
                         </jl:if>
                         <testStep functionId="Step 16.1.2.8 VERIFY that the values within the REQUEST message are correct per the TMDD standard and known operational conditions.">
                              <AUTO-VERIFY-MESSAGE functionId="Automatically Verify message content" msgName="REQUEST" verificationSpec="${VerificationSpec}"/>
                              <USER-VERIFY-MESSAGE functionId="The User Verifies the message content" msgName="REQUEST" optionList="TMDD_N9R206_Restrictions___Action_Logs_Supported,restrictions,tmdd:actionLogMsg.log-entry;TMDD_N9R14_Restrictions___Error_Report_Supported,restrictions,tmdd:errorReportMsg;" userDataFile="${RI_USERTCDATAFILE}"/>
                         </testStep>
                         <testStep functionId=" Step 16.1.2.9 CONFIGURE: Set CONTENTVERIFIED to True" passfailResult="False">
                              <jl:set var="CONTENTVERIFIED" value="true"/>
                         </testStep>
                         <postcondition>
                              <testStep functionId="Step 16.1.2.10 POSTCONDITION: PUBLICATION-EC-REPLY with the following parameters:   DIALOG=dlActionLogUpdate RESPONSETIMEREQUIRED=TMDD_N9R202_Publish_Action_Log_Information_Parameter CONTENTVERIFIED = CONTENTVERIFIED PUBLICATIONRESPONSEMESSAGE = PublicationResponseMessage ">
                                   <PUBLICATION-EC-REPLY Dialog="dlActionLogUpdate" functionId="dlActionLogUpdate" RESPONSETIMEREQUIRED="${TMDD_N9R202_Publish_Action_Log_Information_Parameter}" CONTENTVERIFIED="${CONTENTVERIFIED}" PUBLICATIONRESPONSEMESSAGE="${PublicationResponseMessage}"/>
                              </testStep>
                         </postcondition>
                    </jl:if>
               </jl:while>
          </jl:if>
          <testStep functionId="Step 17 IF SubscriptionErrorResponseExpected is equal to TRUE THEN CONTINUE, OTHERWISE skip the following substeps.  If a verification step fails, then test execution will proceed at the next subsequent Post Condition step, if present.  Otherwise, test execution will proceed to the final Exit step." passfailResult="False"/>
          <jl:if test="${SubscriptionErrorResponseExpected}">
               <testStep functionId="Step 17.1 VERIFY that an errorReportMsg message was received." passfailResult="True">
                    <ri-MessageVerify msgType="RESPONSE" elementName="errorReportMsg" instanceName="tmdd:errorReportMsg" elementType="message" functionId="Looking for errorReportMsg"/>
               </testStep>
               <testStep functionId="Step 17.2 VERIFY that an organization-information data frame exists within message errorReportMsg." passfailResult="True">
                    <ri-MessageVerify msgType="RESPONSE" elementName="organization-information" instanceName="tmdd:errorReportMsg" elementType="data-frame" functionId="Looking for errorReportMsg"/>
               </testStep>
               <testStep functionId="Step 17.3 VERIFY that an organization-requesting data frame exists within message errorReportMsg." passfailResult="True">
                    <ri-MessageVerify msgType="RESPONSE" elementName="organization-requesting" instanceName="tmdd:errorReportMsg" elementType="data-frame" functionId="Looking for errorReportMsg"/>
               </testStep>
               <testStep functionId="Step 17.4 VERIFY that an error-code data element exists within message errorReportMsg." passfailResult="True">
                    <ri-MessageVerify msgType="RESPONSE" elementName="error-code" instanceName="tmdd:errorReportMsg" elementType="data-element" functionId="Looking for errorReportMsg"/>
               </testStep>
               <testStep functionId="Step 17.5 VERIFY that an error-text data element exists within message errorReportMsg." passfailResult="True">
                    <ri-MessageVerify msgType="RESPONSE" elementName="error-text" instanceName="tmdd:errorReportMsg" elementType="data-element" functionId="Looking for errorReportMsg"/>
               </testStep>
               <testStep functionId="Step 17.6 VERIFY that data element error-code is set to SubscriptionErrorResponseTypeExpected." passfailResult="True">
                    <ri-MessageVerify msgType="RESPONSE" elementName="error-code" instanceName="tmdd:errorReportMsg" instanceValue="${SubscriptionErrorResponseTypeExpected}" elementType="data-element" functionId="Looking for errorReportMsg"/>
               </testStep>
               <testStep functionId="Step 17.7 IF TMDD_N9R14_Restrictions___Error_Report_Supported is equal to TRUE THEN CONTINUE; OTHERWISE skip the following substeps." passFailResult="False"/>
               <jl:if test="${TMDD_N9R14_Restrictions___Error_Report_Supported}">
                    <testStep functionId="Step 17.7.1 VERIFY that a restrictions data frame exists within message errorReportMsg." passfailResult="True">
                         <ri-MessageVerify msgType="RESPONSE" elementName="restrictions" instanceName="tmdd:errorReportMsg" elementType="data-frame" functionId="Looking for errorReportMsg"/>
                    </testStep>
               </jl:if>
          </jl:if>
          <postcondition>
               <testStep functionId=" Step 18 EXIT" passfailResult="False"/>
          </postcondition>
     </C2CRI-session>
</testprocedure>