<?xml version="1.0" encoding="UTF-8"?>
<!--Title:  TPS-22-dlDeviceInformationSubscription-OC
       Description:  This test procedure is called by a test case and is used to verify the SUTs support of the dlDeviceInformationSubscription dialog as an OC using variables provided by the calling test case.  
This procedure supports verification of requirements related to user need 2.3.5.1.5 [Need for Detector Data Correlation] and is used for both valid and invalid test cases.
       Version/Date: 2014/01/17 23:56:52-->
<testprocedure xmlns="jelly:jameleon" xmlns:jl="jelly:core">
     <test-case-id>${C2CRITestCaseID}</test-case-id>
     <test-case-summary>This test procedure is called by a test case and is used to verify the SUTs support of the dlDeviceInformationSubscription dialog as an OC using variables provided by the calling test case.  
This procedure supports verification of requirements related to user need 2.3.5.1.5 [Need for Detector Data Correlation] and is used for both valid and invalid test cases.</test-case-summary>
     <testStep functionId="Step 1 CONFIGURE: Determine the Application Layer Standard that will be used for this test.  RECORD this information as: ApplicationLayerStandard:  ${ApplicationLayerStandard}" passfailResult="False "/>
     <testStep functionId="Step 2 CONFIGURE: Determine the dialog performance requirement for Publish Detector Inventory Information (NTRM 3.3.5.2.1.2}.  RECORD this value as: TMDD_N22R447_Publish_Detector_Inventory_Information_Parameter = ${TMDD_N22R447_Publish_Detector_Inventory_Information_Parameter}" passfailResult="False"/>
     <testStep functionId="Step 3 CONFIGURE: Determine the dialog performance requirement for Subscribe to Detector Inventory Information (NTRM 3.3.5.2.1.3}.  RECORD this value as: TMDD_N22R448_Subscribe_to_Detector_Inventory_Information_Parameter = ${TMDD_N22R448_Subscribe_to_Detector_Inventory_Information_Parameter}" passfailResult="False"/>
     <testStep functionId="Step 4 CONFIGURE: Determine whether Restrictions - Error Report is required by the specification. (NRTM 3.3.1.4.1.2.1).  RECORD this information as: TMDD_N22R15_Restrictions___Error_Report_Supported = ${TMDD_N22R15_Restrictions___Error_Report_Supported}" passfailResult="False"/>
     <testStep functionId="Step 5 CONFIGURE: Determine whether Restrictions - Device Inventory is required by the specification. (NRTM 3.3.5.1.2.1.2.1).  RECORD this information as: TMDD_N22R380_Restrictions___Device_Inventory_Supported = ${TMDD_N22R380_Restrictions___Device_Inventory_Supported}" passfailResult="False"/>
     <testStep functionId="Step 6 CONFIGURE: Determine whether Device Description is required by the specification. (NRTM 3.3.5.1.2.1.2.2).  RECORD this information as: TMDD_N22R381_Device_Description_Supported = ${TMDD_N22R381_Device_Description_Supported}" passfailResult="False"/>
     <testStep functionId="Step 7 CONFIGURE: Determine whether Device Control Type is required by the specification. (NRTM 3.3.5.1.2.1.2.3).  RECORD this information as: TMDD_N22R382_Device_Control_Type_Supported = ${TMDD_N22R382_Device_Control_Type_Supported}" passfailResult="False"/>
     <testStep functionId="Step 8 CONFIGURE: Determine whether Controller Description is required by the specification. (NRTM 3.3.5.1.2.1.2.4).  RECORD this information as: TMDD_N22R383_Controller_Description_Supported = ${TMDD_N22R383_Controller_Description_Supported}" passfailResult="False"/>
     <testStep functionId="Step 9 CONFIGURE: Determine whether Linear Reference - Device Inventory is required by the specification. (NRTM 3.3.5.1.2.1.2.11).  RECORD this information as: TMDD_N22R390_Linear_Reference___Device_Inventory_Supported = ${TMDD_N22R390_Linear_Reference___Device_Inventory_Supported}" passfailResult="False"/>
     <testStep functionId="Step 10 CONFIGURE: Determine whether Linear Reference Version is required by the specification. (NRTM 3.3.5.1.2.1.2.12).  RECORD this information as: TMDD_N22R391_Linear_Reference_Version_Supported = ${TMDD_N22R391_Linear_Reference_Version_Supported}" passfailResult="False"/>
     <testStep functionId="Step 11 CONFIGURE: Determine whether Route Designator - Device Inventory is required by the specification. (NRTM 3.3.5.1.2.1.2.13).  RECORD this information as: TMDD_N22R392_Route_Designator___Device_Inventory_Supported = ${TMDD_N22R392_Route_Designator___Device_Inventory_Supported}" passfailResult="False"/>
     <testStep functionId="Step 12 CONFIGURE: Determine whether Device Uniform Resource Locator (URL) (DeviceURL) is required by the specification. (NRTM 3.3.5.1.2.1.2.14).  RECORD this information as: TMDD_N22R393_Device_Uniform_Resource_Locator__URL___DeviceURL__Supported = ${TMDD_N22R393_Device_Uniform_Resource_Locator__URL___DeviceURL__Supported}" passfailResult="False"/>
     <testStep functionId="Step 13 CONFIGURE: Determine whether Device URL Reference Medium is required by the specification. (NRTM 3.3.5.1.2.1.2.15).  RECORD this information as: TMDD_N22R394_Device_URL_Reference_Medium_Supported = ${TMDD_N22R394_Device_URL_Reference_Medium_Supported}" passfailResult="False"/>
     <testStep functionId="Step 14 CONFIGURE: Determine whether Device Inventory Date and Time Change Information is required by the specification. (NRTM 3.3.5.1.2.1.2.16).  RECORD this information as: TMDD_N22R395_Device_Inventory_Date_and_Time_Change_Information_Supported = ${TMDD_N22R395_Device_Inventory_Date_and_Time_Change_Information_Supported}" passfailResult="False"/>
     <testStep functionId="Step 15 CONFIGURE: Determine whether Detector Station Inventory Information is required by the specification. (NRTM 3.3.5.2.1.5.2.1).  RECORD this information as: TMDD_N22R452_Detector_Station_Inventory_Information_Supported = ${TMDD_N22R452_Detector_Station_Inventory_Information_Supported}" passfailResult="False"/>
     <testStep functionId="Step 16 CONFIGURE: Determine whether TMDD v3.0x Detector Inventory - Detector Type is required by the specification. (NRTM 3.3.7.3).  RECORD this information as: TMDD_N22R1196_TMDD_v30x_Detector_Inventory___Detector_Type_Supported = ${TMDD_N22R1196_TMDD_v30x_Detector_Inventory___Detector_Type_Supported}" passfailResult="False"/>
     <C2CRI-session beginSession="true" infoStd="TMDDv3.1" appStd="${ApplicationLayerStandard}" useWSDL="true" testCaseIdentifier="${C2CRITestCaseID}" riMode="EC">
          <testStep functionId="Step 17 CONFIGURE: Determine the number of publication message transmissions that will be received within this test.  RECORD this information as: PublicationsToReceive:  ${PublicationsToReceive}" passfailResult="False"/>
          <testStep functionId="Step 18 CONFIGURE: Determine whether an error response message is expected for this test.  RECORD this information as: PublicationErrorResponseExpected:  ${PublicationErrorResponseExpected}" passfailResult="False"/>
          <jl:if test="${PublicationErrorResponseExpected}">
               <testStep functionId="Step 19 CONFIGURE: IF PublicationErrorResponseExpected is true, determine the expected error code response for this test.  RECORD this information as:  PublicationErrorTypeExpected:  ${PublicationErrorTypeExpected}" passfailResult="False"/>
          </jl:if>
          <testStep functionId="Step 20 CONFIGURE: Define the publication response message that will be sent to the SUT.  RECORD this information as: PublicationResponseMessage:  ${PublicationResponseMessage}" passfailResult="False"/>
          <testStep functionId="Step 21 CONFIGURE: Determine whether the Authentication parameters need to be verified within this test.  RECORD this information as: AuthenticationCheck:  ${AuthenticationCheck}" passfailResult="False"/>
          <testStep functionId="Step 22 CONFIGURE: Determine whether the SUT will be allowed access to the information requested in this test.  RECORD this information as: AllowAccess:  ${AllowAccess}" passfailResult="False"/>
          <testStep functionId="Step 23 CONFIGURE: Define the subscription message that will be sent to the SUT.  RECORD this information as: SubscriptionMessage:  ${SubscriptionMessage}" passfailResult="False"/>
          <testStep functionId="Step 24 CONFIGURE: Determine whether an error response message is expected for this test.  RECORD this information as: SubscriptionErrorResponseExpected:  ${SubscriptionErrorResponseExpected}" passfailResult="False"/>
          <jl:if test="${SubscriptionErrorResponseExpected}">
               <testStep functionId="Step 25 CONFIGURE: IF SubscriptionErrorResponseExpected is true, determine the expected error code response for this test.  RECORD this information as:  SubscriptionErrorTypeExpected:  ${SubscriptionErrorTypeExpected}" passfailResult="False"/>
          </jl:if>
          <testStep functionId="Step 26 SUBSCRIPTION-EC with the following parameters:   DIALOG=dlDeviceInformationSubscription RESPONSETIMEREQUIRED= SUBSCRIPTIONMESSAGE = SubscriptionMessage SUBSCRIPTIONERRORRESPONSEEXPECTED = SubscriptionErrorResponseExpected SUBSCRIPTIONERRORTYPEEXPECTED = SubscriptionErrorTypeExpected  Returns: CONTINUEPUBLICATION ">
               <SUBSCRIPTION-EC Dialog="dlDeviceInformationSubscription" functionId="dlDeviceInformationSubscription" RESPONSETIMEREQUIRED="60000" SUBSCRIPTIONMESSAGE="${SubscriptionMessage}" SUBSCRIPTIONERRORRESPONSEEXPECTED="${SubscriptionErrorResponseExpected}" SUBSCRIPTIONERRORTYPEEXPECTED="${SubscriptionErrorTypeExpected}"/>
          </testStep>
          <testStep functionId="Step 27 IF SubscriptionErrorResponseExpected is not equal to TRUE THEN CONTINUE, OTHERWISE skip the following substeps.  Note: If a verification step fails, then test execution will proceed at the next subsequent Post Condition step, if present.  Otherwise, test execution will proceed to the final Exit step." passfailResult="False"/>
          <jl:if test="${!SubscriptionErrorResponseExpected}">
               <testStep functionId="Step 27.1 WHILE CONTINUEPUBLICATION is equal to TRUE then CONTINUE, OTHERWISE skip the following substeps.  Note:If a verification step fails, then test execution will proceed at the next subsequent Post Condition step, if present.  Otherwise, test execution will proceed to the final Exit step."/>
               <jl:while test="${CONTINUEPUBLICATION}">
                    <testStep functionId="Step 27.1.1 PUBLICATION-EC-RECEIVE with the following parameters:   DIALOG=dlDetectorInventoryUpdate RESPONSETIMEREQUIRED=TMDD_N22R447_Publish_Detector_Inventory_Information_Parameter PUBLICATIONSTORECEIVE = PublicationsToReceive PUBLICATIONERRORRESPONSEEXPECTED = PublicationErrorResponseExpected PUBLICATIONERRORTYPEEXPECTED = PublicationErrorTypeExpected AUTHENTICATIONCHECK = AuthenticationCheck ALLOWACCESS = AllowAccess  Returns: CONTINUEPUBLICATION ">
                         <PUBLICATION-EC-RECEIVE Dialog="dlDetectorInventoryUpdate" functionId="dlDetectorInventoryUpdate" RESPONSETIMEREQUIRED="${TMDD_N22R447_Publish_Detector_Inventory_Information_Parameter}" PUBLICATIONSTORECEIVE="${PublicationsToReceive}" PUBLICATIONERRORRESPONSEEXPECTED="${PublicationErrorResponseExpected}" PUBLICATIONERRORTYPEEXPECTED="${PublicationErrorTypeExpected}" AUTHENTICATIONCHECK="${AuthenticationCheck}" ALLOWACCESS="${AllowAccess}"/>
                    </testStep>
                    <testStep functionId="Step 27.1.2 IF PublicationErrorResponseExpected is not equal to TRUE THEN CONTINUE, OTHERWISE skip the following substeps.  Note: If a verification step fails, then test execution will proceed at the next subsequent Post Condition step, if present.  Otherwise, test execution will proceed to the final Exit step." passfailResult="False"/>
                    <jl:if test="${!PublicationErrorResponseExpected}">
                         <testStep functionId="Step 27.1.2.1 VERIFY that a detector-inventory-header data frame exists within each instance of data frame detectorInventoryMsg.detector-inventory-item.detector-inventory-list.detector" passfailResult="True">
                              <ri-MessageVerify msgType="REQUEST" elementName="detector-inventory-header" instanceName="tmdd:detectorInventoryMsg.detector-inventory-item.detector-inventory-list.detector" elementType="data-frame" functionId="Looking for detectorInventoryMsg.detector-inventory-item.detector-inventory-list.detector"/>
                         </testStep>
                         <testStep functionId="Step 27.1.2.2 VERIFY that a detector-station-inventory-header data frame exists within each instance of data frame detectorInventoryMsg.detector-inventory-item" passfailResult="True">
                              <ri-MessageVerify msgType="REQUEST" elementName="detector-station-inventory-header" instanceName="tmdd:detectorInventoryMsg.detector-inventory-item" elementType="data-frame" functionId="Looking for detectorInventoryMsg.detector-inventory-item"/>
                         </testStep>
                         <testStep functionId="Step 27.1.2.3 VERIFY that an organization-information data frame exists within each instance of data frame detectorInventoryMsg.detector-inventory-item.detector-inventory-list.detector.detector-inventory-header" passfailResult="True">
                              <ri-MessageVerify msgType="REQUEST" elementName="organization-information" instanceName="tmdd:detectorInventoryMsg.detector-inventory-item.detector-inventory-list.detector.detector-inventory-header" elementType="data-frame" functionId="Looking for detectorInventoryMsg.detector-inventory-item.detector-inventory-list.detector.detector-inventory-header"/>
                         </testStep>
                         <testStep functionId="Step 27.1.2.4 VERIFY that a device-id data element exists within each instance of data frame detectorInventoryMsg.detector-inventory-item.detector-inventory-list.detector.detector-inventory-header" passfailResult="True">
                              <ri-MessageVerify msgType="REQUEST" elementName="device-id" instanceName="tmdd:detectorInventoryMsg.detector-inventory-item.detector-inventory-list.detector.detector-inventory-header" elementType="data-element" functionId="Looking for detectorInventoryMsg.detector-inventory-item.detector-inventory-list.detector.detector-inventory-header"/>
                         </testStep>
                         <testStep functionId="Step 27.1.2.5 VERIFY that a device-location data frame exists within each instance of data frame detectorInventoryMsg.detector-inventory-item.detector-inventory-list.detector.detector-inventory-header" passfailResult="True">
                              <ri-MessageVerify msgType="REQUEST" elementName="device-location" instanceName="tmdd:detectorInventoryMsg.detector-inventory-item.detector-inventory-list.detector.detector-inventory-header" elementType="data-frame" functionId="Looking for detectorInventoryMsg.detector-inventory-item.detector-inventory-list.detector.detector-inventory-header"/>
                         </testStep>
                         <testStep functionId="Step 27.1.2.6 VERIFY that a device-name data element exists within each instance of data frame detectorInventoryMsg.detector-inventory-item.detector-inventory-list.detector.detector-inventory-header" passfailResult="True">
                              <ri-MessageVerify msgType="REQUEST" elementName="device-name" instanceName="tmdd:detectorInventoryMsg.detector-inventory-item.detector-inventory-list.detector.detector-inventory-header" elementType="data-element" functionId="Looking for detectorInventoryMsg.detector-inventory-item.detector-inventory-list.detector.detector-inventory-header"/>
                         </testStep>
                         <testStep functionId="Step 27.1.2.7 VERIFY that a link-id data element exists within each instance of data frame detectorInventoryMsg.detector-inventory-item.detector-inventory-list.detector.detector-inventory-header" passfailResult="True">
                              <ri-MessageVerify msgType="REQUEST" elementName="link-id" instanceName="tmdd:detectorInventoryMsg.detector-inventory-item.detector-inventory-list.detector.detector-inventory-header" elementType="data-element" functionId="Looking for detectorInventoryMsg.detector-inventory-item.detector-inventory-list.detector.detector-inventory-header"/>
                         </testStep>
                         <testStep functionId="Step 27.1.2.8 VERIFY that a detectorInventoryMsg message was received." passfailResult="True">
                              <ri-MessageVerify msgType="REQUEST" elementName="detectorInventoryMsg" instanceName="tmdd:detectorInventoryMsg" elementType="message" functionId="Looking for detectorInventoryMsg"/>
                         </testStep>
                         <testStep functionId="Step 27.1.2.9 VERIFY that a detector-inventory-header data frame exists within each instance of data frame detectorInventoryMsg.detector-inventory-item.detector-inventory-list.detector" passfailResult="True">
                              <ri-MessageVerify msgType="REQUEST" elementName="detector-inventory-header" instanceName="tmdd:detectorInventoryMsg.detector-inventory-item.detector-inventory-list.detector" elementType="data-frame" functionId="Looking for detectorInventoryMsg.detector-inventory-item.detector-inventory-list.detector"/>
                         </testStep>
                         <testStep functionId="Step 27.1.2.10 VERIFY that a detector-type data element exists within each instance of data frame detectorInventoryMsg.detector-inventory-item.detector-inventory-list.detector" passfailResult="True">
                              <ri-MessageVerify msgType="REQUEST" elementName="detector-type" instanceName="tmdd:detectorInventoryMsg.detector-inventory-item.detector-inventory-list.detector" elementType="data-element" functionId="Looking for detectorInventoryMsg.detector-inventory-item.detector-inventory-list.detector"/>
                         </testStep>
                         <testStep functionId="Step 27.1.2.11 VERIFY that a detection-lanes data frame exists within each instance of data frame detectorInventoryMsg.detector-inventory-item.detector-inventory-list.detector" passfailResult="True">
                              <ri-MessageVerify msgType="REQUEST" elementName="detection-lanes" instanceName="tmdd:detectorInventoryMsg.detector-inventory-item.detector-inventory-list.detector" elementType="data-element" functionId="Looking for detectorInventoryMsg.detector-inventory-item.detector-inventory-list.detector"/>
                         </testStep>
                         <testStep functionId="Step 27.1.2.12 IF TMDD_N22R380_Restrictions___Device_Inventory_Supported is equal to TRUE THEN CONTINUE; OTHERWISE skip the following substeps." passFailResult="False"/>
                         <jl:if test="${TMDD_N22R380_Restrictions___Device_Inventory_Supported}">
                              <testStep functionId="Step 27.1.2.12.1 VERIFY that a restrictions data frame exists within each instance of data frame detectorInventoryMsg.detector-inventory-item.detector-inventory-list.detector.detector-inventory-header" passfailResult="True">
                                   <ri-MessageVerify msgType="REQUEST" elementName="restrictions" instanceName="tmdd:detectorInventoryMsg.detector-inventory-item.detector-inventory-list.detector.detector-inventory-header" elementType="data-frame" functionId="Looking for detectorInventoryMsg.detector-inventory-item.detector-inventory-list.detector.detector-inventory-header"/>
                              </testStep>
                         </jl:if>
                         <testStep functionId="Step 27.1.2.13 IF TMDD_N22R381_Device_Description_Supported is equal to TRUE THEN CONTINUE; OTHERWISE skip the following substeps." passFailResult="False"/>
                         <jl:if test="${TMDD_N22R381_Device_Description_Supported}">
                              <testStep functionId="Step 27.1.2.13.1 VERIFY that a device-description data element exists within each instance of data frame detectorInventoryMsg.detector-inventory-item.detector-inventory-list.detector.detector-inventory-header" passfailResult="True">
                                   <ri-MessageVerify msgType="REQUEST" elementName="device-description" instanceName="tmdd:detectorInventoryMsg.detector-inventory-item.detector-inventory-list.detector.detector-inventory-header" elementType="data-element" functionId="Looking for detectorInventoryMsg.detector-inventory-item.detector-inventory-list.detector.detector-inventory-header"/>
                              </testStep>
                         </jl:if>
                         <testStep functionId="Step 27.1.2.14 IF TMDD_N22R382_Device_Control_Type_Supported is equal to TRUE THEN CONTINUE; OTHERWISE skip the following substeps." passFailResult="False"/>
                         <jl:if test="${TMDD_N22R382_Device_Control_Type_Supported}">
                              <testStep functionId="Step 27.1.2.14.1 VERIFY that a device-control-type data element exists within each instance of data frame detectorInventoryMsg.detector-inventory-item.detector-inventory-list.detector.detector-inventory-header" passfailResult="True">
                                   <ri-MessageVerify msgType="REQUEST" elementName="device-control-type" instanceName="tmdd:detectorInventoryMsg.detector-inventory-item.detector-inventory-list.detector.detector-inventory-header" elementType="data-element" functionId="Looking for detectorInventoryMsg.detector-inventory-item.detector-inventory-list.detector.detector-inventory-header"/>
                              </testStep>
                         </jl:if>
                         <testStep functionId="Step 27.1.2.15 IF TMDD_N22R383_Controller_Description_Supported is equal to TRUE THEN CONTINUE; OTHERWISE skip the following substeps." passFailResult="False"/>
                         <jl:if test="${TMDD_N22R383_Controller_Description_Supported}">
                              <testStep functionId="Step 27.1.2.15.1 VERIFY that a controller-description data element exists within each instance of data frame detectorInventoryMsg.detector-inventory-item.detector-inventory-list.detector.detector-inventory-header" passfailResult="True">
                                   <ri-MessageVerify msgType="REQUEST" elementName="controller-description" instanceName="tmdd:detectorInventoryMsg.detector-inventory-item.detector-inventory-list.detector.detector-inventory-header" elementType="data-element" functionId="Looking for detectorInventoryMsg.detector-inventory-item.detector-inventory-list.detector.detector-inventory-header"/>
                              </testStep>
                         </jl:if>
                         <testStep functionId="Step 27.1.2.16 IF TMDD_N22R390_Linear_Reference___Device_Inventory_Supported is equal to TRUE THEN CONTINUE; OTHERWISE skip the following substeps." passFailResult="False"/>
                         <jl:if test="${TMDD_N22R390_Linear_Reference___Device_Inventory_Supported}">
                              <testStep functionId="Step 27.1.2.16.1 VERIFY that a linear-reference data element exists within each instance of data frame detectorInventoryMsg.detector-inventory-item.detector-inventory-list.detector.detector-inventory-header" passfailResult="True">
                                   <ri-MessageVerify msgType="REQUEST" elementName="linear-reference" instanceName="tmdd:detectorInventoryMsg.detector-inventory-item.detector-inventory-list.detector.detector-inventory-header" elementType="data-element" functionId="Looking for detectorInventoryMsg.detector-inventory-item.detector-inventory-list.detector.detector-inventory-header"/>
                              </testStep>
                         </jl:if>
                         <testStep functionId="Step 27.1.2.17 IF TMDD_N22R391_Linear_Reference_Version_Supported is equal to TRUE THEN CONTINUE; OTHERWISE skip the following substeps." passFailResult="False"/>
                         <jl:if test="${TMDD_N22R391_Linear_Reference_Version_Supported}">
                              <testStep functionId="Step 27.1.2.17.1 VERIFY that a linear-reference-version data element exists within each instance of data frame detectorInventoryMsg.detector-inventory-item.detector-inventory-list.detector.detector-inventory-header" passfailResult="True">
                                   <ri-MessageVerify msgType="REQUEST" elementName="linear-reference-version" instanceName="tmdd:detectorInventoryMsg.detector-inventory-item.detector-inventory-list.detector.detector-inventory-header" elementType="data-element" functionId="Looking for detectorInventoryMsg.detector-inventory-item.detector-inventory-list.detector.detector-inventory-header"/>
                              </testStep>
                         </jl:if>
                         <testStep functionId="Step 27.1.2.18 IF TMDD_N22R392_Route_Designator___Device_Inventory_Supported is equal to TRUE THEN CONTINUE; OTHERWISE skip the following substeps." passFailResult="False"/>
                         <jl:if test="${TMDD_N22R392_Route_Designator___Device_Inventory_Supported}">
                              <testStep functionId="Step 27.1.2.18.1 VERIFY that a route-designator data element exists within each instance of data frame detectorInventoryMsg.detector-inventory-item.detector-inventory-list.detector.detector-inventory-header" passfailResult="True">
                                   <ri-MessageVerify msgType="REQUEST" elementName="route-designator" instanceName="tmdd:detectorInventoryMsg.detector-inventory-item.detector-inventory-list.detector.detector-inventory-header" elementType="data-element" functionId="Looking for detectorInventoryMsg.detector-inventory-item.detector-inventory-list.detector.detector-inventory-header"/>
                              </testStep>
                         </jl:if>
                         <testStep functionId="Step 27.1.2.19 IF TMDD_N22R393_Device_Uniform_Resource_Locator__URL___DeviceURL__Supported is equal to TRUE THEN CONTINUE; OTHERWISE skip the following substeps." passFailResult="False"/>
                         <jl:if test="${TMDD_N22R393_Device_Uniform_Resource_Locator__URL___DeviceURL__Supported}">
                              <testStep functionId="Step 27.1.2.19.1 VERIFY that a device-url data frame exists within each instance of data frame detectorInventoryMsg.detector-inventory-item.detector-inventory-list.detector.detector-inventory-header" passfailResult="True">
                                   <ri-MessageVerify msgType="REQUEST" elementName="device-url" instanceName="tmdd:detectorInventoryMsg.detector-inventory-item.detector-inventory-list.detector.detector-inventory-header" elementType="data-frame" functionId="Looking for detectorInventoryMsg.detector-inventory-item.detector-inventory-list.detector.detector-inventory-header"/>
                              </testStep>
                         </jl:if>
                         <testStep functionId="Step 27.1.2.20 IF TMDD_N22R394_Device_URL_Reference_Medium_Supported is equal to TRUE THEN CONTINUE; OTHERWISE skip the following substeps." passFailResult="False"/>
                         <jl:if test="${TMDD_N22R394_Device_URL_Reference_Medium_Supported}">
                              <testStep functionId="Step 27.1.2.20.1 VERIFY that an url-reference-medium data element exists within each instance of data frame detectorInventoryMsg.detector-inventory-item.detector-inventory-list.detector.detector-inventory-header.device-url" passfailResult="True">
                                   <ri-MessageVerify msgType="REQUEST" elementName="url-reference-medium" instanceName="tmdd:detectorInventoryMsg.detector-inventory-item.detector-inventory-list.detector.detector-inventory-header.device-url" elementType="data-element" functionId="Looking for detectorInventoryMsg.detector-inventory-item.detector-inventory-list.detector.detector-inventory-header.device-url"/>
                              </testStep>
                         </jl:if>
                         <testStep functionId="Step 27.1.2.21 IF TMDD_N22R395_Device_Inventory_Date_and_Time_Change_Information_Supported is equal to TRUE THEN CONTINUE; OTHERWISE skip the following substeps." passFailResult="False"/>
                         <jl:if test="${TMDD_N22R395_Device_Inventory_Date_and_Time_Change_Information_Supported}">
                              <testStep functionId="Step 27.1.2.21.1 VERIFY that a last-update-time data frame exists within each instance of data frame detectorInventoryMsg.detector-inventory-item.detector-inventory-list.detector.detector-inventory-header" passfailResult="True">
                                   <ri-MessageVerify msgType="REQUEST" elementName="last-update-time" instanceName="tmdd:detectorInventoryMsg.detector-inventory-item.detector-inventory-list.detector.detector-inventory-header" elementType="data-frame" functionId="Looking for detectorInventoryMsg.detector-inventory-item.detector-inventory-list.detector.detector-inventory-header"/>
                              </testStep>
                         </jl:if>
                         <testStep functionId="Step 27.1.2.22 IF TMDD_N22R452_Detector_Station_Inventory_Information_Supported is equal to TRUE THEN CONTINUE; OTHERWISE skip the following substeps." passFailResult="False"/>
                         <jl:if test="${TMDD_N22R452_Detector_Station_Inventory_Information_Supported}">
                              <testStep functionId="Step 27.1.2.22.1 VERIFY that a detector-station-inventory-header data frame exists within each instance of data frame detectorInventoryMsg.detector-inventory-item" passfailResult="True">
                                   <ri-MessageVerify msgType="REQUEST" elementName="detector-station-inventory-header" instanceName="tmdd:detectorInventoryMsg.detector-inventory-item" elementType="data-frame" functionId="Looking for detectorInventoryMsg.detector-inventory-item"/>
                              </testStep>
                         </jl:if>
                         <testStep functionId="Step 27.1.2.23 IF TMDD_N22R1196_TMDD_v30x_Detector_Inventory___Detector_Type_Supported is equal to TRUE THEN CONTINUE; OTHERWISE skip the following substeps." passFailResult="False"/>
                         <jl:if test="${TMDD_N22R1196_TMDD_v30x_Detector_Inventory___Detector_Type_Supported}">
                              <testStep functionId="Step 27.1.2.23.1 VERIFY that a detector-type-extended data element exists within each instance of data frame detectorInventoryMsg.detector-inventory-item.detector-inventory-list.detector.tmddX:detectorInventoryDetailsExt" passfailResult="True">
                                   <ri-MessageVerify msgType="REQUEST" elementName="detector-type-extended" instanceName="tmdd:detectorInventoryMsg.detector-inventory-item.detector-inventory-list.detector.tmddX:detectorInventoryDetailsExt" elementType="data-element" functionId="Looking for detectorInventoryMsg.detector-inventory-item.detector-inventory-list.detector"/>
                              </testStep>
                         </jl:if>
                         <testStep functionId="Step 27.1.2.24 VERIFY that the values within the REQUEST message are correct per the TMDD standard and known operational conditions.">
                              <AUTO-VERIFY-MESSAGE functionId="Automatically Verify message content" msgName="REQUEST" verificationSpec="${VerificationSpec}"/>
                              <USER-VERIFY-MESSAGE functionId="The User Verifies the message content" msgName="REQUEST" optionList="TMDD_N22R380_Restrictions___Device_Inventory_Supported,restrictions,tmdd:detectorInventoryMsg.detector-inventory-item.detector-inventory-list.detector.detector-inventory-header;TMDD_N22R381_Device_Description_Supported,device-description,tmdd:detectorInventoryMsg.detector-inventory-item.detector-inventory-list.detector.detector-inventory-header;TMDD_N22R382_Device_Control_Type_Supported,device-control-type,tmdd:detectorInventoryMsg.detector-inventory-item.detector-inventory-list.detector.detector-inventory-header;TMDD_N22R383_Controller_Description_Supported,controller-description,tmdd:detectorInventoryMsg.detector-inventory-item.detector-inventory-list.detector.detector-inventory-header;TMDD_N22R390_Linear_Reference___Device_Inventory_Supported,linear-reference,tmdd:detectorInventoryMsg.detector-inventory-item.detector-inventory-list.detector.detector-inventory-header;TMDD_N22R391_Linear_Reference_Version_Supported,linear-reference-version,tmdd:detectorInventoryMsg.detector-inventory-item.detector-inventory-list.detector.detector-inventory-header;TMDD_N22R392_Route_Designator___Device_Inventory_Supported,route-designator,tmdd:detectorInventoryMsg.detector-inventory-item.detector-inventory-list.detector.detector-inventory-header;TMDD_N22R393_Device_Uniform_Resource_Locator__URL___DeviceURL__Supported,device-url,tmdd:detectorInventoryMsg.detector-inventory-item.detector-inventory-list.detector.detector-inventory-header;TMDD_N22R394_Device_URL_Reference_Medium_Supported,url-reference-medium,tmdd:detectorInventoryMsg.detector-inventory-item.detector-inventory-list.detector.detector-inventory-header.device-url;TMDD_N22R395_Device_Inventory_Date_and_Time_Change_Information_Supported,last-update-time,tmdd:detectorInventoryMsg.detector-inventory-item.detector-inventory-list.detector.detector-inventory-header;TMDD_N22R452_Detector_Station_Inventory_Information_Supported,detector-station-inventory-header,tmdd:detectorInventoryMsg.detector-inventory-item;TMDD_N22R1196_TMDD_v30x_Detector_Inventory___Detector_Type_Supported,detector-type-extended,tmdd:detectorInventoryMsg.detector-inventory-item.detector-inventory-list.detector.tmddX:detectorInventoryDetailsExt;TMDD_N22R15_Restrictions___Error_Report_Supported,restrictions,tmdd:errorReportMsg;" userDataFile="${RI_USERTCDATAFILE}"/>
                         </testStep>
                         <testStep functionId=" Step 27.1.2.25 CONFIGURE: Set CONTENTVERIFIED to True" passfailResult="False">
                              <jl:set var="CONTENTVERIFIED" value="true"/>
                         </testStep>
                         <postcondition>
                              <testStep functionId="Step 27.1.2.26 POSTCONDITION: PUBLICATION-EC-REPLY with the following parameters:   DIALOG=dlDetectorInventoryUpdate RESPONSETIMEREQUIRED=TMDD_N22R447_Publish_Detector_Inventory_Information_Parameter CONTENTVERIFIED = CONTENTVERIFIED PUBLICATIONRESPONSEMESSAGE = PublicationResponseMessage ">
                                   <PUBLICATION-EC-REPLY Dialog="dlDetectorInventoryUpdate" functionId="dlDetectorInventoryUpdate" RESPONSETIMEREQUIRED="${TMDD_N22R447_Publish_Detector_Inventory_Information_Parameter}" CONTENTVERIFIED="${CONTENTVERIFIED}" PUBLICATIONRESPONSEMESSAGE="${PublicationResponseMessage}"/>
                              </testStep>
                         </postcondition>
                    </jl:if>
               </jl:while>
          </jl:if>
          <testStep functionId="Step 28 IF SubscriptionErrorResponseExpected is equal to TRUE THEN CONTINUE, OTHERWISE skip the following substeps.  If a verification step fails, then test execution will proceed at the next subsequent Post Condition step, if present.  Otherwise, test execution will proceed to the final Exit step." passfailResult="False"/>
          <jl:if test="${SubscriptionErrorResponseExpected}">
               <testStep functionId="Step 28.1 VERIFY that an errorReportMsg message was received." passfailResult="True">
                    <ri-MessageVerify msgType="RESPONSE" elementName="errorReportMsg" instanceName="tmdd:errorReportMsg" elementType="message" functionId="Looking for errorReportMsg"/>
               </testStep>
               <testStep functionId="Step 28.2 VERIFY that an organization-information data frame exists within message errorReportMsg." passfailResult="True">
                    <ri-MessageVerify msgType="RESPONSE" elementName="organization-information" instanceName="tmdd:errorReportMsg" elementType="data-frame" functionId="Looking for errorReportMsg"/>
               </testStep>
               <testStep functionId="Step 28.3 VERIFY that an organization-requesting data frame exists within message errorReportMsg." passfailResult="True">
                    <ri-MessageVerify msgType="RESPONSE" elementName="organization-requesting" instanceName="tmdd:errorReportMsg" elementType="data-frame" functionId="Looking for errorReportMsg"/>
               </testStep>
               <testStep functionId="Step 28.4 VERIFY that an error-code data element exists within message errorReportMsg." passfailResult="True">
                    <ri-MessageVerify msgType="RESPONSE" elementName="error-code" instanceName="tmdd:errorReportMsg" elementType="data-element" functionId="Looking for errorReportMsg"/>
               </testStep>
               <testStep functionId="Step 28.5 VERIFY that an error-text data element exists within message errorReportMsg." passfailResult="True">
                    <ri-MessageVerify msgType="RESPONSE" elementName="error-text" instanceName="tmdd:errorReportMsg" elementType="data-element" functionId="Looking for errorReportMsg"/>
               </testStep>
               <testStep functionId="Step 28.6 VERIFY that data element error-code is set to SubscriptionErrorResponseTypeExpected." passfailResult="True">
                    <ri-MessageVerify msgType="RESPONSE" elementName="error-code" instanceName="tmdd:errorReportMsg" instanceValue="${SubscriptionErrorResponseTypeExpected}" elementType="data-element" functionId="Looking for errorReportMsg"/>
               </testStep>
               <testStep functionId="Step 28.7 IF TMDD_N22R15_Restrictions___Error_Report_Supported is equal to TRUE THEN CONTINUE; OTHERWISE skip the following substeps." passFailResult="False"/>
               <jl:if test="${TMDD_N22R15_Restrictions___Error_Report_Supported}">
                    <testStep functionId="Step 28.7.1 VERIFY that a restrictions data frame exists within message errorReportMsg." passfailResult="True">
                         <ri-MessageVerify msgType="RESPONSE" elementName="restrictions" instanceName="tmdd:errorReportMsg" elementType="data-frame" functionId="Looking for errorReportMsg"/>
                    </testStep>
               </jl:if>
          </jl:if>
          <postcondition>
               <testStep functionId=" Step 29 EXIT" passfailResult="False"/>
          </postcondition>
     </C2CRI-session>
</testprocedure>
