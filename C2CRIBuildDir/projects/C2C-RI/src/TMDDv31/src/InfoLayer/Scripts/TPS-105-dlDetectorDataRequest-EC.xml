<?xml version="1.0" encoding="UTF-8"?>
<!--Title:  TPS-105-dlDetectorDataRequest-EC
       Description:  This test procedure is called by a test case and is used to verify the SUTs support of the dlDetectorDataRequest dialog as an EC using variables provided by the calling test case.  
This procedure supports verification of requirements related to user need 2.3.6.1.1 [Need for Direct Measurements of Traffic Flow and Conditions] and is used for both valid and invalid test cases.
       Version/Date: 2014/01/18 00:59:36-->
<testprocedure xmlns="jelly:jameleon" xmlns:jl="jelly:core">
     <test-case-id>${C2CRITestCaseID}</test-case-id>
     <test-case-summary>This test procedure is called by a test case and is used to verify the SUTs support of the dlDetectorDataRequest dialog as an EC using variables provided by the calling test case.  
This procedure supports verification of requirements related to user need 2.3.6.1.1 [Need for Direct Measurements of Traffic Flow and Conditions] and is used for both valid and invalid test cases.</test-case-summary>
     <testStep functionId="Step 1 CONFIGURE: Determine the Application Layer Standard that will be used for this test.  RECORD this information as: ApplicationLayerStandard:  ${ApplicationLayerStandard}" passfailResult="False "/>
     <testStep functionId="Step 2 CONFIGURE: Determine the dialog performance requirement for Send Detector Data Upon Request (NTRM 3.3.5.2.3.1}.  RECORD this value as: TMDD_N105R471_Send_Detector_Data_Upon_Request_Parameter = ${TMDD_N105R471_Send_Detector_Data_Upon_Request_Parameter}" passfailResult="False"/>
     <testStep functionId="Step 3 CONFIGURE: Determine whether Authentication - Device Information (DeviceAuth) is required by the specification. (NRTM 3.3.5.1.1.1.2.1).  RECORD this information as: TMDD_N105R366_Authentication___Device_Information__DeviceAuth__Supported = ${TMDD_N105R366_Authentication___Device_Information__DeviceAuth__Supported}" passfailResult="False"/>
     <testStep functionId="Step 4 CONFIGURE: Determine whether Operator Identifier - Device Information is required by the specification. (NRTM 3.3.5.1.1.1.2.1.1).  RECORD this information as: TMDD_N105R367_Operator_Identifier___Device_Information_Supported = ${TMDD_N105R367_Operator_Identifier___Device_Information_Supported}" passfailResult="False"/>
     <testStep functionId="Step 5 CONFIGURE: Determine whether External Center Organization - Device Information is required by the specification. (NRTM 3.3.5.1.1.1.2.2).  RECORD this information as: TMDD_N105R368_External_Center_Organization___Device_Information_Supported = ${TMDD_N105R368_External_Center_Organization___Device_Information_Supported}" passfailResult="False"/>
     <testStep functionId="Step 6 CONFIGURE: Determine whether Device Identifier Filter is required by the specification. (NRTM 3.3.5.1.1.1.3.1).  RECORD this information as: TMDD_N105R369_Device_Identifier_Filter_Supported = ${TMDD_N105R369_Device_Identifier_Filter_Supported}" passfailResult="False"/>
     <testStep functionId="Step 7 CONFIGURE: Determine whether Roadway Network Identifier Filter is required by the specification. (NRTM 3.3.5.1.1.1.3.2).  RECORD this information as: TMDD_N105R370_Roadway_Network_Identifier_Filter_Supported = ${TMDD_N105R370_Roadway_Network_Identifier_Filter_Supported}" passfailResult="False"/>
     <testStep functionId="Step 8 CONFIGURE: Determine whether Link Identifier Filter is required by the specification. (NRTM 3.3.5.1.1.1.3.3).  RECORD this information as: TMDD_N105R371_Link_Identifier_Filter_Supported = ${TMDD_N105R371_Link_Identifier_Filter_Supported}" passfailResult="False"/>
     <testStep functionId="Step 9 CONFIGURE: Determine whether Route Designator Filter is required by the specification. (NRTM 3.3.5.1.1.1.3.4).  RECORD this information as: TMDD_N105R372_Route_Designator_Filter_Supported = ${TMDD_N105R372_Route_Designator_Filter_Supported}" passfailResult="False"/>
     <testStep functionId="Step 10 CONFIGURE: Determine whether Linear Reference Filter is required by the specification. (NRTM 3.3.5.1.1.1.3.5).  RECORD this information as: TMDD_N105R373_Linear_Reference_Filter_Supported = ${TMDD_N105R373_Linear_Reference_Filter_Supported}" passfailResult="False"/>
     <testStep functionId="Step 11 CONFIGURE: Determine whether Detector Station - Data Request is required by the specification. (NRTM 3.3.5.2.3.4.2.1).  RECORD this information as: TMDD_N105R476_Detector_Station___Data_Request_Supported = ${TMDD_N105R476_Detector_Station___Data_Request_Supported}" passfailResult="False"/>
     <testStep functionId="Step 12 CONFIGURE: Determine whether Data Type Request is required by the specification. (NRTM 3.3.5.2.3.4.2.2).  RECORD this information as: TMDD_N105R477_Data_Type_Request_Supported = ${TMDD_N105R477_Data_Type_Request_Supported}" passfailResult="False"/>
     <C2CRI-session beginSession="true" infoStd="TMDDv3.1" appStd="${ApplicationLayerStandard}" useWSDL="true" testCaseIdentifier="${C2CRITestCaseID}" riMode="OC">
          <testStep functionId="Step 13 CONFIGURE: Define the response message that will be sent to the SUT.  RECORD this information as: ResponseMessage:  ${ResponseMessage}" passfailResult="False"/>
          <testStep functionId="Step 14 CONFIGURE: Determine whether the Authentication parameters need to be verified within this test.  RECORD this information as: AuthenticationCheck:  ${AuthenticationCheck}" passfailResult="False"/>
          <testStep functionId="Step 15 CONFIGURE: Identify the Username expected for authentication during this test.  RECORD this information as: Username:  ${Username}" passfailResult="False"/>
          <testStep functionId="Step 16 CONFIGURE: Identify the Password expected for authentication during this test.  RECORD this information as: Password:  ${Password}" passfailResult="False"/>
          <testStep functionId="Step 17 CONFIGURE: Identify the Operator Identifier expected for authentication during this test.  RECORD this information as: OperatorID:  ${OperatorID}" passfailResult="False"/>
          <testStep functionId="Step 18 CONFIGURE: Determine whether the SUT will be allowed access to the information requested in this test.  RECORD this information as: AllowAccess:  ${AllowAccess}" passfailResult="False"/>
          <testStep functionId="Step 19 CONFIGURE: Determine whether an error response message is expected for this test.  RECORD this information as: ErrorResponseExpected:  ${ErrorResponseExpected}" passfailResult="False"/>
          <jl:if test="${ErrorResponseExpected}">
               <testStep functionId="Step 20 CONFIGURE: IF ErrorResponseExpected is true, determine the expected error code response for this test.  RECORD this information as:  ErrorTypeExpected:  ${ErrorTypeExpected}" passfailResult="False"/>
          </jl:if>
          <testStep functionId="Step 21 CONFIGURE: Determine whether the SUT is expected to have valid data available for a response message in this test.  RECORD this information as: DataValid:  ${DataValid}" passfailResult="False"/>
          <testStep functionId="Step 22 REQUEST-RESPONSE-OC-RECEIVE with the following parameters:   DIALOG=dlDetectorDataRequest RESPONSETIMEREQUIRED=TMDD_N105R471_Send_Detector_Data_Upon_Request_Parameter AUTHENTICATIONCHECK = AuthenticationCheck USERNAME = Username PASSWORD = Password OPERATORID = OperatorID ALLOWACCESS = AllowAccess ERRORRESPONSEEXPECTED = ErrorResponseExpected ERRORTYPEEXPECTED = ErrorTypeExpected DATAVALID = DataValid ">
               <REQUEST-RESPONSE-OC-RECEIVE Dialog="dlDetectorDataRequest" functionId="dlDetectorDataRequest" RESPONSETIMEREQUIRED="${TMDD_N105R471_Send_Detector_Data_Upon_Request_Parameter}" AUTHENTICATIONCHECK="${AuthenticationCheck}" USERNAME="${Username}" PASSWORD="${Password}" OPERATORID="${OperatorID}" ALLOWACCESS="${AllowAccess}" ERRORRESPONSEEXPECTED="${ErrorResponseExpected}" ERRORTYPEEXPECTED="${ErrorTypeExpected}" DATAVALID="${DataValid}"/>
          </testStep>
          <testStep functionId="Step 23 IF ErrorResponseExpected is not equal to TRUE THEN CONTINUE, OTHERWISE skip the following substeps.  Note: If a verification step fails, then test execution will proceed at the next subsequent Post Condition step, if present.  Otherwise, test execution will proceed to the final Exit step." passfailResult="False"/>
          <jl:if test="${!ErrorResponseExpected}">
               <testStep functionId="Step 23.1 VERIFY that an organization-information data frame exists within each instance of data frame detectorDataRequestMsg.device-information-request-header" passfailResult="True">
                    <ri-MessageVerify msgType="REQUEST" elementName="organization-information" instanceName="tmdd:detectorDataRequestMsg.device-information-request-header" elementType="data-frame" functionId="Looking for detectorDataRequestMsg.device-information-request-header"/>
               </testStep>
               <testStep functionId="Step 23.2 VERIFY that a device-type data element exists within each instance of data frame detectorDataRequestMsg.device-information-request-header" passfailResult="True">
                    <ri-MessageVerify msgType="REQUEST" elementName="device-type" instanceName="tmdd:detectorDataRequestMsg.device-information-request-header" elementType="data-element" functionId="Looking for detectorDataRequestMsg.device-information-request-header"/>
               </testStep>
               <testStep functionId="Step 23.3 VERIFY that a device-information-type data element exists within each instance of data frame detectorDataRequestMsg.device-information-request-header" passfailResult="True">
                    <ri-MessageVerify msgType="REQUEST" elementName="device-information-type" instanceName="tmdd:detectorDataRequestMsg.device-information-request-header" elementType="data-element" functionId="Looking for detectorDataRequestMsg.device-information-request-header"/>
               </testStep>
               <testStep functionId="Step 23.4 VERIFY that a detectorDataRequestMsg message was received." passfailResult="True">
                    <ri-MessageVerify msgType="REQUEST" elementName="detectorDataRequestMsg" instanceName="tmdd:detectorDataRequestMsg" elementType="message" functionId="Looking for detectorDataRequestMsg"/>
               </testStep>
               <testStep functionId="Step 23.5 VERIFY that a device-information-request-header data frame exists within message detectorDataRequestMsg." passfailResult="True">
                    <ri-MessageVerify msgType="REQUEST" elementName="device-information-request-header" instanceName="tmdd:detectorDataRequestMsg" elementType="data-frame" functionId="Looking for detectorDataRequestMsg"/>
               </testStep>
               <testStep functionId="Step 23.6 VERIFY that data element device-information-type is set to device data." passfailResult="True">
                    <ri-MessageVerify msgType="REQUEST" elementName="device-information-type" instanceName="tmdd:detectorDataRequestMsg.device-information-request-header" instanceValue="device data" elementType="data-element" functionId="Looking for detectorDataRequestMsg.device-information-request-header"/>
               </testStep>
               <testStep functionId="Step 23.7 VERIFY that data element device-type is set to detector." passfailResult="True">
                    <ri-MessageVerify msgType="REQUEST" elementName="device-type" instanceName="tmdd:detectorDataRequestMsg.device-information-request-header" instanceValue="detector" elementType="data-element" functionId="Looking for detectorDataRequestMsg.device-information-request-header"/>
               </testStep>
               <testStep functionId="Step 23.8 IF TMDD_N105R366_Authentication___Device_Information__DeviceAuth__Supported is equal to TRUE THEN CONTINUE; OTHERWISE skip the following substeps." passFailResult="False"/>
               <jl:if test="${TMDD_N105R366_Authentication___Device_Information__DeviceAuth__Supported}"></jl:if>
               <testStep functionId="Step 23.9 IF TMDD_N105R367_Operator_Identifier___Device_Information_Supported is equal to TRUE THEN CONTINUE; OTHERWISE skip the following substeps." passFailResult="False"/>
               <jl:if test="${TMDD_N105R367_Operator_Identifier___Device_Information_Supported}">
                    <testStep functionId="Step 23.9.1 VERIFY that an operator-id data element exists within each instance of data frame detectorDataRequestMsg.device-information-request-header.authentication" passfailResult="True">
                         <ri-MessageVerify msgType="REQUEST" elementName="operator-id" instanceName="tmdd:detectorDataRequestMsg.device-information-request-header.authentication" elementType="data-element" functionId="Looking for detectorDataRequestMsg.device-information-request-header.authentication"/>
                    </testStep>
               </jl:if>
               <testStep functionId="Step 23.10 IF TMDD_N105R368_External_Center_Organization___Device_Information_Supported is equal to TRUE THEN CONTINUE; OTHERWISE skip the following substeps." passFailResult="False"/>
               <jl:if test="${TMDD_N105R368_External_Center_Organization___Device_Information_Supported}">
                    <testStep functionId="Step 23.10.1 VERIFY that an organization-requesting data frame exists within each instance of data frame detectorDataRequestMsg.device-information-request-header" passfailResult="True">
                         <ri-MessageVerify msgType="REQUEST" elementName="organization-requesting" instanceName="tmdd:detectorDataRequestMsg.device-information-request-header" elementType="data-frame" functionId="Looking for detectorDataRequestMsg.device-information-request-header"/>
                    </testStep>
               </jl:if>
               <testStep functionId="Step 23.11 IF TMDD_N105R369_Device_Identifier_Filter_Supported is equal to TRUE THEN CONTINUE; OTHERWISE skip the following substeps." passFailResult="False"/>
               <jl:if test="${TMDD_N105R369_Device_Identifier_Filter_Supported}">
                    <testStep functionId="Step 23.11.1 VERIFY that a device-id-list data frame exists within each instance of data frame detectorDataRequestMsg.device-information-request-header.device-filter" passfailResult="True">
                         <ri-MessageVerify msgType="REQUEST" elementName="device-id-list" instanceName="tmdd:detectorDataRequestMsg.device-information-request-header.device-filter" elementType="data-element" functionId="Looking for detectorDataRequestMsg.device-information-request-header.device-filter"/>
                    </testStep>
               </jl:if>
               <testStep functionId="Step 23.12 IF TMDD_N105R370_Roadway_Network_Identifier_Filter_Supported is equal to TRUE THEN CONTINUE; OTHERWISE skip the following substeps." passFailResult="False"/>
               <jl:if test="${TMDD_N105R370_Roadway_Network_Identifier_Filter_Supported}">
                    <testStep functionId="Step 23.12.1 VERIFY that a network-id-list data frame exists within each instance of data frame detectorDataRequestMsg.device-information-request-header.device-filter" passfailResult="True">
                         <ri-MessageVerify msgType="REQUEST" elementName="network-id-list" instanceName="tmdd:detectorDataRequestMsg.device-information-request-header.device-filter" elementType="data-element" functionId="Looking for detectorDataRequestMsg.device-information-request-header.device-filter"/>
                    </testStep>
               </jl:if>
               <testStep functionId="Step 23.13 IF TMDD_N105R371_Link_Identifier_Filter_Supported is equal to TRUE THEN CONTINUE; OTHERWISE skip the following substeps." passFailResult="False"/>
               <jl:if test="${TMDD_N105R371_Link_Identifier_Filter_Supported}">
                    <testStep functionId="Step 23.13.1 VERIFY that a link-id-list data frame exists within each instance of data frame detectorDataRequestMsg.device-information-request-header.device-filter" passfailResult="True">
                         <ri-MessageVerify msgType="REQUEST" elementName="link-id-list" instanceName="tmdd:detectorDataRequestMsg.device-information-request-header.device-filter" elementType="data-element" functionId="Looking for detectorDataRequestMsg.device-information-request-header.device-filter"/>
                    </testStep>
               </jl:if>
               <testStep functionId="Step 23.14 IF TMDD_N105R372_Route_Designator_Filter_Supported is equal to TRUE THEN CONTINUE; OTHERWISE skip the following substeps." passFailResult="False"/>
               <jl:if test="${TMDD_N105R372_Route_Designator_Filter_Supported}">
                    <testStep functionId="Step 23.14.1 VERIFY that a link-designator-list data frame exists within each instance of data frame detectorDataRequestMsg.device-information-request-header.device-filter" passfailResult="True">
                         <ri-MessageVerify msgType="REQUEST" elementName="link-designator-list" instanceName="tmdd:detectorDataRequestMsg.device-information-request-header.device-filter" elementType="data-element" functionId="Looking for detectorDataRequestMsg.device-information-request-header.device-filter"/>
                    </testStep>
               </jl:if>
               <testStep functionId="Step 23.15 IF TMDD_N105R373_Linear_Reference_Filter_Supported is equal to TRUE THEN CONTINUE; OTHERWISE skip the following substeps." passFailResult="False"/>
               <jl:if test="${TMDD_N105R373_Linear_Reference_Filter_Supported}">
                    <testStep functionId="Step 23.15.1 VERIFY that a linear-reference data frame exists within each instance of data frame detectorDataRequestMsg.device-information-request-header.device-filter" passfailResult="True">
                         <ri-MessageVerify msgType="REQUEST" elementName="linear-reference" instanceName="tmdd:detectorDataRequestMsg.device-information-request-header.device-filter" elementType="data-frame" functionId="Looking for detectorDataRequestMsg.device-information-request-header.device-filter"/>
                    </testStep>
               </jl:if>
               <testStep functionId="Step 23.16 IF TMDD_N105R476_Detector_Station___Data_Request_Supported is equal to TRUE THEN CONTINUE; OTHERWISE skip the following substeps." passFailResult="False"/>
               <jl:if test="${TMDD_N105R476_Detector_Station___Data_Request_Supported}">
                    <testStep functionId="Step 23.16.1 VERIFY that a detector-station-id data element exists within message detectorDataRequestMsg." passfailResult="True">
                         <ri-MessageVerify msgType="REQUEST" elementName="detector-station-id" instanceName="tmdd:detectorDataRequestMsg" elementType="data-element" functionId="Looking for detectorDataRequestMsg"/>
                    </testStep>
               </jl:if>
               <testStep functionId="Step 23.17 IF TMDD_N105R477_Data_Type_Request_Supported is equal to TRUE THEN CONTINUE; OTHERWISE skip the following substeps." passFailResult="False"/>
               <jl:if test="${TMDD_N105R477_Data_Type_Request_Supported}">
                    <testStep functionId="Step 23.17.1 VERIFY that a detector-data-type data element exists within message detectorDataRequestMsg." passfailResult="True">
                         <ri-MessageVerify msgType="REQUEST" elementName="detector-data-type" instanceName="tmdd:detectorDataRequestMsg" elementType="data-element" functionId="Looking for detectorDataRequestMsg"/>
                    </testStep>
               </jl:if>
               <testStep functionId="Step 23.18 VERIFY that the values within the REQUEST message are correct per the TMDD standard and known operational conditions.">
                    <AUTO-VERIFY-MESSAGE functionId="Automatically Verify message content" msgName="REQUEST" verificationSpec="${VerificationSpec}"/>
                    <USER-VERIFY-MESSAGE functionId="The User Verifies the message content" msgName="REQUEST" optionList="TMDD_N105R367_Operator_Identifier___Device_Information_Supported,operator-id,tmdd:detectorDataRequestMsg.device-information-request-header.authentication;TMDD_N105R368_External_Center_Organization___Device_Information_Supported,organization-requesting,tmdd:detectorDataRequestMsg.device-information-request-header;TMDD_N105R369_Device_Identifier_Filter_Supported,device-id-list,tmdd:detectorDataRequestMsg.device-information-request-header.device-filter;TMDD_N105R370_Roadway_Network_Identifier_Filter_Supported,network-id-list,tmdd:detectorDataRequestMsg.device-information-request-header.device-filter;TMDD_N105R371_Link_Identifier_Filter_Supported,link-id-list,tmdd:detectorDataRequestMsg.device-information-request-header.device-filter;TMDD_N105R372_Route_Designator_Filter_Supported,link-designator-list,tmdd:detectorDataRequestMsg.device-information-request-header.device-filter;TMDD_N105R373_Linear_Reference_Filter_Supported,linear-reference,tmdd:detectorDataRequestMsg.device-information-request-header.device-filter;TMDD_N105R476_Detector_Station___Data_Request_Supported,detector-station-id,tmdd:detectorDataRequestMsg;TMDD_N105R477_Data_Type_Request_Supported,detector-data-type,tmdd:detectorDataRequestMsg;" userDataFile="${RI_USERTCDATAFILE}"/>
               </testStep>
               <testStep functionId=" Step 23.19 CONFIGURE: Set CONTENTVERIFIED to True" passfailResult="False">
                    <jl:set var="CONTENTVERIFIED" value="true"/>
               </testStep>
               <postcondition>
                    <testStep functionId="Step 23.20 POSTCONDITION: REQUEST-RESPONSE-OC-REPLY with the following parameters:   DIALOG=dlDetectorDataRequest RESPONSETIMEREQUIRED=TMDD_N105R471_Send_Detector_Data_Upon_Request_Parameter CONTENTVERIFIED = CONTENTVERIFIED RESPONSEMESSAGE = ResponseMessage ">
                         <REQUEST-RESPONSE-OC-REPLY Dialog="dlDetectorDataRequest" functionId="dlDetectorDataRequest" RESPONSETIMEREQUIRED="${TMDD_N105R471_Send_Detector_Data_Upon_Request_Parameter}" CONTENTVERIFIED="${CONTENTVERIFIED}" RESPONSEMESSAGE="${ResponseMessage}"/>
                    </testStep>
               </postcondition>
          </jl:if>
          <postcondition>
               <testStep functionId=" Step 24 EXIT" passfailResult="False"/>
          </postcondition>
     </C2CRI-session>
</testprocedure>