<?xml version="1.0" encoding="UTF-8"?>
<!--Title:  TPS-88-dlIntersectionSignalStatusRequest-OC
       Description:  This test procedure is called by a test case and is used to verify the SUTs support of the dlIntersectionSignalStatusRequest dialog as an OC using variables provided by the calling test case.  
This procedure supports verification of requirements related to user need 2.3.5.10.3 [Need to Share Intersection Status] and is used for both valid and invalid test cases.
       Version/Date: 2014/01/18 00:45:57-->
<testprocedure xmlns="jelly:jameleon" xmlns:jl="jelly:core">
     <test-case-id>${C2CRITestCaseID}</test-case-id>
     <test-case-summary>This test procedure is called by a test case and is used to verify the SUTs support of the dlIntersectionSignalStatusRequest dialog as an OC using variables provided by the calling test case.  
This procedure supports verification of requirements related to user need 2.3.7.1 [Backward Compatible with TMDD v3.03x] and is used for both valid and invalid test cases.</test-case-summary>
     <testStep functionId="Step 1 CONFIGURE: Determine the Application Layer Standard that will be used for this test.  RECORD this information as: ApplicationLayerStandard:  ${ApplicationLayerStandard}" passfailResult="False "/>
     <testStep functionId="Step 2 CONFIGURE: Determine whether TMDD v3.0x Intersection Status - Signal Control Source is required by the specification. (NRTM 3.3.7.1).  RECORD this information as: TMDD_N112R1194_TMDD_v30x_Intersection_Status___Signal_Control_Source_Supported = ${TMDD_N112R1194_TMDD_v30x_Intersection_Status___Signal_Control_Source_Supported}" passfailResult="False"/>
     <testStep functionId="Step 3 CONFIGURE: Determine whether TMDD v3.0x Intersection Status - Current Signal Timing Mode is required by the specification. (NRTM 3.3.7.2).  RECORD this information as: TMDD_N112R1195_TMDD_v30x_Intersection_Status___Current_Signal_Timing_Mode_Supported = ${TMDD_N112R1195_TMDD_v30x_Intersection_Status___Current_Signal_Timing_Mode_Supported}" passfailResult="False"/>
     <C2CRI-session beginSession="true" infoStd="TMDDv3.1" appStd="${ApplicationLayerStandard}" useWSDL="true" testCaseIdentifier="${C2CRITestCaseID}" riMode="EC">
          <testStep functionId="Step 4 CONFIGURE: Define the message that will be sent to the SUT.  RECORD this information as: RequestMessage:  ${RequestMessage}" passfailResult="False"/>
          <testStep functionId="Step 5 CONFIGURE: Determine whether an error response message is expected for this test.  RECORD this information as: ErrorResponseExpected:  ${ErrorResponseExpected}" passfailResult="False"/>
          <jl:if test="${ErrorResponseExpected}">
               <testStep functionId="Step 6 CONFIGURE: IF ErrorResponseExpected is true, determine the expected error code response for this test.  RECORD this information as:  ErrorTypeExpected:  ${ErrorTypeExpected}" passfailResult="False"/>
          </jl:if>
          <testStep functionId="Step 7 REQUEST-RESPONSE-EC with the following parameters:   DIALOG=dlIntersectionSignalStatusRequest RESPONSETIMEREQUIRED=TMDD_N88R997_Send_Intersection_Status_Information_Upon_Request_Parameter REQUESTMESSAGE = RequestMessage ERRORRESPONSEEXPECTED = ErrorResponseExpected ERRORTYPEEXPECTED = ErrorTypeExpected ">
               <REQUEST-RESPONSE-EC Dialog="dlIntersectionSignalStatusRequest" functionId="dlIntersectionSignalStatusRequest" RESPONSETIMEREQUIRED="60000" REQUESTMESSAGE="${RequestMessage}" ERRORRESPONSEEXPECTED="${ErrorResponseExpected}" ERRORTYPEEXPECTED="${ErrorTypeExpected}"/>
          </testStep>
          <testStep functionId="Step 8 IF ErrorResponseExpected is not equal to TRUE THEN CONTINUE, OTHERWISE skip the following substeps.  Note: If a verification step fails, then test execution will proceed at the next subsequent Post Condition step, if present.  Otherwise, test execution will proceed to the final Exit step." passfailResult="False"/>
          <jl:if test="${!ErrorResponseExpected}">
               <testStep functionId="Step 8.1 IF TMDD_N112R1194_TMDD_v30x_Intersection_Status___Signal_Control_Source_Supported is equal to TRUE THEN CONTINUE; OTHERWISE skip the following substeps." passFailResult="False"/>
               <jl:if test="${TMDD_N112R1194_TMDD_v30x_Intersection_Status___Signal_Control_Source_Supported}">
                    <testStep functionId="Step 8.1.1 VERIFY that a signal-control-source-extended data element exists within each instance of data frame intersectionSignalStatusMsg.intersection-signal-status-item.tmddX:intersectionSignalStatusExt" passfailResult="True">
                         <ri-MessageVerify msgType="RESPONSE" elementName="signal-control-source-extended" instanceName="tmdd:intersectionSignalStatusMsg.intersection-signal-status-item.tmddX:intersectionSignalStatusExt" elementType="data-element" functionId="Looking for intersectionSignalStatusMsg.intersection-signal-status-item"/>
                    </testStep>
               </jl:if>
               <testStep functionId="Step 8.2 IF TMDD_N112R1195_TMDD_v30x_Intersection_Status___Current_Signal_Timing_Mode_Supported is equal to TRUE THEN CONTINUE; OTHERWISE skip the following substeps." passFailResult="False"/>
               <jl:if test="${TMDD_N112R1195_TMDD_v30x_Intersection_Status___Current_Signal_Timing_Mode_Supported}">
                    <testStep functionId="Step 8.2.1 VERIFY that a current-signal-timing-mode-extended data element exists within each instance of data frame intersectionSignalStatusMsg.intersection-signal-status-item.tmddX:intersectionSignalStatusExt" passfailResult="True">
                         <ri-MessageVerify msgType="RESPONSE" elementName="current-signal-timing-mode-extended" instanceName="tmdd:intersectionSignalStatusMsg.intersection-signal-status-item.tmddX:intersectionSignalStatusExt" elementType="data-element" functionId="Looking for intersectionSignalStatusMsg.intersection-signal-status-item"/>
                    </testStep>
               </jl:if>
               <testStep functionId="Step 8.3 VERIFY that the values within the RESPONSE message are correct per the TMDD standard and known operational conditions.">
                    <AUTO-VERIFY-MESSAGE functionId="Automatically Verify message content" msgName="RESPONSE" verificationSpec="${VerificationSpec}"/>
                    <USER-VERIFY-MESSAGE functionId="The User Verifies the message content" msgName="RESPONSE" optionList="" userDataFile="${RI_USERTCDATAFILE}"/>
               </testStep>
          </jl:if>
          <testStep functionId="Step 9 IF ErrorResponseExpected is equal to TRUE THEN CONTINUE, OTHERWISE skip the following substeps.  If a verification step fails, then test execution will proceed at the next subsequent Post Condition step, if present.  Otherwise, test execution will proceed to the final Exit step." passfailResult="False"/>
          <jl:if test="${ErrorResponseExpected}">
               <testStep functionId="Step 9.1 VERIFY that an errorReportMsg message was received." passfailResult="True">
                    <ri-MessageVerify msgType="RESPONSE" elementName="errorReportMsg" instanceName="tmdd:errorReportMsg" elementType="message" functionId="Looking for errorReportMsg"/>
               </testStep>
          </jl:if>
          <postcondition>
               <testStep functionId=" Step 10 EXIT" passfailResult="False"/>
          </postcondition>
     </C2CRI-session>
</testprocedure>