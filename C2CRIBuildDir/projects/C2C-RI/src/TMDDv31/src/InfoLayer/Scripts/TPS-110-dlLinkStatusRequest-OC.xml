<?xml version="1.0" encoding="UTF-8"?>
<!--Title:  TPS-110-dlLinkStatusRequest-OC
       Description:  This test procedure is called by a test case and is used to verify the SUTs support of the dlLinkStatusRequest dialog as an OC using variables provided by the calling test case.  
This procedure supports verification of requirements related to user need 2.3.6.1.6 [Need for Roadway Characteristics Data] and is used for both valid and invalid test cases.
       Version/Date: 2014/01/18 01:24:32-->
<testprocedure xmlns="jelly:jameleon" xmlns:jl="jelly:core">
     <test-case-id>${C2CRITestCaseID}</test-case-id>
     <test-case-summary>This test procedure is called by a test case and is used to verify the SUTs support of the dlLinkStatusRequest dialog as an OC using variables provided by the calling test case.  
This procedure supports verification of requirements related to user need 2.3.6.1.6 [Need for Roadway Characteristics Data] and is used for both valid and invalid test cases.</test-case-summary>
     <testStep functionId="Step 1 CONFIGURE: Determine the Application Layer Standard that will be used for this test.  RECORD this information as: ApplicationLayerStandard:  ${ApplicationLayerStandard}" passfailResult="False "/>
     <testStep functionId="Step 2 CONFIGURE: Determine the dialog performance requirement for Send Link Status Information Upon Request (NTRM 3.3.4.3.2.1}.  RECORD this value as: TMDD_N110R277_Send_Link_Status_Information_Upon_Request_Parameter = ${TMDD_N110R277_Send_Link_Status_Information_Upon_Request_Parameter}" passfailResult="False"/>
     <testStep functionId="Step 3 CONFIGURE: Determine whether Link Name - Link Status is required by the specification. (NRTM 3.3.4.3.2.5.2.2).  RECORD this information as: TMDD_N110R284_Link_Name___Link_Status_Supported = ${TMDD_N110R284_Link_Name___Link_Status_Supported}" passfailResult="False"/>
     <testStep functionId="Step 4 CONFIGURE: Determine whether Link Direction - Link Status is required by the specification. (NRTM 3.3.4.3.2.5.2.3).  RECORD this information as: TMDD_N110R285_Link_Direction___Link_Status_Supported = ${TMDD_N110R285_Link_Direction___Link_Status_Supported}" passfailResult="False"/>
     <testStep functionId="Step 5 CONFIGURE: Determine whether Link Priority is required by the specification. (NRTM 3.3.4.3.2.5.2.5).  RECORD this information as: TMDD_N110R287_Link_Priority_Supported = ${TMDD_N110R287_Link_Priority_Supported}" passfailResult="False"/>
     <testStep functionId="Step 6 CONFIGURE: Determine whether Link Restrictions - Axles is required by the specification. (NRTM 3.3.4.3.2.5.2.6).  RECORD this information as: TMDD_N110R288_Link_Restrictions___Axles_Supported = ${TMDD_N110R288_Link_Restrictions___Axles_Supported}" passfailResult="False"/>
     <testStep functionId="Step 7 CONFIGURE: Determine whether Link Restrictions - Height is required by the specification. (NRTM 3.3.4.3.2.5.2.7).  RECORD this information as: TMDD_N110R289_Link_Restrictions___Height_Supported = ${TMDD_N110R289_Link_Restrictions___Height_Supported}" passfailResult="False"/>
     <testStep functionId="Step 8 CONFIGURE: Determine whether Link Restrictions - Length is required by the specification. (NRTM 3.3.4.3.2.5.2.8).  RECORD this information as: TMDD_N110R290_Link_Restrictions___Length_Supported = ${TMDD_N110R290_Link_Restrictions___Length_Supported}" passfailResult="False"/>
     <testStep functionId="Step 9 CONFIGURE: Determine whether Link Restrictions - Weight is required by the specification. (NRTM 3.3.4.3.2.5.2.9).  RECORD this information as: TMDD_N110R291_Link_Restrictions___Weight_Supported = ${TMDD_N110R291_Link_Restrictions___Weight_Supported}" passfailResult="False"/>
     <testStep functionId="Step 10 CONFIGURE: Determine whether Link Restrictions - Width is required by the specification. (NRTM 3.3.4.3.2.5.2.10).  RECORD this information as: TMDD_N110R292_Link_Restrictions___Width_Supported = ${TMDD_N110R292_Link_Restrictions___Width_Supported}" passfailResult="False"/>
     <testStep functionId="Step 11 CONFIGURE: Determine whether Link Restrictions - Axle Weight is required by the specification. (NRTM 3.3.4.3.2.5.2.11).  RECORD this information as: TMDD_N110R293_Link_Restrictions___Axle_Weight_Supported = ${TMDD_N110R293_Link_Restrictions___Axle_Weight_Supported}" passfailResult="False"/>
     <testStep functionId="Step 12 CONFIGURE: Determine whether Link Surface Conditions is required by the specification. (NRTM 3.3.4.3.2.5.2.13).  RECORD this information as: TMDD_N110R295_Link_Surface_Conditions_Supported = ${TMDD_N110R295_Link_Surface_Conditions_Supported}" passfailResult="False"/>
     <testStep functionId="Step 13 CONFIGURE: Determine whether Link Saturation is required by the specification. (NRTM 3.3.4.3.2.5.2.14).  RECORD this information as: TMDD_N110R296_Link_Saturation_Supported = ${TMDD_N110R296_Link_Saturation_Supported}" passfailResult="False"/>
     <testStep functionId="Step 14 CONFIGURE: Determine whether Link Saturation Threshold is required by the specification. (NRTM 3.3.4.3.2.5.2.15).  RECORD this information as: TMDD_N110R297_Link_Saturation_Threshold_Supported = ${TMDD_N110R297_Link_Saturation_Threshold_Supported}" passfailResult="False"/>
     <testStep functionId="Step 15 CONFIGURE: Determine whether Restrictions - Error Report is required by the specification. (NRTM 3.3.1.4.1.2.1).  RECORD this information as: TMDD_N110R15_Restrictions___Error_Report_Supported = ${TMDD_N110R15_Restrictions___Error_Report_Supported}" passfailResult="False"/>
     <C2CRI-session beginSession="true" infoStd="TMDDv3.1" appStd="${ApplicationLayerStandard}" useWSDL="true" testCaseIdentifier="${C2CRITestCaseID}" riMode="EC">
          <testStep functionId="Step 16 CONFIGURE: Define the message that will be sent to the SUT.  RECORD this information as: RequestMessage:  ${RequestMessage}" passfailResult="False"/>
          <testStep functionId="Step 17 CONFIGURE: Determine whether an error response message is expected for this test.  RECORD this information as: ErrorResponseExpected:  ${ErrorResponseExpected}" passfailResult="False"/>
          <jl:if test="${ErrorResponseExpected}">
               <testStep functionId="Step 18 CONFIGURE: IF ErrorResponseExpected is true, determine the expected error code response for this test.  RECORD this information as:  ErrorTypeExpected:  ${ErrorTypeExpected}" passfailResult="False"/>
          </jl:if>
          <testStep functionId="Step 19 REQUEST-RESPONSE-EC with the following parameters:   DIALOG=dlLinkStatusRequest RESPONSETIMEREQUIRED=TMDD_N110R277_Send_Link_Status_Information_Upon_Request_Parameter REQUESTMESSAGE = RequestMessage ERRORRESPONSEEXPECTED = ErrorResponseExpected ERRORTYPEEXPECTED = ErrorTypeExpected ">
               <REQUEST-RESPONSE-EC Dialog="dlLinkStatusRequest" functionId="dlLinkStatusRequest" RESPONSETIMEREQUIRED="${TMDD_N110R277_Send_Link_Status_Information_Upon_Request_Parameter}" REQUESTMESSAGE="${RequestMessage}" ERRORRESPONSEEXPECTED="${ErrorResponseExpected}" ERRORTYPEEXPECTED="${ErrorTypeExpected}"/>
          </testStep>
          <testStep functionId="Step 20 IF ErrorResponseExpected is not equal to TRUE THEN CONTINUE, OTHERWISE skip the following substeps.  Note: If a verification step fails, then test execution will proceed at the next subsequent Post Condition step, if present.  Otherwise, test execution will proceed to the final Exit step." passfailResult="False"/>
          <jl:if test="${!ErrorResponseExpected}">
               <testStep functionId="Step 20.1 VERIFY that a linkStatusMsg message was received." passfailResult="True">
                    <ri-MessageVerify msgType="RESPONSE" elementName="linkStatusMsg" instanceName="tmdd:linkStatusMsg" elementType="message" functionId="Looking for linkStatusMsg"/>
               </testStep>
               <testStep functionId="Step 20.2 VERIFY that an organization-information data frame exists within each instance of data frame linkStatusMsg.link-status-item" passfailResult="True">
                    <ri-MessageVerify msgType="RESPONSE" elementName="organization-information" instanceName="tmdd:linkStatusMsg.link-status-item" elementType="data-frame" functionId="Looking for linkStatusMsg.link-status-item"/>
               </testStep>
               <testStep functionId="Step 20.3 VERIFY that a network-id data element exists within each instance of data frame linkStatusMsg.link-status-item.link-status-list.link" passfailResult="True">
                    <ri-MessageVerify msgType="RESPONSE" elementName="network-id" instanceName="tmdd:linkStatusMsg.link-status-item.link-status-list.link" elementType="data-element" functionId="Looking for linkStatusMsg.link-status-item.link-status-list.link"/>
               </testStep>
               <testStep functionId="Step 20.4 VERIFY that a link-id data element exists within each instance of data frame linkStatusMsg.link-status-item.link-status-list.link" passfailResult="True">
                    <ri-MessageVerify msgType="RESPONSE" elementName="link-id" instanceName="tmdd:linkStatusMsg.link-status-item.link-status-list.link" elementType="data-element" functionId="Looking for linkStatusMsg.link-status-item.link-status-list.link"/>
               </testStep>
               <testStep functionId="Step 20.5 VERIFY that a link-status data element exists within each instance of data frame linkStatusMsg.link-status-item.link-status-list.link" passfailResult="True">
                    <ri-MessageVerify msgType="RESPONSE" elementName="link-status" instanceName="tmdd:linkStatusMsg.link-status-item.link-status-list.link" elementType="data-element" functionId="Looking for linkStatusMsg.link-status-item.link-status-list.link"/>
               </testStep>
               <testStep functionId="Step 20.6 IF TMDD_N110R284_Link_Name___Link_Status_Supported is equal to TRUE THEN CONTINUE; OTHERWISE skip the following substeps." passFailResult="False"/>
               <jl:if test="${TMDD_N110R284_Link_Name___Link_Status_Supported}">
                    <testStep functionId="Step 20.6.1 VERIFY that a link-name data element exists within each instance of data frame linkStatusMsg.link-status-item.link-status-list.link" passfailResult="True">
                         <ri-MessageVerify msgType="RESPONSE" elementName="link-name" instanceName="tmdd:linkStatusMsg.link-status-item.link-status-list.link" elementType="data-element" functionId="Looking for linkStatusMsg.link-status-item.link-status-list.link"/>
                    </testStep>
               </jl:if>
               <testStep functionId="Step 20.7 IF TMDD_N110R285_Link_Direction___Link_Status_Supported is equal to TRUE THEN CONTINUE; OTHERWISE skip the following substeps." passFailResult="False"/>
               <jl:if test="${TMDD_N110R285_Link_Direction___Link_Status_Supported}">
                    <testStep functionId="Step 20.7.1 VERIFY that a link-direction data element exists within each instance of data frame linkStatusMsg.link-status-item.link-status-list.link" passfailResult="True">
                         <ri-MessageVerify msgType="RESPONSE" elementName="link-direction" instanceName="tmdd:linkStatusMsg.link-status-item.link-status-list.link" elementType="data-element" functionId="Looking for linkStatusMsg.link-status-item.link-status-list.link"/>
                    </testStep>
               </jl:if>
               <testStep functionId="Step 20.8 IF TMDD_N110R287_Link_Priority_Supported is equal to TRUE THEN CONTINUE; OTHERWISE skip the following substeps." passFailResult="False"/>
               <jl:if test="${TMDD_N110R287_Link_Priority_Supported}">
                    <testStep functionId="Step 20.8.1 VERIFY that a priority-type data element exists within each instance of data frame linkStatusMsg.link-status-item.link-status-list.link" passfailResult="True">
                         <ri-MessageVerify msgType="RESPONSE" elementName="priority-type" instanceName="tmdd:linkStatusMsg.link-status-item.link-status-list.link" elementType="data-element" functionId="Looking for linkStatusMsg.link-status-item.link-status-list.link"/>
                    </testStep>
               </jl:if>
               <testStep functionId="Step 20.9 IF TMDD_N110R288_Link_Restrictions___Axles_Supported is equal to TRUE THEN CONTINUE; OTHERWISE skip the following substeps." passFailResult="False"/>
               <jl:if test="${TMDD_N110R288_Link_Restrictions___Axles_Supported}">
                    <testStep functionId="Step 20.9.1 VERIFY that a restriction-axle-count data element exists within each instance of data frame linkStatusMsg.link-status-item.link-status-list.link" passfailResult="True">
                         <ri-MessageVerify msgType="RESPONSE" elementName="restriction-axle-count" instanceName="tmdd:linkStatusMsg.link-status-item.link-status-list.link" elementType="data-element" functionId="Looking for linkStatusMsg.link-status-item.link-status-list.link"/>
                    </testStep>
               </jl:if>
               <testStep functionId="Step 20.10 IF TMDD_N110R289_Link_Restrictions___Height_Supported is equal to TRUE THEN CONTINUE; OTHERWISE skip the following substeps." passFailResult="False"/>
               <jl:if test="${TMDD_N110R289_Link_Restrictions___Height_Supported}">
                    <testStep functionId="Step 20.10.1 VERIFY that a restriction-height data element exists within each instance of data frame linkStatusMsg.link-status-item.link-status-list.link" passfailResult="True">
                         <ri-MessageVerify msgType="RESPONSE" elementName="restriction-height" instanceName="tmdd:linkStatusMsg.link-status-item.link-status-list.link" elementType="data-element" functionId="Looking for linkStatusMsg.link-status-item.link-status-list.link"/>
                    </testStep>
               </jl:if>
               <testStep functionId="Step 20.11 IF TMDD_N110R290_Link_Restrictions___Length_Supported is equal to TRUE THEN CONTINUE; OTHERWISE skip the following substeps." passFailResult="False"/>
               <jl:if test="${TMDD_N110R290_Link_Restrictions___Length_Supported}">
                    <testStep functionId="Step 20.11.1 VERIFY that a restriction-length data element exists within each instance of data frame linkStatusMsg.link-status-item.link-status-list.link" passfailResult="True">
                         <ri-MessageVerify msgType="RESPONSE" elementName="restriction-length" instanceName="tmdd:linkStatusMsg.link-status-item.link-status-list.link" elementType="data-element" functionId="Looking for linkStatusMsg.link-status-item.link-status-list.link"/>
                    </testStep>
               </jl:if>
               <testStep functionId="Step 20.12 IF TMDD_N110R291_Link_Restrictions___Weight_Supported is equal to TRUE THEN CONTINUE; OTHERWISE skip the following substeps." passFailResult="False"/>
               <jl:if test="${TMDD_N110R291_Link_Restrictions___Weight_Supported}">
                    <testStep functionId="Step 20.12.1 VERIFY that a restriction-weight data element exists within each instance of data frame linkStatusMsg.link-status-item.link-status-list.link" passfailResult="True">
                         <ri-MessageVerify msgType="RESPONSE" elementName="restriction-weight" instanceName="tmdd:linkStatusMsg.link-status-item.link-status-list.link" elementType="data-element" functionId="Looking for linkStatusMsg.link-status-item.link-status-list.link"/>
                    </testStep>
               </jl:if>
               <testStep functionId="Step 20.13 IF TMDD_N110R292_Link_Restrictions___Width_Supported is equal to TRUE THEN CONTINUE; OTHERWISE skip the following substeps." passFailResult="False"/>
               <jl:if test="${TMDD_N110R292_Link_Restrictions___Width_Supported}">
                    <testStep functionId="Step 20.13.1 VERIFY that a restriction-width data element exists within each instance of data frame linkStatusMsg.link-status-item.link-status-list.link" passfailResult="True">
                         <ri-MessageVerify msgType="RESPONSE" elementName="restriction-width" instanceName="tmdd:linkStatusMsg.link-status-item.link-status-list.link" elementType="data-element" functionId="Looking for linkStatusMsg.link-status-item.link-status-list.link"/>
                    </testStep>
               </jl:if>
               <testStep functionId="Step 20.14 IF TMDD_N110R293_Link_Restrictions___Axle_Weight_Supported is equal to TRUE THEN CONTINUE; OTHERWISE skip the following substeps." passFailResult="False"/>
               <jl:if test="${TMDD_N110R293_Link_Restrictions___Axle_Weight_Supported}">
                    <testStep functionId="Step 20.14.1 VERIFY that a restriction-weight-axle data element exists within each instance of data frame linkStatusMsg.link-status-item.link-status-list.link" passfailResult="True">
                         <ri-MessageVerify msgType="RESPONSE" elementName="restriction-weight-axle" instanceName="tmdd:linkStatusMsg.link-status-item.link-status-list.link" elementType="data-element" functionId="Looking for linkStatusMsg.link-status-item.link-status-list.link"/>
                    </testStep>
               </jl:if>
               <testStep functionId="Step 20.15 IF TMDD_N110R295_Link_Surface_Conditions_Supported is equal to TRUE THEN CONTINUE; OTHERWISE skip the following substeps." passFailResult="False"/>
               <jl:if test="${TMDD_N110R295_Link_Surface_Conditions_Supported}">
                    <testStep functionId="Step 20.15.1 VERIFY that a surface-condition data element exists within each instance of data frame linkStatusMsg.link-status-item.link-status-list.link" passfailResult="True">
                         <ri-MessageVerify msgType="RESPONSE" elementName="surface-condition" instanceName="tmdd:linkStatusMsg.link-status-item.link-status-list.link" elementType="data-element" functionId="Looking for linkStatusMsg.link-status-item.link-status-list.link"/>
                    </testStep>
               </jl:if>
               <testStep functionId="Step 20.16 IF TMDD_N110R296_Link_Saturation_Supported is equal to TRUE THEN CONTINUE; OTHERWISE skip the following substeps." passFailResult="False"/>
               <jl:if test="${TMDD_N110R296_Link_Saturation_Supported}">
                    <testStep functionId="Step 20.16.1 VERIFY that a saturation-flag data element exists within each instance of data frame linkStatusMsg.link-status-item.link-status-list.link" passfailResult="True">
                         <ri-MessageVerify msgType="RESPONSE" elementName="saturation-flag" instanceName="tmdd:linkStatusMsg.link-status-item.link-status-list.link" elementType="data-element" functionId="Looking for linkStatusMsg.link-status-item.link-status-list.link"/>
                    </testStep>
               </jl:if>
               <testStep functionId="Step 20.17 IF TMDD_N110R297_Link_Saturation_Threshold_Supported is equal to TRUE THEN CONTINUE; OTHERWISE skip the following substeps." passFailResult="False"/>
               <jl:if test="${TMDD_N110R297_Link_Saturation_Threshold_Supported}">
                    <testStep functionId="Step 20.17.1 VERIFY that an oversaturated-threshold data element exists within each instance of data frame linkStatusMsg.link-status-item.link-status-list.link" passfailResult="True">
                         <ri-MessageVerify msgType="RESPONSE" elementName="oversaturated-threshold" instanceName="tmdd:linkStatusMsg.link-status-item.link-status-list.link" elementType="data-element" functionId="Looking for linkStatusMsg.link-status-item.link-status-list.link"/>
                    </testStep>
               </jl:if>
               <testStep functionId="Step 20.18 VERIFY that the values within the RESPONSE message are correct per the TMDD standard and known operational conditions.">
                    <AUTO-VERIFY-MESSAGE functionId="Automatically Verify message content" msgName="RESPONSE" verificationSpec="${VerificationSpec}"/>
                    <USER-VERIFY-MESSAGE functionId="The User Verifies the message content" msgName="RESPONSE" optionList="TMDD_N110R284_Link_Name___Link_Status_Supported,link-name,tmdd:linkStatusMsg.link-status-item.link-status-list.link;TMDD_N110R285_Link_Direction___Link_Status_Supported,link-direction,tmdd:linkStatusMsg.link-status-item.link-status-list.link;TMDD_N110R287_Link_Priority_Supported,priority-type,tmdd:linkStatusMsg.link-status-item.link-status-list.link;TMDD_N110R288_Link_Restrictions___Axles_Supported,restriction-axle-count,tmdd:linkStatusMsg.link-status-item.link-status-list.link;TMDD_N110R289_Link_Restrictions___Height_Supported,restriction-height,tmdd:linkStatusMsg.link-status-item.link-status-list.link;TMDD_N110R290_Link_Restrictions___Length_Supported,restriction-length,tmdd:linkStatusMsg.link-status-item.link-status-list.link;TMDD_N110R291_Link_Restrictions___Weight_Supported,restriction-weight,tmdd:linkStatusMsg.link-status-item.link-status-list.link;TMDD_N110R292_Link_Restrictions___Width_Supported,restriction-width,tmdd:linkStatusMsg.link-status-item.link-status-list.link;TMDD_N110R293_Link_Restrictions___Axle_Weight_Supported,restriction-weight-axle,tmdd:linkStatusMsg.link-status-item.link-status-list.link;TMDD_N110R295_Link_Surface_Conditions_Supported,surface-condition,tmdd:linkStatusMsg.link-status-item.link-status-list.link;TMDD_N110R296_Link_Saturation_Supported,saturation-flag,tmdd:linkStatusMsg.link-status-item.link-status-list.link;TMDD_N110R297_Link_Saturation_Threshold_Supported,oversaturated-threshold,tmdd:linkStatusMsg.link-status-item.link-status-list.link;TMDD_N110R15_Restrictions___Error_Report_Supported,restrictions,tmdd:errorReportMsg;" userDataFile="${RI_USERTCDATAFILE}"/>
               </testStep>
          </jl:if>
          <testStep functionId="Step 21 IF ErrorResponseExpected is equal to TRUE THEN CONTINUE, OTHERWISE skip the following substeps.  If a verification step fails, then test execution will proceed at the next subsequent Post Condition step, if present.  Otherwise, test execution will proceed to the final Exit step." passfailResult="False"/>
          <jl:if test="${ErrorResponseExpected}">
               <testStep functionId="Step 21.1 VERIFY that an errorReportMsg message was received." passfailResult="True">
                    <ri-MessageVerify msgType="RESPONSE" elementName="errorReportMsg" instanceName="tmdd:errorReportMsg" elementType="message" functionId="Looking for errorReportMsg"/>
               </testStep>
               <testStep functionId="Step 21.2 VERIFY that an organization-information data frame exists within message errorReportMsg." passfailResult="True">
                    <ri-MessageVerify msgType="RESPONSE" elementName="organization-information" instanceName="tmdd:errorReportMsg" elementType="data-frame" functionId="Looking for errorReportMsg"/>
               </testStep>
               <testStep functionId="Step 21.3 VERIFY that an organization-requesting data frame exists within message errorReportMsg." passfailResult="True">
                    <ri-MessageVerify msgType="RESPONSE" elementName="organization-requesting" instanceName="tmdd:errorReportMsg" elementType="data-frame" functionId="Looking for errorReportMsg"/>
               </testStep>
               <testStep functionId="Step 21.4 VERIFY that an error-code data element exists within message errorReportMsg." passfailResult="True">
                    <ri-MessageVerify msgType="RESPONSE" elementName="error-code" instanceName="tmdd:errorReportMsg" elementType="data-element" functionId="Looking for errorReportMsg"/>
               </testStep>
               <testStep functionId="Step 21.5 VERIFY that an error-text data element exists within message errorReportMsg." passfailResult="True">
                    <ri-MessageVerify msgType="RESPONSE" elementName="error-text" instanceName="tmdd:errorReportMsg" elementType="data-element" functionId="Looking for errorReportMsg"/>
               </testStep>
               <testStep functionId="Step 21.6 VERIFY that data element error-code is set to ErrorResponseTypeExpected." passfailResult="True">
                    <ri-MessageVerify msgType="RESPONSE" elementName="error-code" instanceName="tmdd:errorReportMsg" instanceValue="${ErrorResponseTypeExpected}" elementType="data-element" functionId="Looking for errorReportMsg"/>
               </testStep>
               <testStep functionId="Step 21.7 IF TMDD_N110R15_Restrictions___Error_Report_Supported is equal to TRUE THEN CONTINUE; OTHERWISE skip the following substeps." passFailResult="False"/>
               <jl:if test="${TMDD_N110R15_Restrictions___Error_Report_Supported}">
                    <testStep functionId="Step 21.7.1 VERIFY that a restrictions data frame exists within message errorReportMsg." passfailResult="True">
                         <ri-MessageVerify msgType="RESPONSE" elementName="restrictions" instanceName="tmdd:errorReportMsg" elementType="data-frame" functionId="Looking for errorReportMsg"/>
                    </testStep>
               </jl:if>
          </jl:if>
          <postcondition>
               <testStep functionId=" Step 22 EXIT" passfailResult="False"/>
          </postcondition>
     </C2CRI-session>
</testprocedure>