<?xml version="1.0" encoding="UTF-8"?>
<!--Title:  TPS-69-dlHARMessageInventoryRequest-OC
       Description:  This test procedure is called by a test case and is used to verify the SUTs support of the dlHARMessageInventoryRequest dialog as an OC using variables provided by the calling test case.  
This procedure supports verification of requirements related to user need 2.3.5.7.9 [Need to Share HAR Messages] and is used for both valid and invalid test cases.
       Version/Date: 2014/01/18 00:30:36-->
<testprocedure xmlns="jelly:jameleon" xmlns:jl="jelly:core">
     <test-case-id>${C2CRITestCaseID}</test-case-id>
     <test-case-summary>This test procedure is called by a test case and is used to verify the SUTs support of the dlHARMessageInventoryRequest dialog as an OC using variables provided by the calling test case.  
This procedure supports verification of requirements related to user need 2.3.5.7.9 [Need to Share HAR Messages] and is used for both valid and invalid test cases.</test-case-summary>
     <testStep functionId="Step 1 CONFIGURE: Determine the Application Layer Standard that will be used for this test.  RECORD this information as: ApplicationLayerStandard:  ${ApplicationLayerStandard}" passfailResult="False "/>
     <testStep functionId="Step 2 CONFIGURE: Determine the dialog performance requirement for Send HAR Messages Upon Request (NTRM 3.3.5.8.7.1}.  RECORD this value as: TMDD_N69R848_Send_HAR_Messages_Upon_Request_Parameter = ${TMDD_N69R848_Send_HAR_Messages_Upon_Request_Parameter}" passfailResult="False"/>
     <testStep functionId="Step 3 CONFIGURE: Determine whether Restrictions - HAR Message Inventory is required by the specification. (NRTM 3.3.5.8.7.5.2.1).  RECORD this information as: TMDD_N69R854_Restrictions___HAR_Message_Inventory_Supported = ${TMDD_N69R854_Restrictions___HAR_Message_Inventory_Supported}" passfailResult="False"/>
     <testStep functionId="Step 4 CONFIGURE: Determine whether HAR Message Date and Time Change Information is required by the specification. (NRTM 3.3.5.8.7.5.2.2).  RECORD this information as: TMDD_N69R855_HAR_Message_Date_and_Time_Change_Information_Supported = ${TMDD_N69R855_HAR_Message_Date_and_Time_Change_Information_Supported}" passfailResult="False"/>
     <testStep functionId="Step 5 CONFIGURE: Determine whether Restrictions - Error Report is required by the specification. (NRTM 3.3.1.4.1.2.1).  RECORD this information as: TMDD_N69R15_Restrictions___Error_Report_Supported = ${TMDD_N69R15_Restrictions___Error_Report_Supported}" passfailResult="False"/>
     <testStep functionId="Step 6 CONFIGURE: Determine whether HAR Message Default Priority is required by the specification. (NRTM 3.3.5.8.7.5.2.3).  RECORD this information as: TMDD_N69R856_HAR_Message_Default_Priority_Supported = ${TMDD_N69R856_HAR_Message_Default_Priority_Supported}" passfailResult="False"/>
     <testStep functionId="Step 7 CONFIGURE: Determine whether HAR Extended Message Length is required by the specification. (NRTM 3.3.5.8.7.5.2.4).  RECORD this information as: TMDD_N69R857_HAR_Extended_Message_Length_Supported = ${TMDD_N69R857_HAR_Extended_Message_Length_Supported}" passfailResult="False"/>
     <C2CRI-session beginSession="true" infoStd="TMDDv3.1" appStd="${ApplicationLayerStandard}" useWSDL="true" testCaseIdentifier="${C2CRITestCaseID}" riMode="EC">
          <testStep functionId="Step 8 CONFIGURE: Define the message that will be sent to the SUT.  RECORD this information as: RequestMessage:  ${RequestMessage}" passfailResult="False"/>
          <testStep functionId="Step 9 CONFIGURE: Determine whether an error response message is expected for this test.  RECORD this information as: ErrorResponseExpected:  ${ErrorResponseExpected}" passfailResult="False"/>
          <jl:if test="${ErrorResponseExpected}">
               <testStep functionId="Step 10 CONFIGURE: IF ErrorResponseExpected is true, determine the expected error code response for this test.  RECORD this information as:  ErrorTypeExpected:  ${ErrorTypeExpected}" passfailResult="False"/>
          </jl:if>
          <testStep functionId="Step 11 REQUEST-RESPONSE-EC with the following parameters:   DIALOG=dlHARMessageInventoryRequest RESPONSETIMEREQUIRED=TMDD_N69R848_Send_HAR_Messages_Upon_Request_Parameter REQUESTMESSAGE = RequestMessage ERRORRESPONSEEXPECTED = ErrorResponseExpected ERRORTYPEEXPECTED = ErrorTypeExpected ">
               <REQUEST-RESPONSE-EC Dialog="dlHARMessageInventoryRequest" functionId="dlHARMessageInventoryRequest" RESPONSETIMEREQUIRED="${TMDD_N69R848_Send_HAR_Messages_Upon_Request_Parameter}" REQUESTMESSAGE="${RequestMessage}" ERRORRESPONSEEXPECTED="${ErrorResponseExpected}" ERRORTYPEEXPECTED="${ErrorTypeExpected}"/>
          </testStep>
          <testStep functionId="Step 12 IF ErrorResponseExpected is not equal to TRUE THEN CONTINUE, OTHERWISE skip the following substeps.  Note: If a verification step fails, then test execution will proceed at the next subsequent Post Condition step, if present.  Otherwise, test execution will proceed to the final Exit step." passfailResult="False"/>
          <jl:if test="${!ErrorResponseExpected}">
               <testStep functionId="Step 12.1 VERIFY that a hARMessageInventoryMsg message was received." passfailResult="True">
                    <ri-MessageVerify msgType="RESPONSE" elementName="hARMessageInventoryMsg" instanceName="tmdd:hARMessageInventoryMsg" elementType="message" functionId="Looking for hARMessageInventoryMsg"/>
               </testStep>
               <testStep functionId="Step 12.2 VERIFY that an organization-information data frame exists within each instance of data frame hARMessageInventoryMsg.har-message-inventory-item" passfailResult="True">
                    <ri-MessageVerify msgType="RESPONSE" elementName="organization-information" instanceName="tmdd:hARMessageInventoryMsg.har-message-inventory-item" elementType="data-frame" functionId="Looking for hARMessageInventoryMsg.har-message-inventory-item"/>
               </testStep>
               <testStep functionId="Step 12.3 VERIFY that a device-id data element exists within each instance of data frame hARMessageInventoryMsg.har-message-inventory-item" passfailResult="True">
                    <ri-MessageVerify msgType="RESPONSE" elementName="device-id" instanceName="tmdd:hARMessageInventoryMsg.har-message-inventory-item" elementType="data-element" functionId="Looking for hARMessageInventoryMsg.har-message-inventory-item"/>
               </testStep>
               <testStep functionId="Step 12.4 VERIFY that a message-number data element exists within each instance of data frame hARMessageInventoryMsg.har-message-inventory-item" passfailResult="True">
                    <ri-MessageVerify msgType="RESPONSE" elementName="message-number" instanceName="tmdd:hARMessageInventoryMsg.har-message-inventory-item" elementType="data-element" functionId="Looking for hARMessageInventoryMsg.har-message-inventory-item"/>
               </testStep>
               <testStep functionId="Step 12.5 VERIFY that a current-message data element exists within each instance of data frame hARMessageInventoryMsg.har-message-inventory-item" passfailResult="True">
                    <ri-MessageVerify msgType="RESPONSE" elementName="current-message" instanceName="tmdd:hARMessageInventoryMsg.har-message-inventory-item" elementType="data-element" functionId="Looking for hARMessageInventoryMsg.har-message-inventory-item"/>
               </testStep>
               <testStep functionId="Step 12.6 IF TMDD_N69R854_Restrictions___HAR_Message_Inventory_Supported is equal to TRUE THEN CONTINUE; OTHERWISE skip the following substeps." passFailResult="False"/>
               <jl:if test="${TMDD_N69R854_Restrictions___HAR_Message_Inventory_Supported}">
                    <testStep functionId="Step 12.6.1 VERIFY that a restrictions data frame exists within each instance of data frame hARMessageInventoryMsg.har-message-inventory-item" passfailResult="True">
                         <ri-MessageVerify msgType="RESPONSE" elementName="restrictions" instanceName="tmdd:hARMessageInventoryMsg.har-message-inventory-item" elementType="data-frame" functionId="Looking for hARMessageInventoryMsg.har-message-inventory-item"/>
                    </testStep>
               </jl:if>
               <testStep functionId="Step 12.7 IF TMDD_N69R855_HAR_Message_Date_and_Time_Change_Information_Supported is equal to TRUE THEN CONTINUE; OTHERWISE skip the following substeps." passFailResult="False"/>
               <jl:if test="${TMDD_N69R855_HAR_Message_Date_and_Time_Change_Information_Supported}">
                    <testStep functionId="Step 12.7.1 VERIFY that a last-update-time data frame exists within each instance of data frame hARMessageInventoryMsg.har-message-inventory-item" passfailResult="True">
                         <ri-MessageVerify msgType="RESPONSE" elementName="last-update-time" instanceName="tmdd:hARMessageInventoryMsg.har-message-inventory-item" elementType="data-frame" functionId="Looking for hARMessageInventoryMsg.har-message-inventory-item"/>
                    </testStep>
               </jl:if>
               <testStep functionId="Step 12.8 IF TMDD_N69R856_HAR_Message_Default_Priority_Supported is equal to TRUE THEN CONTINUE; OTHERWISE skip the following substeps." passFailResult="False"/>
               <jl:if test="${TMDD_N69R856_HAR_Message_Default_Priority_Supported}">
                    <testStep functionId="Step 12.8.1 VERIFY that a har-priority data element exists within each instance of data frame hARMessageInventoryMsg.har-message-inventory-item.tmddX:hARMessageInventoryExt" passfailResult="True">
                         <ri-MessageVerify msgType="RESPONSE" elementName="har-priority" instanceName="tmdd:hARMessageInventoryMsg.har-message-inventory-item.tmddX:hARMessageInventoryExt" elementType="data-element" functionId="Looking for hARMessageInventoryMsg.har-message-inventory-item"/>
                    </testStep>
               </jl:if>
               <testStep functionId="Step 12.9 IF TMDD_N69R857_HAR_Extended_Message_Length_Supported is equal to TRUE THEN CONTINUE; OTHERWISE skip the following substeps." passFailResult="False"/>
               <jl:if test="${TMDD_N69R857_HAR_Extended_Message_Length_Supported}">
                    <testStep functionId="Step 12.9.1 VERIFY that a current-message-extended data element exists within each instance of data frame hARMessageInventoryMsg.har-message-inventory-item.tmddX:hARMessageInventoryExt" passfailResult="True">
                         <ri-MessageVerify msgType="RESPONSE" elementName="current-message-extended" instanceName="tmdd:hARMessageInventoryMsg.har-message-inventory-item.tmddX:hARMessageInventoryExt" elementType="data-element" functionId="Looking for hARMessageInventoryMsg.har-message-inventory-item"/>
                    </testStep>
               </jl:if>
               <testStep functionId="Step 12.10 VERIFY that the values within the RESPONSE message are correct per the TMDD standard and known operational conditions.">
                    <AUTO-VERIFY-MESSAGE functionId="Automatically Verify message content" msgName="RESPONSE" verificationSpec="${VerificationSpec}"/>
                    <USER-VERIFY-MESSAGE functionId="The User Verifies the message content" msgName="RESPONSE" optionList="TMDD_N69R854_Restrictions___HAR_Message_Inventory_Supported,restrictions,tmdd:hARMessageInventoryMsg.har-message-inventory-item;TMDD_N69R855_HAR_Message_Date_and_Time_Change_Information_Supported,last-update-time,tmdd:hARMessageInventoryMsg.har-message-inventory-item;TMDD_N69R856_HAR_Message_Default_Priority_Supported,har-priority,tmdd:hARMessageInventoryMsg.har-message-inventory-item.tmddX:hARMessageInventoryExt;TMDD_N69R857_HAR_Extended_Message_Length_Supported,current-message-extended,tmdd:hARMessageInventoryMsg.har-message-inventory-item.tmddX:hARMessageInventoryExt;TMDD_N69R15_Restrictions___Error_Report_Supported,restrictions,tmdd:errorReportMsg;" userDataFile="${RI_USERTCDATAFILE}"/>
               </testStep>
          </jl:if>
          <testStep functionId="Step 13 IF ErrorResponseExpected is equal to TRUE THEN CONTINUE, OTHERWISE skip the following substeps.  If a verification step fails, then test execution will proceed at the next subsequent Post Condition step, if present.  Otherwise, test execution will proceed to the final Exit step." passfailResult="False"/>
          <jl:if test="${ErrorResponseExpected}">
               <testStep functionId="Step 13.1 VERIFY that an errorReportMsg message was received." passfailResult="True">
                    <ri-MessageVerify msgType="RESPONSE" elementName="errorReportMsg" instanceName="tmdd:errorReportMsg" elementType="message" functionId="Looking for errorReportMsg"/>
               </testStep>
               <testStep functionId="Step 13.2 VERIFY that an organization-information data frame exists within message errorReportMsg." passfailResult="True">
                    <ri-MessageVerify msgType="RESPONSE" elementName="organization-information" instanceName="tmdd:errorReportMsg" elementType="data-frame" functionId="Looking for errorReportMsg"/>
               </testStep>
               <testStep functionId="Step 13.3 VERIFY that an organization-requesting data frame exists within message errorReportMsg." passfailResult="True">
                    <ri-MessageVerify msgType="RESPONSE" elementName="organization-requesting" instanceName="tmdd:errorReportMsg" elementType="data-frame" functionId="Looking for errorReportMsg"/>
               </testStep>
               <testStep functionId="Step 13.4 VERIFY that an error-code data element exists within message errorReportMsg." passfailResult="True">
                    <ri-MessageVerify msgType="RESPONSE" elementName="error-code" instanceName="tmdd:errorReportMsg" elementType="data-element" functionId="Looking for errorReportMsg"/>
               </testStep>
               <testStep functionId="Step 13.5 VERIFY that an error-text data element exists within message errorReportMsg." passfailResult="True">
                    <ri-MessageVerify msgType="RESPONSE" elementName="error-text" instanceName="tmdd:errorReportMsg" elementType="data-element" functionId="Looking for errorReportMsg"/>
               </testStep>
               <testStep functionId="Step 13.6 VERIFY that data element error-code is set to ErrorResponseTypeExpected." passfailResult="True">
                    <ri-MessageVerify msgType="RESPONSE" elementName="error-code" instanceName="tmdd:errorReportMsg" instanceValue="${ErrorResponseTypeExpected}" elementType="data-element" functionId="Looking for errorReportMsg"/>
               </testStep>
               <testStep functionId="Step 13.7 IF TMDD_N69R15_Restrictions___Error_Report_Supported is equal to TRUE THEN CONTINUE; OTHERWISE skip the following substeps." passFailResult="False"/>
               <jl:if test="${TMDD_N69R15_Restrictions___Error_Report_Supported}">
                    <testStep functionId="Step 13.7.1 VERIFY that a restrictions data frame exists within message errorReportMsg." passfailResult="True">
                         <ri-MessageVerify msgType="RESPONSE" elementName="restrictions" instanceName="tmdd:errorReportMsg" elementType="data-frame" functionId="Looking for errorReportMsg"/>
                    </testStep>
               </jl:if>
          </jl:if>
          <postcondition>
               <testStep functionId=" Step 14 EXIT" passfailResult="False"/>
          </postcondition>
     </C2CRI-session>
</testprocedure>