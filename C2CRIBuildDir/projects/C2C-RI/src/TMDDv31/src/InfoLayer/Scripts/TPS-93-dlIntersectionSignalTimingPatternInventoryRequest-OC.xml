<?xml version="1.0" encoding="UTF-8"?>
<!--Title:  TPS-93-dlIntersectionSignalTimingPatternInventoryRequest-OC
       Description:  This test procedure is called by a test case and is used to verify the SUTs support of the dlIntersectionSignalTimingPatternInventoryRequest dialog as an OC using variables provided by the calling test case.  
This procedure supports verification of requirements related to user need 2.3.5.10.8 [Need to Share Controller Timing Patterns] and is used for both valid and invalid test cases.
       Version/Date: 2014/01/18 00:48:57-->
<testprocedure xmlns="jelly:jameleon" xmlns:jl="jelly:core">
     <test-case-id>${C2CRITestCaseID}</test-case-id>
     <test-case-summary>This test procedure is called by a test case and is used to verify the SUTs support of the dlIntersectionSignalTimingPatternInventoryRequest dialog as an OC using variables provided by the calling test case.  
This procedure supports verification of requirements related to user need 2.3.5.10.8 [Need to Share Controller Timing Patterns] and is used for both valid and invalid test cases.</test-case-summary>
     <testStep functionId="Step 1 CONFIGURE: Determine the Application Layer Standard that will be used for this test.  RECORD this information as: ApplicationLayerStandard:  ${ApplicationLayerStandard}" passfailResult="False "/>
     <testStep functionId="Step 2 CONFIGURE: Determine the dialog performance requirement for Send Signal Timing Pattern Upon Request (NTRM 3.3.5.11.7.1}.  RECORD this value as: TMDD_N93R1058_Send_Signal_Timing_Pattern_Upon_Request_Parameter = ${TMDD_N93R1058_Send_Signal_Timing_Pattern_Upon_Request_Parameter}" passfailResult="False"/>
     <testStep functionId="Step 3 CONFIGURE: Determine whether Restrictions - Timing Pattern is required by the specification. (NRTM 3.3.5.11.7.5.2.1).  RECORD this information as: TMDD_N93R1066_Restrictions___Timing_Pattern_Supported = ${TMDD_N93R1066_Restrictions___Timing_Pattern_Supported}" passfailResult="False"/>
     <testStep functionId="Step 4 CONFIGURE: Determine whether Description of Timing Pattern is required by the specification. (NRTM 3.3.5.11.7.5.2.2).  RECORD this information as: TMDD_N93R1067_Description_of_Timing_Pattern_Supported = ${TMDD_N93R1067_Description_of_Timing_Pattern_Supported}" passfailResult="False"/>
     <testStep functionId="Step 5 CONFIGURE: Determine whether Maximum Green Duration is required by the specification. (NRTM 3.3.5.11.7.5.2.3).  RECORD this information as: TMDD_N93R1068_Maximum_Green_Duration_Supported = ${TMDD_N93R1068_Maximum_Green_Duration_Supported}" passfailResult="False"/>
     <testStep functionId="Step 6 CONFIGURE: Determine whether Minimum Green Duration is required by the specification. (NRTM 3.3.5.11.7.5.2.4).  RECORD this information as: TMDD_N93R1069_Minimum_Green_Duration_Supported = ${TMDD_N93R1069_Minimum_Green_Duration_Supported}" passfailResult="False"/>
     <testStep functionId="Step 7 CONFIGURE: Determine whether Vehicle Clearance Duration is required by the specification. (NRTM 3.3.5.11.7.5.2.5).  RECORD this information as: TMDD_N93R1070_Vehicle_Clearance_Duration_Supported = ${TMDD_N93R1070_Vehicle_Clearance_Duration_Supported}" passfailResult="False"/>
     <testStep functionId="Step 8 CONFIGURE: Determine whether Vehicle Red Duration is required by the specification. (NRTM 3.3.5.11.7.5.2.6).  RECORD this information as: TMDD_N93R1071_Vehicle_Red_Duration_Supported = ${TMDD_N93R1071_Vehicle_Red_Duration_Supported}" passfailResult="False"/>
     <testStep functionId="Step 9 CONFIGURE: Determine whether Minimum Walk Duration is required by the specification. (NRTM 3.3.5.11.7.5.2.7).  RECORD this information as: TMDD_N93R1072_Minimum_Walk_Duration_Supported = ${TMDD_N93R1072_Minimum_Walk_Duration_Supported}" passfailResult="False"/>
     <testStep functionId="Step 10 CONFIGURE: Determine whether Pedestrian Clearance Duration is required by the specification. (NRTM 3.3.5.11.7.5.2.8).  RECORD this information as: TMDD_N93R1073_Pedestrian_Clearance_Duration_Supported = ${TMDD_N93R1073_Pedestrian_Clearance_Duration_Supported}" passfailResult="False"/>
     <testStep functionId="Step 11 CONFIGURE: Determine whether Steady-dont-walk Duration is required by the specification. (NRTM 3.3.5.11.7.5.2.9).  RECORD this information as: TMDD_N93R1074_Steady_dont_walk_Duration_Supported = ${TMDD_N93R1074_Steady_dont_walk_Duration_Supported}" passfailResult="False"/>
     <testStep functionId="Step 12 CONFIGURE: Determine whether Phase Sequence Information is required by the specification. (NRTM 3.3.5.11.7.5.2.10).  RECORD this information as: TMDD_N93R1075_Phase_Sequence_Information_Supported = ${TMDD_N93R1075_Phase_Sequence_Information_Supported}" passfailResult="False"/>
     <testStep functionId="Step 13 CONFIGURE: Determine whether Timing Pattern Inventory Date and Time Change Information is required by the specification. (NRTM 3.3.5.11.7.5.2.11).  RECORD this information as: TMDD_N93R1076_Timing_Pattern_Inventory_Date_and_Time_Change_Information_Supported = ${TMDD_N93R1076_Timing_Pattern_Inventory_Date_and_Time_Change_Information_Supported}" passfailResult="False"/>
     <testStep functionId="Step 14 CONFIGURE: Determine whether Restrictions - Error Report is required by the specification. (NRTM 3.3.1.4.1.2.1).  RECORD this information as: TMDD_N93R15_Restrictions___Error_Report_Supported = ${TMDD_N93R15_Restrictions___Error_Report_Supported}" passfailResult="False"/>
     <C2CRI-session beginSession="true" infoStd="TMDDv3.1" appStd="${ApplicationLayerStandard}" useWSDL="true" testCaseIdentifier="${C2CRITestCaseID}" riMode="EC">
          <testStep functionId="Step 15 CONFIGURE: Define the message that will be sent to the SUT.  RECORD this information as: RequestMessage:  ${RequestMessage}" passfailResult="False"/>
          <testStep functionId="Step 16 CONFIGURE: Determine whether an error response message is expected for this test.  RECORD this information as: ErrorResponseExpected:  ${ErrorResponseExpected}" passfailResult="False"/>
          <jl:if test="${ErrorResponseExpected}">
               <testStep functionId="Step 17 CONFIGURE: IF ErrorResponseExpected is true, determine the expected error code response for this test.  RECORD this information as:  ErrorTypeExpected:  ${ErrorTypeExpected}" passfailResult="False"/>
          </jl:if>
          <testStep functionId="Step 18 REQUEST-RESPONSE-EC with the following parameters:   DIALOG=dlIntersectionSignalTimingPatternInventoryRequest RESPONSETIMEREQUIRED=TMDD_N93R1058_Send_Signal_Timing_Pattern_Upon_Request_Parameter REQUESTMESSAGE = RequestMessage ERRORRESPONSEEXPECTED = ErrorResponseExpected ERRORTYPEEXPECTED = ErrorTypeExpected ">
               <REQUEST-RESPONSE-EC Dialog="dlIntersectionSignalTimingPatternInventoryRequest" functionId="dlIntersectionSignalTimingPatternInventoryRequest" RESPONSETIMEREQUIRED="${TMDD_N93R1058_Send_Signal_Timing_Pattern_Upon_Request_Parameter}" REQUESTMESSAGE="${RequestMessage}" ERRORRESPONSEEXPECTED="${ErrorResponseExpected}" ERRORTYPEEXPECTED="${ErrorTypeExpected}"/>
          </testStep>
          <testStep functionId="Step 19 IF ErrorResponseExpected is not equal to TRUE THEN CONTINUE, OTHERWISE skip the following substeps.  Note: If a verification step fails, then test execution will proceed at the next subsequent Post Condition step, if present.  Otherwise, test execution will proceed to the final Exit step." passfailResult="False"/>
          <jl:if test="${!ErrorResponseExpected}">
               <testStep functionId="Step 19.1 VERIFY that an intersectionSignalTimingPatternInventoryMsg message was received." passfailResult="True">
                    <ri-MessageVerify msgType="RESPONSE" elementName="intersectionSignalTimingPatternInventoryMsg" instanceName="tmdd:intersectionSignalTimingPatternInventoryMsg" elementType="message" functionId="Looking for intersectionSignalTimingPatternInventoryMsg"/>
               </testStep>
               <testStep functionId="Step 19.2 VERIFY that an organization-information data frame exists within each instance of data frame intersectionSignalTimingPatternInventoryMsg.intersection-signal-timing-pattern-inventory-item" passfailResult="True">
                    <ri-MessageVerify msgType="RESPONSE" elementName="organization-information" instanceName="tmdd:intersectionSignalTimingPatternInventoryMsg.intersection-signal-timing-pattern-inventory-item" elementType="data-frame" functionId="Looking for intersectionSignalTimingPatternInventoryMsg.intersection-signal-timing-pattern-inventory-item"/>
               </testStep>
               <testStep functionId="Step 19.3 VERIFY that a device-id data element exists within each instance of data frame intersectionSignalTimingPatternInventoryMsg.intersection-signal-timing-pattern-inventory-item" passfailResult="True">
                    <ri-MessageVerify msgType="RESPONSE" elementName="device-id" instanceName="tmdd:intersectionSignalTimingPatternInventoryMsg.intersection-signal-timing-pattern-inventory-item" elementType="data-element" functionId="Looking for intersectionSignalTimingPatternInventoryMsg.intersection-signal-timing-pattern-inventory-item"/>
               </testStep>
               <testStep functionId="Step 19.4 VERIFY that a timing-pattern-id data element exists within each instance of data frame intersectionSignalTimingPatternInventoryMsg.intersection-signal-timing-pattern-inventory-item" passfailResult="True">
                    <ri-MessageVerify msgType="RESPONSE" elementName="timing-pattern-id" instanceName="tmdd:intersectionSignalTimingPatternInventoryMsg.intersection-signal-timing-pattern-inventory-item" elementType="data-element" functionId="Looking for intersectionSignalTimingPatternInventoryMsg.intersection-signal-timing-pattern-inventory-item"/>
               </testStep>
               <testStep functionId="Step 19.5 VERIFY that a cycle-length data element exists within each instance of data frame intersectionSignalTimingPatternInventoryMsg.intersection-signal-timing-pattern-inventory-item" passfailResult="True">
                    <ri-MessageVerify msgType="RESPONSE" elementName="cycle-length" instanceName="tmdd:intersectionSignalTimingPatternInventoryMsg.intersection-signal-timing-pattern-inventory-item" elementType="data-element" functionId="Looking for intersectionSignalTimingPatternInventoryMsg.intersection-signal-timing-pattern-inventory-item"/>
               </testStep>
               <testStep functionId="Step 19.6 VERIFY that an offset-time data element exists within each instance of data frame intersectionSignalTimingPatternInventoryMsg.intersection-signal-timing-pattern-inventory-item" passfailResult="True">
                    <ri-MessageVerify msgType="RESPONSE" elementName="offset-time" instanceName="tmdd:intersectionSignalTimingPatternInventoryMsg.intersection-signal-timing-pattern-inventory-item" elementType="data-element" functionId="Looking for intersectionSignalTimingPatternInventoryMsg.intersection-signal-timing-pattern-inventory-item"/>
               </testStep>
               <testStep functionId="Step 19.7 VERIFY that a phase-identifier data element exists within each instance of data frame intersectionSignalTimingPatternInventoryMsg.intersection-signal-timing-pattern-inventory-item.phase-tp-list.phases" passfailResult="True">
                    <ri-MessageVerify msgType="RESPONSE" elementName="phase-identifier" instanceName="tmdd:intersectionSignalTimingPatternInventoryMsg.intersection-signal-timing-pattern-inventory-item.phase-tp-list.phases" elementType="data-element" functionId="Looking for intersectionSignalTimingPatternInventoryMsg.intersection-signal-timing-pattern-inventory-item.phase-tp-list.phases"/>
               </testStep>
               <testStep functionId="Step 19.8 VERIFY that a coordinated-phase data element exists within each instance of data frame intersectionSignalTimingPatternInventoryMsg.intersection-signal-timing-pattern-inventory-item.phase-tp-list.phases" passfailResult="True">
                    <ri-MessageVerify msgType="RESPONSE" elementName="coordinated-phase" instanceName="tmdd:intersectionSignalTimingPatternInventoryMsg.intersection-signal-timing-pattern-inventory-item.phase-tp-list.phases" elementType="data-element" functionId="Looking for intersectionSignalTimingPatternInventoryMsg.intersection-signal-timing-pattern-inventory-item.phase-tp-list.phases"/>
               </testStep>
               <testStep functionId="Step 19.9 VERIFY that a split-mode data element exists within each instance of data frame intersectionSignalTimingPatternInventoryMsg.intersection-signal-timing-pattern-inventory-item.phase-tp-list.phases" passfailResult="True">
                    <ri-MessageVerify msgType="RESPONSE" elementName="split-mode" instanceName="tmdd:intersectionSignalTimingPatternInventoryMsg.intersection-signal-timing-pattern-inventory-item.phase-tp-list.phases" elementType="data-element" functionId="Looking for intersectionSignalTimingPatternInventoryMsg.intersection-signal-timing-pattern-inventory-item.phase-tp-list.phases"/>
               </testStep>
               <testStep functionId="Step 19.10 VERIFY that a phase-split data element exists within each instance of data frame intersectionSignalTimingPatternInventoryMsg.intersection-signal-timing-pattern-inventory-item.phase-tp-list.phases" passfailResult="True">
                    <ri-MessageVerify msgType="RESPONSE" elementName="phase-split" instanceName="tmdd:intersectionSignalTimingPatternInventoryMsg.intersection-signal-timing-pattern-inventory-item.phase-tp-list.phases" elementType="data-element" functionId="Looking for intersectionSignalTimingPatternInventoryMsg.intersection-signal-timing-pattern-inventory-item.phase-tp-list.phases"/>
               </testStep>
               <testStep functionId="Step 19.11 IF TMDD_N93R1066_Restrictions___Timing_Pattern_Supported is equal to TRUE THEN CONTINUE; OTHERWISE skip the following substeps." passFailResult="False"/>
               <jl:if test="${TMDD_N93R1066_Restrictions___Timing_Pattern_Supported}">
                    <testStep functionId="Step 19.11.1 VERIFY that a restrictions data frame exists within each instance of data frame intersectionSignalTimingPatternInventoryMsg.intersection-signal-timing-pattern-inventory-item" passfailResult="True">
                         <ri-MessageVerify msgType="RESPONSE" elementName="restrictions" instanceName="tmdd:intersectionSignalTimingPatternInventoryMsg.intersection-signal-timing-pattern-inventory-item" elementType="data-frame" functionId="Looking for intersectionSignalTimingPatternInventoryMsg.intersection-signal-timing-pattern-inventory-item"/>
                    </testStep>
               </jl:if>
               <testStep functionId="Step 19.12 IF TMDD_N93R1067_Description_of_Timing_Pattern_Supported is equal to TRUE THEN CONTINUE; OTHERWISE skip the following substeps." passFailResult="False"/>
               <jl:if test="${TMDD_N93R1067_Description_of_Timing_Pattern_Supported}">
                    <testStep functionId="Step 19.12.1 VERIFY that a timing-pattern-name data element exists within each instance of data frame intersectionSignalTimingPatternInventoryMsg.intersection-signal-timing-pattern-inventory-item" passfailResult="True">
                         <ri-MessageVerify msgType="RESPONSE" elementName="timing-pattern-name" instanceName="tmdd:intersectionSignalTimingPatternInventoryMsg.intersection-signal-timing-pattern-inventory-item" elementType="data-element" functionId="Looking for intersectionSignalTimingPatternInventoryMsg.intersection-signal-timing-pattern-inventory-item"/>
                    </testStep>
               </jl:if>
               <testStep functionId="Step 19.13 IF TMDD_N93R1068_Maximum_Green_Duration_Supported is equal to TRUE THEN CONTINUE; OTHERWISE skip the following substeps." passFailResult="False"/>
               <jl:if test="${TMDD_N93R1068_Maximum_Green_Duration_Supported}">
                    <testStep functionId="Step 19.13.1 VERIFY that a maximum-green-duration data element exists within each instance of data frame intersectionSignalTimingPatternInventoryMsg.intersection-signal-timing-pattern-inventory-item.phase-tp-list.phases" passfailResult="True">
                         <ri-MessageVerify msgType="RESPONSE" elementName="maximum-green-duration" instanceName="tmdd:intersectionSignalTimingPatternInventoryMsg.intersection-signal-timing-pattern-inventory-item.phase-tp-list.phases" elementType="data-element" functionId="Looking for intersectionSignalTimingPatternInventoryMsg.intersection-signal-timing-pattern-inventory-item.phase-tp-list.phases"/>
                    </testStep>
               </jl:if>
               <testStep functionId="Step 19.14 IF TMDD_N93R1069_Minimum_Green_Duration_Supported is equal to TRUE THEN CONTINUE; OTHERWISE skip the following substeps." passFailResult="False"/>
               <jl:if test="${TMDD_N93R1069_Minimum_Green_Duration_Supported}">
                    <testStep functionId="Step 19.14.1 VERIFY that a minimum-green-duration data element exists within each instance of data frame intersectionSignalTimingPatternInventoryMsg.intersection-signal-timing-pattern-inventory-item.phase-tp-list.phases" passfailResult="True">
                         <ri-MessageVerify msgType="RESPONSE" elementName="minimum-green-duration" instanceName="tmdd:intersectionSignalTimingPatternInventoryMsg.intersection-signal-timing-pattern-inventory-item.phase-tp-list.phases" elementType="data-element" functionId="Looking for intersectionSignalTimingPatternInventoryMsg.intersection-signal-timing-pattern-inventory-item.phase-tp-list.phases"/>
                    </testStep>
               </jl:if>
               <testStep functionId="Step 19.15 IF TMDD_N93R1070_Vehicle_Clearance_Duration_Supported is equal to TRUE THEN CONTINUE; OTHERWISE skip the following substeps." passFailResult="False"/>
               <jl:if test="${TMDD_N93R1070_Vehicle_Clearance_Duration_Supported}">
                    <testStep functionId="Step 19.15.1 VERIFY that a vehicle-clearance-duration data element exists within each instance of data frame intersectionSignalTimingPatternInventoryMsg.intersection-signal-timing-pattern-inventory-item.phase-tp-list.phases" passfailResult="True">
                         <ri-MessageVerify msgType="RESPONSE" elementName="vehicle-clearance-duration" instanceName="tmdd:intersectionSignalTimingPatternInventoryMsg.intersection-signal-timing-pattern-inventory-item.phase-tp-list.phases" elementType="data-element" functionId="Looking for intersectionSignalTimingPatternInventoryMsg.intersection-signal-timing-pattern-inventory-item.phase-tp-list.phases"/>
                    </testStep>
               </jl:if>
               <testStep functionId="Step 19.16 IF TMDD_N93R1071_Vehicle_Red_Duration_Supported is equal to TRUE THEN CONTINUE; OTHERWISE skip the following substeps." passFailResult="False"/>
               <jl:if test="${TMDD_N93R1071_Vehicle_Red_Duration_Supported}">
                    <testStep functionId="Step 19.16.1 VERIFY that a vehicle-red-duration data element exists within each instance of data frame intersectionSignalTimingPatternInventoryMsg.intersection-signal-timing-pattern-inventory-item.phase-tp-list.phases" passfailResult="True">
                         <ri-MessageVerify msgType="RESPONSE" elementName="vehicle-red-duration" instanceName="tmdd:intersectionSignalTimingPatternInventoryMsg.intersection-signal-timing-pattern-inventory-item.phase-tp-list.phases" elementType="data-element" functionId="Looking for intersectionSignalTimingPatternInventoryMsg.intersection-signal-timing-pattern-inventory-item.phase-tp-list.phases"/>
                    </testStep>
               </jl:if>
               <testStep functionId="Step 19.17 IF TMDD_N93R1072_Minimum_Walk_Duration_Supported is equal to TRUE THEN CONTINUE; OTHERWISE skip the following substeps." passFailResult="False"/>
               <jl:if test="${TMDD_N93R1072_Minimum_Walk_Duration_Supported}">
                    <testStep functionId="Step 19.17.1 VERIFY that a minimum-walk-duration data element exists within each instance of data frame intersectionSignalTimingPatternInventoryMsg.intersection-signal-timing-pattern-inventory-item.phase-tp-list.phases" passfailResult="True">
                         <ri-MessageVerify msgType="RESPONSE" elementName="minimum-walk-duration" instanceName="tmdd:intersectionSignalTimingPatternInventoryMsg.intersection-signal-timing-pattern-inventory-item.phase-tp-list.phases" elementType="data-element" functionId="Looking for intersectionSignalTimingPatternInventoryMsg.intersection-signal-timing-pattern-inventory-item.phase-tp-list.phases"/>
                    </testStep>
               </jl:if>
               <testStep functionId="Step 19.18 IF TMDD_N93R1073_Pedestrian_Clearance_Duration_Supported is equal to TRUE THEN CONTINUE; OTHERWISE skip the following substeps." passFailResult="False"/>
               <jl:if test="${TMDD_N93R1073_Pedestrian_Clearance_Duration_Supported}">
                    <testStep functionId="Step 19.18.1 VERIFY that a pedestrian-clearance-duration data element exists within each instance of data frame intersectionSignalTimingPatternInventoryMsg.intersection-signal-timing-pattern-inventory-item.phase-tp-list.phases" passfailResult="True">
                         <ri-MessageVerify msgType="RESPONSE" elementName="pedestrian-clearance-duration" instanceName="tmdd:intersectionSignalTimingPatternInventoryMsg.intersection-signal-timing-pattern-inventory-item.phase-tp-list.phases" elementType="data-element" functionId="Looking for intersectionSignalTimingPatternInventoryMsg.intersection-signal-timing-pattern-inventory-item.phase-tp-list.phases"/>
                    </testStep>
               </jl:if>
               <testStep functionId="Step 19.19 IF TMDD_N93R1074_Steady_dont_walk_Duration_Supported is equal to TRUE THEN CONTINUE; OTHERWISE skip the following substeps." passFailResult="False"/>
               <jl:if test="${TMDD_N93R1074_Steady_dont_walk_Duration_Supported}">
                    <testStep functionId="Step 19.19.1 VERIFY that a steady-dont-walk-duration data element exists within each instance of data frame intersectionSignalTimingPatternInventoryMsg.intersection-signal-timing-pattern-inventory-item.phase-tp-list.phases" passfailResult="True">
                         <ri-MessageVerify msgType="RESPONSE" elementName="steady-dont-walk-duration" instanceName="tmdd:intersectionSignalTimingPatternInventoryMsg.intersection-signal-timing-pattern-inventory-item.phase-tp-list.phases" elementType="data-element" functionId="Looking for intersectionSignalTimingPatternInventoryMsg.intersection-signal-timing-pattern-inventory-item.phase-tp-list.phases"/>
                    </testStep>
               </jl:if>
               <testStep functionId="Step 19.20 IF TMDD_N93R1075_Phase_Sequence_Information_Supported is equal to TRUE THEN CONTINUE; OTHERWISE skip the following substeps." passFailResult="False"/>
               <jl:if test="${TMDD_N93R1075_Phase_Sequence_Information_Supported}">
                    <testStep functionId="Step 19.20.1 VERIFY that a sequence-information data frame exists within each instance of data frame intersectionSignalTimingPatternInventoryMsg.intersection-signal-timing-pattern-inventory-item" passfailResult="True">
                         <ri-MessageVerify msgType="RESPONSE" elementName="sequence-information" instanceName="tmdd:intersectionSignalTimingPatternInventoryMsg.intersection-signal-timing-pattern-inventory-item" elementType="data-frame" functionId="Looking for intersectionSignalTimingPatternInventoryMsg.intersection-signal-timing-pattern-inventory-item"/>
                    </testStep>
               </jl:if>
               <testStep functionId="Step 19.21 IF TMDD_N93R1076_Timing_Pattern_Inventory_Date_and_Time_Change_Information_Supported is equal to TRUE THEN CONTINUE; OTHERWISE skip the following substeps." passFailResult="False"/>
               <jl:if test="${TMDD_N93R1076_Timing_Pattern_Inventory_Date_and_Time_Change_Information_Supported}">
                    <testStep functionId="Step 19.21.1 VERIFY that a last-update-time data frame exists within each instance of data frame intersectionSignalTimingPatternInventoryMsg.intersection-signal-timing-pattern-inventory-item" passfailResult="True">
                         <ri-MessageVerify msgType="RESPONSE" elementName="last-update-time" instanceName="tmdd:intersectionSignalTimingPatternInventoryMsg.intersection-signal-timing-pattern-inventory-item" elementType="data-frame" functionId="Looking for intersectionSignalTimingPatternInventoryMsg.intersection-signal-timing-pattern-inventory-item"/>
                    </testStep>
               </jl:if>
               <testStep functionId="Step 19.22 VERIFY that the values within the RESPONSE message are correct per the TMDD standard and known operational conditions.">
                    <AUTO-VERIFY-MESSAGE functionId="Automatically Verify message content" msgName="RESPONSE" verificationSpec="${VerificationSpec}"/>
                    <USER-VERIFY-MESSAGE functionId="The User Verifies the message content" msgName="RESPONSE" optionList="TMDD_N93R1046_Restrictions___Timing_Pattern_Supported,restrictions,tmdd:intersectionSignalTimingPatternInventoryMsg.intersection-signal-timing-pattern-inventory-item;TMDD_N93R1047_Description_of_Timing_Pattern_Supported,timing-pattern-name,tmdd:intersectionSignalTimingPatternInventoryMsg.intersection-signal-timing-pattern-inventory-item;TMDD_N93R1045_Maximum_Green_Duration_Supported,maximum-green-duration,tmdd:intersectionSignalTimingPatternInventoryMsg.intersection-signal-timing-pattern-inventory-item.phase-tp-list.phases;TMDD_N93R1046_Minimum_Green_Duration_Supported,minimum-green-duration,tmdd:intersectionSignalTimingPatternInventoryMsg.intersection-signal-timing-pattern-inventory-item.phase-tp-list.phases;TMDD_N93R1047_Vehicle_Clearance_Duration_Supported,vehicle-clearance-duration,tmdd:intersectionSignalTimingPatternInventoryMsg.intersection-signal-timing-pattern-inventory-item.phase-tp-list.phases;TMDD_N93R1045_Vehicle_Red_Duration_Supported,vehicle-red-duration,tmdd:intersectionSignalTimingPatternInventoryMsg.intersection-signal-timing-pattern-inventory-item.phase-tp-list.phases;TMDD_N93R1046_Minimum_Walk_Duration_Supported,minimum-walk-duration,tmdd:intersectionSignalTimingPatternInventoryMsg.intersection-signal-timing-pattern-inventory-item.phase-tp-list.phases;TMDD_N93R1047_Pedestrian_Clearance_Duration_Supported,pedestrian-clearance-duration,tmdd:intersectionSignalTimingPatternInventoryMsg.intersection-signal-timing-pattern-inventory-item.phase-tp-list.phases;TMDD_N93R1074_Steady_dont_walk_Duration_Supported,steady-dont-walk-duration,tmdd:intersectionSignalTimingPatternInventoryMsg.intersection-signal-timing-pattern-inventory-item.phase-tp-list.phases;TMDD_N93R1075_Phase_Sequence_Information_Supported,sequence-information,tmdd:intersectionSignalTimingPatternInventoryMsg.intersection-signal-timing-pattern-inventory-item;TMDD_N93R1076_Timing_Pattern_Inventory_Date_and_Time_Change_Information_Supported,last-update-time,tmdd:intersectionSignalTimingPatternInventoryMsg.intersection-signal-timing-pattern-inventory-item;TMDD_N93R15_Restrictions___Error_Report_Supported,restrictions,tmdd:errorReportMsg;" userDataFile="${RI_USERTCDATAFILE}"/>
               </testStep>
          </jl:if>
          <testStep functionId="Step 20 IF ErrorResponseExpected is equal to TRUE THEN CONTINUE, OTHERWISE skip the following substeps.  If a verification step fails, then test execution will proceed at the next subsequent Post Condition step, if present.  Otherwise, test execution will proceed to the final Exit step." passfailResult="False"/>
          <jl:if test="${ErrorResponseExpected}">
               <testStep functionId="Step 20.1 VERIFY that an errorReportMsg message was received." passfailResult="True">
                    <ri-MessageVerify msgType="RESPONSE" elementName="errorReportMsg" instanceName="tmdd:errorReportMsg" elementType="message" functionId="Looking for errorReportMsg"/>
               </testStep>
               <testStep functionId="Step 20.2 VERIFY that an organization-information data frame exists within message errorReportMsg." passfailResult="True">
                    <ri-MessageVerify msgType="RESPONSE" elementName="organization-information" instanceName="tmdd:errorReportMsg" elementType="data-frame" functionId="Looking for errorReportMsg"/>
               </testStep>
               <testStep functionId="Step 20.3 VERIFY that an organization-requesting data frame exists within message errorReportMsg." passfailResult="True">
                    <ri-MessageVerify msgType="RESPONSE" elementName="organization-requesting" instanceName="tmdd:errorReportMsg" elementType="data-frame" functionId="Looking for errorReportMsg"/>
               </testStep>
               <testStep functionId="Step 20.4 VERIFY that an error-code data element exists within message errorReportMsg." passfailResult="True">
                    <ri-MessageVerify msgType="RESPONSE" elementName="error-code" instanceName="tmdd:errorReportMsg" elementType="data-element" functionId="Looking for errorReportMsg"/>
               </testStep>
               <testStep functionId="Step 20.5 VERIFY that an error-text data element exists within message errorReportMsg." passfailResult="True">
                    <ri-MessageVerify msgType="RESPONSE" elementName="error-text" instanceName="tmdd:errorReportMsg" elementType="data-element" functionId="Looking for errorReportMsg"/>
               </testStep>
               <testStep functionId="Step 20.6 VERIFY that data element error-code is set to ErrorResponseTypeExpected." passfailResult="True">
                    <ri-MessageVerify msgType="RESPONSE" elementName="error-code" instanceName="tmdd:errorReportMsg" instanceValue="${ErrorResponseTypeExpected}" elementType="data-element" functionId="Looking for errorReportMsg"/>
               </testStep>
               <testStep functionId="Step 20.7 IF TMDD_N93R15_Restrictions___Error_Report_Supported is equal to TRUE THEN CONTINUE; OTHERWISE skip the following substeps." passFailResult="False"/>
               <jl:if test="${TMDD_N93R15_Restrictions___Error_Report_Supported}">
                    <testStep functionId="Step 20.7.1 VERIFY that a restrictions data frame exists within message errorReportMsg." passfailResult="True">
                         <ri-MessageVerify msgType="RESPONSE" elementName="restrictions" instanceName="tmdd:errorReportMsg" elementType="data-frame" functionId="Looking for errorReportMsg"/>
                    </testStep>
               </jl:if>
          </jl:if>
          <postcondition>
               <testStep functionId=" Step 21 EXIT" passfailResult="False"/>
          </postcondition>
     </C2CRI-session>
</testprocedure>