<?xml version="1.0" encoding="UTF-8"?>
<!--Title:  TPS-98-dlDeviceInformationSubscription-OC
       Description:  This test procedure is called by a test case and is used to verify the SUTs support of the dlDeviceInformationSubscription dialog as an OC using variables provided by the calling test case.  
This procedure supports verification of requirements related to user need 2.3.5.10.13 [Need to Share Section Status] and is used for both valid and invalid test cases.
       Version/Date: 2014/01/18 00:55:27-->
<testprocedure xmlns="jelly:jameleon" xmlns:jl="jelly:core">
     <test-case-id>${C2CRITestCaseID}</test-case-id>
     <test-case-summary>This test procedure is called by a test case and is used to verify the SUTs support of the dlDeviceInformationSubscription dialog as an OC using variables provided by the calling test case.  
This procedure supports verification of requirements related to user need 2.3.5.10.13 [Need to Share Section Status] and is used for both valid and invalid test cases.</test-case-summary>
     <testStep functionId="Step 1 CONFIGURE: Determine the Application Layer Standard that will be used for this test.  RECORD this information as: ApplicationLayerStandard:  ${ApplicationLayerStandard}" passfailResult="False "/>
     <testStep functionId="Step 2 CONFIGURE: Determine the dialog performance requirement for Publish Section Status Information (NTRM 3.3.5.11.8.2}.  RECORD this value as: TMDD_N98R1046_Publish_Section_Status_Information_Parameter = ${TMDD_N98R1046_Publish_Section_Status_Information_Parameter}" passfailResult="False"/>
     <testStep functionId="Step 3 CONFIGURE: Determine the dialog performance requirement for Subscribe to Section Status Information (NTRM 3.3.5.11.8.3}.  RECORD this value as: TMDD_N98R1047_Subscribe_to_Section_Status_Information_Parameter = ${TMDD_N98R1047_Subscribe_to_Section_Status_Information_Parameter}" passfailResult="False"/>
     <testStep functionId="Step 4 CONFIGURE: Determine whether Restrictions - Error Report is required by the specification. (NRTM 3.3.1.4.1.2.1).  RECORD this information as: TMDD_N98R14_Restrictions___Error_Report_Supported = ${TMDD_N98R14_Restrictions___Error_Report_Supported}" passfailResult="False"/>
     <testStep functionId="Step 5 CONFIGURE: Determine whether Restrictions - Section Status is required by the specification. (NRTM 3.3.5.11.8.5.2.1).  RECORD this information as: TMDD_N98R1051_Restrictions___Section_Status_Supported = ${TMDD_N98R1051_Restrictions___Section_Status_Supported}" passfailResult="False"/>
     <testStep functionId="Step 6 CONFIGURE: Determine whether Section Name is required by the specification. (NRTM 3.3.5.11.8.5.2.2).  RECORD this information as: TMDD_N98R1052_Section_Name_Supported = ${TMDD_N98R1052_Section_Name_Supported}" passfailResult="False"/>
     <testStep functionId="Step 7 CONFIGURE: Determine whether Description of Timing Pattern - Section Status is required by the specification. (NRTM 3.3.5.11.8.5.2.3).  RECORD this information as: TMDD_N98R1053_Description_of_Timing_Pattern___Section_Status_Supported = ${TMDD_N98R1053_Description_of_Timing_Pattern___Section_Status_Supported}" passfailResult="False"/>
     <testStep functionId="Step 8 CONFIGURE: Determine whether Cycle Length - Section Status is required by the specification. (NRTM 3.3.5.11.8.5.2.4).  RECORD this information as: TMDD_N98R1054_Cycle_Length___Section_Status_Supported = ${TMDD_N98R1054_Cycle_Length___Section_Status_Supported}" passfailResult="False"/>
     <testStep functionId="Step 9 CONFIGURE: Determine whether Operator Identifier - Section Status is required by the specification. (NRTM 3.3.5.11.8.5.2.5).  RECORD this information as: TMDD_N98R1055_Operator_Identifier___Section_Status_Supported = ${TMDD_N98R1055_Operator_Identifier___Section_Status_Supported}" passfailResult="False"/>
     <testStep functionId="Step 10 CONFIGURE: Determine whether Event Identifier - Section Status is required by the specification. (NRTM 3.3.5.11.8.5.2.6).  RECORD this information as: TMDD_N98R1056_Event_Identifier___Section_Status_Supported = ${TMDD_N98R1056_Event_Identifier___Section_Status_Supported}" passfailResult="False"/>
     <testStep functionId="Step 11 CONFIGURE: Determine whether Event Response Plan - Section Status is required by the specification. (NRTM 3.3.5.11.8.5.2.7).  RECORD this information as: TMDD_N98R1057_Event_Response_Plan___Section_Status_Supported = ${TMDD_N98R1057_Event_Response_Plan___Section_Status_Supported}" passfailResult="False"/>
     <testStep functionId="Step 12 CONFIGURE: Determine whether Section Status Date and Time Change Information is required by the specification. (NRTM 3.3.5.11.8.5.2.8).  RECORD this information as: TMDD_N98R1058_Section_Status_Date_and_Time_Change_Information_Supported = ${TMDD_N98R1058_Section_Status_Date_and_Time_Change_Information_Supported}" passfailResult="False"/>
     <C2CRI-session beginSession="true" infoStd="TMDDv3.03c" appStd="${ApplicationLayerStandard}" useWSDL="true" testCaseIdentifier="${C2CRITestCaseID}" riMode="EC">
          <testStep functionId="Step 13 CONFIGURE: Determine the number of publication message transmissions that will be received within this test.  RECORD this information as: PublicationsToReceive:  ${PublicationsToReceive}" passfailResult="False"/>
          <testStep functionId="Step 14 CONFIGURE: Determine whether an error response message is expected for this test.  RECORD this information as: PublicationErrorResponseExpected:  ${PublicationErrorResponseExpected}" passfailResult="False"/>
          <jl:if test="${PublicationErrorResponseExpected}">
               <testStep functionId="Step 15 CONFIGURE: IF PublicationErrorResponseExpected is true, determine the expected error code response for this test.  RECORD this information as:  PublicationErrorTypeExpected:  ${PublicationErrorTypeExpected}" passfailResult="False"/>
          </jl:if>
          <testStep functionId="Step 16 CONFIGURE: Define the publication response message that will be sent to the SUT.  RECORD this information as: PublicationResponseMessage:  ${PublicationResponseMessage}" passfailResult="False"/>
          <testStep functionId="Step 17 CONFIGURE: Determine whether the Authentication parameters need to be verified within this test.  RECORD this information as: AuthenticationCheck:  ${AuthenticationCheck}" passfailResult="False"/>
          <testStep functionId="Step 18 CONFIGURE: Determine whether the SUT will be allowed access to the information requested in this test.  RECORD this information as: AllowAccess:  ${AllowAccess}" passfailResult="False"/>
          <testStep functionId="Step 19 CONFIGURE: Define the subscription message that will be sent to the SUT.  RECORD this information as: SubscriptionMessage:  ${SubscriptionMessage}" passfailResult="False"/>
          <testStep functionId="Step 20 CONFIGURE: Determine whether an error response message is expected for this test.  RECORD this information as: SubscriptionErrorResponseExpected:  ${SubscriptionErrorResponseExpected}" passfailResult="False"/>
          <jl:if test="${SubscriptionErrorResponseExpected}">
               <testStep functionId="Step 21 CONFIGURE: IF SubscriptionErrorResponseExpected is true, determine the expected error code response for this test.  RECORD this information as:  SubscriptionErrorTypeExpected:  ${SubscriptionErrorTypeExpected}" passfailResult="False"/>
          </jl:if>
          <testStep functionId="Step 22 SUBSCRIPTION-EC with the following parameters:   DIALOG=dlDeviceInformationSubscription RESPONSETIMEREQUIRED= SUBSCRIPTIONMESSAGE = SubscriptionMessage SUBSCRIPTIONERRORRESPONSEEXPECTED = SubscriptionErrorResponseExpected SUBSCRIPTIONERRORTYPEEXPECTED = SubscriptionErrorTypeExpected  Returns: CONTINUEPUBLICATION ">
               <SUBSCRIPTION-EC Dialog="dlDeviceInformationSubscription" functionId="dlDeviceInformationSubscription" RESPONSETIMEREQUIRED="60000" SUBSCRIPTIONMESSAGE="${SubscriptionMessage}" SUBSCRIPTIONERRORRESPONSEEXPECTED="${SubscriptionErrorResponseExpected}" SUBSCRIPTIONERRORTYPEEXPECTED="${SubscriptionErrorTypeExpected}"/>
          </testStep>
          <testStep functionId="Step 23 IF SubscriptionErrorResponseExpected is not equal to TRUE THEN CONTINUE, OTHERWISE skip the following substeps.  Note: If a verification step fails, then test execution will proceed at the next subsequent Post Condition step, if present.  Otherwise, test execution will proceed to the final Exit step." passfailResult="False"/>
          <jl:if test="${!SubscriptionErrorResponseExpected}">
               <testStep functionId="Step 23.1 WHILE CONTINUEPUBLICATION is equal to TRUE then CONTINUE, OTHERWISE skip the following substeps.  Note:If a verification step fails, then test execution will proceed at the next subsequent Post Condition step, if present.  Otherwise, test execution will proceed to the final Exit step."/>
               <jl:while test="${CONTINUEPUBLICATION}">
                    <testStep functionId="Step 23.1.1 PUBLICATION-EC-RECEIVE with the following parameters:   DIALOG=dlSectionStatusUpdate RESPONSETIMEREQUIRED=TMDD_N98R1046_Publish_Section_Status_Information_Parameter PUBLICATIONSTORECEIVE = PublicationsToReceive PUBLICATIONERRORRESPONSEEXPECTED = PublicationErrorResponseExpected PUBLICATIONERRORTYPEEXPECTED = PublicationErrorTypeExpected AUTHENTICATIONCHECK = AuthenticationCheck ALLOWACCESS = AllowAccess  Returns: CONTINUEPUBLICATION ">
                         <PUBLICATION-EC-RECEIVE Dialog="dlSectionStatusUpdate" functionId="dlSectionStatusUpdate" RESPONSETIMEREQUIRED="${TMDD_N98R1046_Publish_Section_Status_Information_Parameter}" PUBLICATIONSTORECEIVE="${PublicationsToReceive}" PUBLICATIONERRORRESPONSEEXPECTED="${PublicationErrorResponseExpected}" PUBLICATIONERRORTYPEEXPECTED="${PublicationErrorTypeExpected}" AUTHENTICATIONCHECK="${AuthenticationCheck}" ALLOWACCESS="${AllowAccess}"/>
                    </testStep>
                    <testStep functionId="Step 23.1.2 IF PublicationErrorResponseExpected is not equal to TRUE THEN CONTINUE, OTHERWISE skip the following substeps.  Note: If a verification step fails, then test execution will proceed at the next subsequent Post Condition step, if present.  Otherwise, test execution will proceed to the final Exit step." passfailResult="False"/>
                    <jl:if test="${!PublicationErrorResponseExpected}">
                         <testStep functionId="Step 23.1.2.1 VERIFY that a sectionStatusMsg message was received." passfailResult="True">
                              <ri-MessageVerify msgType="REQUEST" elementName="sectionStatusMsg" instanceName="tmdd:sectionStatusMsg" elementType="message" functionId="Looking for sectionStatusMsg"/>
                         </testStep>
                         <testStep functionId="Step 23.1.2.2 VERIFY that an organization-information data frame exists within each instance of data frame sectionStatusMsg.section-status-item" passfailResult="True">
                              <ri-MessageVerify msgType="REQUEST" elementName="organization-information" instanceName="tmdd:sectionStatusMsg.section-status-item" elementType="data-frame" functionId="Looking for sectionStatusMsg.section-status-item"/>
                         </testStep>
                         <testStep functionId="Step 23.1.2.3 VERIFY that a section-id data element exists within each instance of data frame sectionStatusMsg.section-status-item" passfailResult="True">
                              <ri-MessageVerify msgType="REQUEST" elementName="section-id" instanceName="tmdd:sectionStatusMsg.section-status-item" elementType="data-element" functionId="Looking for sectionStatusMsg.section-status-item"/>
                         </testStep>
                         <testStep functionId="Step 23.1.2.4 VERIFY that a node-id-list data frame exists within each instance of data frame sectionStatusMsg.section-status-item" passfailResult="True">
                              <ri-MessageVerify msgType="REQUEST" elementName="node-id-list" instanceName="tmdd:sectionStatusMsg.section-status-item" elementType="data-element" functionId="Looking for sectionStatusMsg.section-status-item"/>
                         </testStep>
                         <testStep functionId="Step 23.1.2.5 VERIFY that a section-control-mode data element exists within each instance of data frame sectionStatusMsg.section-status-item" passfailResult="True">
                              <ri-MessageVerify msgType="REQUEST" elementName="section-control-mode" instanceName="tmdd:sectionStatusMsg.section-status-item" elementType="data-element" functionId="Looking for sectionStatusMsg.section-status-item"/>
                         </testStep>
                         <testStep functionId="Step 23.1.2.6 VERIFY that a timing-pattern-id data element exists within each instance of data frame sectionStatusMsg.section-status-item" passfailResult="True">
                              <ri-MessageVerify msgType="REQUEST" elementName="timing-pattern-id" instanceName="tmdd:sectionStatusMsg.section-status-item" elementType="data-element" functionId="Looking for sectionStatusMsg.section-status-item"/>
                         </testStep>
                         <testStep functionId="Step 23.1.2.7 IF TMDD_N98R1051_Restrictions___Section_Status_Supported is equal to TRUE THEN CONTINUE; OTHERWISE skip the following substeps." passFailResult="False"/>
                         <jl:if test="${TMDD_N98R1051_Restrictions___Section_Status_Supported}">
                              <testStep functionId="Step 23.1.2.7.1 VERIFY that a restrictions data frame exists within each instance of data frame sectionStatusMsg.section-status-item" passfailResult="True">
                                   <ri-MessageVerify msgType="REQUEST" elementName="restrictions" instanceName="tmdd:sectionStatusMsg.section-status-item" elementType="data-frame" functionId="Looking for sectionStatusMsg.section-status-item"/>
                              </testStep>
                         </jl:if>
                         <testStep functionId="Step 23.1.2.8 IF TMDD_N98R1052_Section_Name_Supported is equal to TRUE THEN CONTINUE; OTHERWISE skip the following substeps." passFailResult="False"/>
                         <jl:if test="${TMDD_N98R1052_Section_Name_Supported}">
                              <testStep functionId="Step 23.1.2.8.1 VERIFY that a section-name data element exists within each instance of data frame sectionStatusMsg.section-status-item" passfailResult="True">
                                   <ri-MessageVerify msgType="REQUEST" elementName="section-name" instanceName="tmdd:sectionStatusMsg.section-status-item" elementType="data-element" functionId="Looking for sectionStatusMsg.section-status-item"/>
                              </testStep>
                         </jl:if>
                         <testStep functionId="Step 23.1.2.9 IF TMDD_N98R1053_Description_of_Timing_Pattern___Section_Status_Supported is equal to TRUE THEN CONTINUE; OTHERWISE skip the following substeps." passFailResult="False"/>
                         <jl:if test="${TMDD_N98R1053_Description_of_Timing_Pattern___Section_Status_Supported}">
                              <testStep functionId="Step 23.1.2.9.1 VERIFY that a timing-pattern-name data element exists within each instance of data frame sectionStatusMsg.section-status-item" passfailResult="True">
                                   <ri-MessageVerify msgType="REQUEST" elementName="timing-pattern-name" instanceName="tmdd:sectionStatusMsg.section-status-item" elementType="data-element" functionId="Looking for sectionStatusMsg.section-status-item"/>
                              </testStep>
                         </jl:if>
                         <testStep functionId="Step 23.1.2.10 IF TMDD_N98R1054_Cycle_Length___Section_Status_Supported is equal to TRUE THEN CONTINUE; OTHERWISE skip the following substeps." passFailResult="False"/>
                         <jl:if test="${TMDD_N98R1054_Cycle_Length___Section_Status_Supported}">
                              <testStep functionId="Step 23.1.2.10.1 VERIFY that a cycle-time data element exists within each instance of data frame sectionStatusMsg.section-status-item" passfailResult="True">
                                   <ri-MessageVerify msgType="REQUEST" elementName="cycle-time" instanceName="tmdd:sectionStatusMsg.section-status-item" elementType="data-element" functionId="Looking for sectionStatusMsg.section-status-item"/>
                              </testStep>
                         </jl:if>
                         <testStep functionId="Step 23.1.2.11 IF TMDD_N98R1055_Operator_Identifier___Section_Status_Supported is equal to TRUE THEN CONTINUE; OTHERWISE skip the following substeps." passFailResult="False"/>
                         <jl:if test="${TMDD_N98R1055_Operator_Identifier___Section_Status_Supported}">
                              <testStep functionId="Step 23.1.2.11.1 VERIFY that an operator-id data element exists within each instance of data frame sectionStatusMsg.section-status-item" passfailResult="True">
                                   <ri-MessageVerify msgType="REQUEST" elementName="operator-id" instanceName="tmdd:sectionStatusMsg.section-status-item" elementType="data-element" functionId="Looking for sectionStatusMsg.section-status-item"/>
                              </testStep>
                         </jl:if>
                         <testStep functionId="Step 23.1.2.12 IF TMDD_N98R1056_Event_Identifier___Section_Status_Supported is equal to TRUE THEN CONTINUE; OTHERWISE skip the following substeps." passFailResult="False"/>
                         <jl:if test="${TMDD_N98R1056_Event_Identifier___Section_Status_Supported}">
                              <testStep functionId="Step 23.1.2.12.1 VERIFY that an event-id data element exists within each instance of data frame sectionStatusMsg.section-status-item" passfailResult="True">
                                   <ri-MessageVerify msgType="REQUEST" elementName="event-id" instanceName="tmdd:sectionStatusMsg.section-status-item" elementType="data-element" functionId="Looking for sectionStatusMsg.section-status-item"/>
                              </testStep>
                         </jl:if>
                         <testStep functionId="Step 23.1.2.13 IF TMDD_N98R1057_Event_Response_Plan___Section_Status_Supported is equal to TRUE THEN CONTINUE; OTHERWISE skip the following substeps." passFailResult="False"/>
                         <jl:if test="${TMDD_N98R1057_Event_Response_Plan___Section_Status_Supported}">
                              <testStep functionId="Step 23.1.2.13.1 VERIFY that a response-plan-id data element exists within each instance of data frame sectionStatusMsg.section-status-item" passfailResult="True">
                                   <ri-MessageVerify msgType="REQUEST" elementName="response-plan-id" instanceName="tmdd:sectionStatusMsg.section-status-item" elementType="data-element" functionId="Looking for sectionStatusMsg.section-status-item"/>
                              </testStep>
                         </jl:if>
                         <testStep functionId="Step 23.1.2.14 IF TMDD_N98R1058_Section_Status_Date_and_Time_Change_Information_Supported is equal to TRUE THEN CONTINUE; OTHERWISE skip the following substeps." passFailResult="False"/>
                         <jl:if test="${TMDD_N98R1058_Section_Status_Date_and_Time_Change_Information_Supported}">
                              <testStep functionId="Step 23.1.2.14.1 VERIFY that a last-comm-time data frame exists within each instance of data frame sectionStatusMsg.section-status-item" passfailResult="True">
                                   <ri-MessageVerify msgType="REQUEST" elementName="last-comm-time" instanceName="tmdd:sectionStatusMsg.section-status-item" elementType="data-frame" functionId="Looking for sectionStatusMsg.section-status-item"/>
                              </testStep>
                         </jl:if>
                         <testStep functionId="Step 23.1.2.15 VERIFY that the values within the REQUEST message are correct per the TMDD standard and known operational conditions.">
                              <AUTO-VERIFY-MESSAGE functionId="Automatically Verify message content" msgName="REQUEST" verificationSpec="${VerificationSpec}"/>
                              <USER-VERIFY-MESSAGE functionId="The User Verifies the message content" msgName="REQUEST" optionList="TMDD_N98R1051_Restrictions___Section_Status_Supported,restrictions,tmdd:sectionStatusMsg.section-status-item;TMDD_N98R1052_Section_Name_Supported,section-name,tmdd:sectionStatusMsg.section-status-item;TMDD_N98R1053_Description_of_Timing_Pattern___Section_Status_Supported,timing-pattern-name,tmdd:sectionStatusMsg.section-status-item;TMDD_N98R1054_Cycle_Length___Section_Status_Supported,cycle-time,tmdd:sectionStatusMsg.section-status-item;TMDD_N98R1055_Operator_Identifier___Section_Status_Supported,operator-id,tmdd:sectionStatusMsg.section-status-item;TMDD_N98R1056_Event_Identifier___Section_Status_Supported,event-id,tmdd:sectionStatusMsg.section-status-item;TMDD_N98R1057_Event_Response_Plan___Section_Status_Supported,response-plan-id,tmdd:sectionStatusMsg.section-status-item;TMDD_N98R1058_Section_Status_Date_and_Time_Change_Information_Supported,last-comm-time,tmdd:sectionStatusMsg.section-status-item;TMDD_N98R14_Restrictions___Error_Report_Supported,restrictions,tmdd:errorReportMsg;" userDataFile="${RI_USERTCDATAFILE}"/>
                         </testStep>
                         <testStep functionId=" Step 23.1.2.16 CONFIGURE: Set CONTENTVERIFIED to True" passfailResult="False">
                              <jl:set var="CONTENTVERIFIED" value="true"/>
                         </testStep>
                         <postcondition>
                              <testStep functionId="Step 23.1.2.17 POSTCONDITION: PUBLICATION-EC-REPLY with the following parameters:   DIALOG=dlSectionStatusUpdate RESPONSETIMEREQUIRED=TMDD_N98R1046_Publish_Section_Status_Information_Parameter CONTENTVERIFIED = CONTENTVERIFIED PUBLICATIONRESPONSEMESSAGE = PublicationResponseMessage ">
                                   <PUBLICATION-EC-REPLY Dialog="dlSectionStatusUpdate" functionId="dlSectionStatusUpdate" RESPONSETIMEREQUIRED="${TMDD_N98R1046_Publish_Section_Status_Information_Parameter}" CONTENTVERIFIED="${CONTENTVERIFIED}" PUBLICATIONRESPONSEMESSAGE="${PublicationResponseMessage}"/>
                              </testStep>
                         </postcondition>
                    </jl:if>
               </jl:while>
          </jl:if>
          <testStep functionId="Step 24 IF SubscriptionErrorResponseExpected is equal to TRUE THEN CONTINUE, OTHERWISE skip the following substeps.  If a verification step fails, then test execution will proceed at the next subsequent Post Condition step, if present.  Otherwise, test execution will proceed to the final Exit step." passfailResult="False"/>
          <jl:if test="${SubscriptionErrorResponseExpected}">
               <testStep functionId="Step 24.1 VERIFY that an errorReportMsg message was received." passfailResult="True">
                    <ri-MessageVerify msgType="RESPONSE" elementName="errorReportMsg" instanceName="tmdd:errorReportMsg" elementType="message" functionId="Looking for errorReportMsg"/>
               </testStep>
               <testStep functionId="Step 24.2 VERIFY that an organization-information data frame exists within message errorReportMsg." passfailResult="True">
                    <ri-MessageVerify msgType="RESPONSE" elementName="organization-information" instanceName="tmdd:errorReportMsg" elementType="data-frame" functionId="Looking for errorReportMsg"/>
               </testStep>
               <testStep functionId="Step 24.3 VERIFY that an organization-requesting data frame exists within message errorReportMsg." passfailResult="True">
                    <ri-MessageVerify msgType="RESPONSE" elementName="organization-requesting" instanceName="tmdd:errorReportMsg" elementType="data-frame" functionId="Looking for errorReportMsg"/>
               </testStep>
               <testStep functionId="Step 24.4 VERIFY that an error-code data element exists within message errorReportMsg." passfailResult="True">
                    <ri-MessageVerify msgType="RESPONSE" elementName="error-code" instanceName="tmdd:errorReportMsg" elementType="data-element" functionId="Looking for errorReportMsg"/>
               </testStep>
               <testStep functionId="Step 24.5 VERIFY that an error-text data element exists within message errorReportMsg." passfailResult="True">
                    <ri-MessageVerify msgType="RESPONSE" elementName="error-text" instanceName="tmdd:errorReportMsg" elementType="data-element" functionId="Looking for errorReportMsg"/>
               </testStep>
               <testStep functionId="Step 24.6 VERIFY that data element error-code is set to SubscriptionErrorResponseTypeExpected." passfailResult="True">
                    <ri-MessageVerify msgType="RESPONSE" elementName="error-code" instanceName="tmdd:errorReportMsg" instanceValue="${SubscriptionErrorResponseTypeExpected}" elementType="data-element" functionId="Looking for errorReportMsg"/>
               </testStep>
               <testStep functionId="Step 24.7 IF TMDD_N98R14_Restrictions___Error_Report_Supported is equal to TRUE THEN CONTINUE; OTHERWISE skip the following substeps." passFailResult="False"/>
               <jl:if test="${TMDD_N98R14_Restrictions___Error_Report_Supported}">
                    <testStep functionId="Step 24.7.1 VERIFY that a restrictions data frame exists within message errorReportMsg." passfailResult="True">
                         <ri-MessageVerify msgType="RESPONSE" elementName="restrictions" instanceName="tmdd:errorReportMsg" elementType="data-frame" functionId="Looking for errorReportMsg"/>
                    </testStep>
               </jl:if>
          </jl:if>
          <postcondition>
               <testStep functionId=" Step 25 EXIT" passfailResult="False"/>
          </postcondition>
     </C2CRI-session>
</testprocedure>